
test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006812  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000140  00800060  00006812  000068a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  008001a0  008001a0  000069e6  2**0
                  ALLOC
  3 .stab         00004e84  00000000  00000000  000069e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000d8c  00000000  00000000  0000b86c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  0000c5f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  0000c738  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  0000c8a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  0000e4f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  0000f3dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  0001018c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  000102ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  00010579  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00010d47  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e1       	ldi	r30, 0x12	; 18
      68:	f8 e6       	ldi	r31, 0x68	; 104
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a0 3a       	cpi	r26, 0xA0	; 160
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a0 ea       	ldi	r26, 0xA0	; 160
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a8 3a       	cpi	r26, 0xA8	; 168
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 8d 15 	call	0x2b1a	; 0x2b1a <main>
      8a:	0c 94 07 34 	jmp	0x680e	; 0x680e <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 d0 33 	jmp	0x67a0	; 0x67a0 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a8 e8       	ldi	r26, 0x88	; 136
     128:	b1 e0       	ldi	r27, 0x01	; 1
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 ec 33 	jmp	0x67d8	; 0x67d8 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 dc 33 	jmp	0x67b8	; 0x67b8 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 f8 33 	jmp	0x67f0	; 0x67f0 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 dc 33 	jmp	0x67b8	; 0x67b8 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 f8 33 	jmp	0x67f0	; 0x67f0 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 d0 33 	jmp	0x67a0	; 0x67a0 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	88 e8       	ldi	r24, 0x88	; 136
     496:	91 e0       	ldi	r25, 0x01	; 1
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 ec 33 	jmp	0x67d8	; 0x67d8 <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 dc 33 	jmp	0x67b8	; 0x67b8 <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 f8 33 	jmp	0x67f0	; 0x67f0 <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 dc 33 	jmp	0x67b8	; 0x67b8 <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 f8 33 	jmp	0x67f0	; 0x67f0 <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 dc 33 	jmp	0x67b8	; 0x67b8 <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 f8 33 	jmp	0x67f0	; 0x67f0 <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 e0 33 	jmp	0x67c0	; 0x67c0 <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 fc 33 	jmp	0x67f8	; 0x67f8 <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <Timer0_Inti>:

u32 ovf_numbers   = 0;
u32 initial_value = 0;

void Timer0_Inti(void)
{
     b46:	df 93       	push	r29
     b48:	cf 93       	push	r28
     b4a:	cd b7       	in	r28, 0x3d	; 61
     b4c:	de b7       	in	r29, 0x3e	; 62
	//normal mode
	Clr_Bit(TCCR0 , 3);
     b4e:	a3 e5       	ldi	r26, 0x53	; 83
     b50:	b0 e0       	ldi	r27, 0x00	; 0
     b52:	e3 e5       	ldi	r30, 0x53	; 83
     b54:	f0 e0       	ldi	r31, 0x00	; 0
     b56:	80 81       	ld	r24, Z
     b58:	87 7f       	andi	r24, 0xF7	; 247
     b5a:	8c 93       	st	X, r24
	Clr_Bit(TCCR0 , 6);
     b5c:	a3 e5       	ldi	r26, 0x53	; 83
     b5e:	b0 e0       	ldi	r27, 0x00	; 0
     b60:	e3 e5       	ldi	r30, 0x53	; 83
     b62:	f0 e0       	ldi	r31, 0x00	; 0
     b64:	80 81       	ld	r24, Z
     b66:	8f 7b       	andi	r24, 0xBF	; 191
     b68:	8c 93       	st	X, r24
	//GIE
	Set_Bit(SREG , 7);
     b6a:	af e5       	ldi	r26, 0x5F	; 95
     b6c:	b0 e0       	ldi	r27, 0x00	; 0
     b6e:	ef e5       	ldi	r30, 0x5F	; 95
     b70:	f0 e0       	ldi	r31, 0x00	; 0
     b72:	80 81       	ld	r24, Z
     b74:	80 68       	ori	r24, 0x80	; 128
     b76:	8c 93       	st	X, r24
	//PIE
	Set_Bit(TIMSK , 0);
     b78:	a9 e5       	ldi	r26, 0x59	; 89
     b7a:	b0 e0       	ldi	r27, 0x00	; 0
     b7c:	e9 e5       	ldi	r30, 0x59	; 89
     b7e:	f0 e0       	ldi	r31, 0x00	; 0
     b80:	80 81       	ld	r24, Z
     b82:	81 60       	ori	r24, 0x01	; 1
     b84:	8c 93       	st	X, r24

}
     b86:	cf 91       	pop	r28
     b88:	df 91       	pop	r29
     b8a:	08 95       	ret

00000b8c <Timer0_Start>:


void Timer0_Start(void)
{
     b8c:	df 93       	push	r29
     b8e:	cf 93       	push	r28
     b90:	cd b7       	in	r28, 0x3d	; 61
     b92:	de b7       	in	r29, 0x3e	; 62
	//prescaller 1024
		Set_Bit(TCCR0 , 0);
     b94:	a3 e5       	ldi	r26, 0x53	; 83
     b96:	b0 e0       	ldi	r27, 0x00	; 0
     b98:	e3 e5       	ldi	r30, 0x53	; 83
     b9a:	f0 e0       	ldi	r31, 0x00	; 0
     b9c:	80 81       	ld	r24, Z
     b9e:	81 60       	ori	r24, 0x01	; 1
     ba0:	8c 93       	st	X, r24
		Clr_Bit(TCCR0 , 1);
     ba2:	a3 e5       	ldi	r26, 0x53	; 83
     ba4:	b0 e0       	ldi	r27, 0x00	; 0
     ba6:	e3 e5       	ldi	r30, 0x53	; 83
     ba8:	f0 e0       	ldi	r31, 0x00	; 0
     baa:	80 81       	ld	r24, Z
     bac:	8d 7f       	andi	r24, 0xFD	; 253
     bae:	8c 93       	st	X, r24
		Set_Bit(TCCR0 , 2);
     bb0:	a3 e5       	ldi	r26, 0x53	; 83
     bb2:	b0 e0       	ldi	r27, 0x00	; 0
     bb4:	e3 e5       	ldi	r30, 0x53	; 83
     bb6:	f0 e0       	ldi	r31, 0x00	; 0
     bb8:	80 81       	ld	r24, Z
     bba:	84 60       	ori	r24, 0x04	; 4
     bbc:	8c 93       	st	X, r24
}
     bbe:	cf 91       	pop	r28
     bc0:	df 91       	pop	r29
     bc2:	08 95       	ret

00000bc4 <Timer0_Stop>:
void Timer0_Stop(void)
{
     bc4:	df 93       	push	r29
     bc6:	cf 93       	push	r28
     bc8:	cd b7       	in	r28, 0x3d	; 61
     bca:	de b7       	in	r29, 0x3e	; 62

		Clr_Bit(TCCR0 , 0);
     bcc:	a3 e5       	ldi	r26, 0x53	; 83
     bce:	b0 e0       	ldi	r27, 0x00	; 0
     bd0:	e3 e5       	ldi	r30, 0x53	; 83
     bd2:	f0 e0       	ldi	r31, 0x00	; 0
     bd4:	80 81       	ld	r24, Z
     bd6:	8e 7f       	andi	r24, 0xFE	; 254
     bd8:	8c 93       	st	X, r24
		Clr_Bit(TCCR0 , 1);
     bda:	a3 e5       	ldi	r26, 0x53	; 83
     bdc:	b0 e0       	ldi	r27, 0x00	; 0
     bde:	e3 e5       	ldi	r30, 0x53	; 83
     be0:	f0 e0       	ldi	r31, 0x00	; 0
     be2:	80 81       	ld	r24, Z
     be4:	8d 7f       	andi	r24, 0xFD	; 253
     be6:	8c 93       	st	X, r24
		Set_Bit(TCCR0 , 2);
     be8:	a3 e5       	ldi	r26, 0x53	; 83
     bea:	b0 e0       	ldi	r27, 0x00	; 0
     bec:	e3 e5       	ldi	r30, 0x53	; 83
     bee:	f0 e0       	ldi	r31, 0x00	; 0
     bf0:	80 81       	ld	r24, Z
     bf2:	84 60       	ori	r24, 0x04	; 4
     bf4:	8c 93       	st	X, r24

}
     bf6:	cf 91       	pop	r28
     bf8:	df 91       	pop	r29
     bfa:	08 95       	ret

00000bfc <TImer0_delay_ms>:
void TImer0_delay_ms(u32 desired_time)
{
     bfc:	df 93       	push	r29
     bfe:	cf 93       	push	r28
     c00:	cd b7       	in	r28, 0x3d	; 61
     c02:	de b7       	in	r29, 0x3e	; 62
     c04:	2c 97       	sbiw	r28, 0x0c	; 12
     c06:	0f b6       	in	r0, 0x3f	; 63
     c08:	f8 94       	cli
     c0a:	de bf       	out	0x3e, r29	; 62
     c0c:	0f be       	out	0x3f, r0	; 63
     c0e:	cd bf       	out	0x3d, r28	; 61
     c10:	69 87       	std	Y+9, r22	; 0x09
     c12:	7a 87       	std	Y+10, r23	; 0x0a
     c14:	8b 87       	std	Y+11, r24	; 0x0b
     c16:	9c 87       	std	Y+12, r25	; 0x0c
	u32 tick_time = (1024 / 8) ;   // us
     c18:	80 e8       	ldi	r24, 0x80	; 128
     c1a:	90 e0       	ldi	r25, 0x00	; 0
     c1c:	a0 e0       	ldi	r26, 0x00	; 0
     c1e:	b0 e0       	ldi	r27, 0x00	; 0
     c20:	8d 83       	std	Y+5, r24	; 0x05
     c22:	9e 83       	std	Y+6, r25	; 0x06
     c24:	af 83       	std	Y+7, r26	; 0x07
     c26:	b8 87       	std	Y+8, r27	; 0x08
	u32 ticks_no  =  (desired_time *1000) / tick_time ; // 256
     c28:	89 85       	ldd	r24, Y+9	; 0x09
     c2a:	9a 85       	ldd	r25, Y+10	; 0x0a
     c2c:	ab 85       	ldd	r26, Y+11	; 0x0b
     c2e:	bc 85       	ldd	r27, Y+12	; 0x0c
     c30:	28 ee       	ldi	r18, 0xE8	; 232
     c32:	33 e0       	ldi	r19, 0x03	; 3
     c34:	40 e0       	ldi	r20, 0x00	; 0
     c36:	50 e0       	ldi	r21, 0x00	; 0
     c38:	bc 01       	movw	r22, r24
     c3a:	cd 01       	movw	r24, r26
     c3c:	0e 94 68 33 	call	0x66d0	; 0x66d0 <__mulsi3>
     c40:	dc 01       	movw	r26, r24
     c42:	cb 01       	movw	r24, r22
     c44:	2d 81       	ldd	r18, Y+5	; 0x05
     c46:	3e 81       	ldd	r19, Y+6	; 0x06
     c48:	4f 81       	ldd	r20, Y+7	; 0x07
     c4a:	58 85       	ldd	r21, Y+8	; 0x08
     c4c:	bc 01       	movw	r22, r24
     c4e:	cd 01       	movw	r24, r26
     c50:	0e 94 93 33 	call	0x6726	; 0x6726 <__udivmodsi4>
     c54:	da 01       	movw	r26, r20
     c56:	c9 01       	movw	r24, r18
     c58:	89 83       	std	Y+1, r24	; 0x01
     c5a:	9a 83       	std	Y+2, r25	; 0x02
     c5c:	ab 83       	std	Y+3, r26	; 0x03
     c5e:	bc 83       	std	Y+4, r27	; 0x04

	// Calculate number of ovf interrupt
	ovf_numbers = ticks_no / 256 ;   //1
     c60:	89 81       	ldd	r24, Y+1	; 0x01
     c62:	9a 81       	ldd	r25, Y+2	; 0x02
     c64:	ab 81       	ldd	r26, Y+3	; 0x03
     c66:	bc 81       	ldd	r27, Y+4	; 0x04
     c68:	89 2f       	mov	r24, r25
     c6a:	9a 2f       	mov	r25, r26
     c6c:	ab 2f       	mov	r26, r27
     c6e:	bb 27       	eor	r27, r27
     c70:	80 93 a0 01 	sts	0x01A0, r24
     c74:	90 93 a1 01 	sts	0x01A1, r25
     c78:	a0 93 a2 01 	sts	0x01A2, r26
     c7c:	b0 93 a3 01 	sts	0x01A3, r27
		// preloa
	initial_value = 256 - (ticks_no % 256);  // 256 -0
     c80:	89 81       	ldd	r24, Y+1	; 0x01
     c82:	9a 81       	ldd	r25, Y+2	; 0x02
     c84:	ab 81       	ldd	r26, Y+3	; 0x03
     c86:	bc 81       	ldd	r27, Y+4	; 0x04
     c88:	9c 01       	movw	r18, r24
     c8a:	ad 01       	movw	r20, r26
     c8c:	30 70       	andi	r19, 0x00	; 0
     c8e:	40 70       	andi	r20, 0x00	; 0
     c90:	50 70       	andi	r21, 0x00	; 0
     c92:	80 e0       	ldi	r24, 0x00	; 0
     c94:	91 e0       	ldi	r25, 0x01	; 1
     c96:	a0 e0       	ldi	r26, 0x00	; 0
     c98:	b0 e0       	ldi	r27, 0x00	; 0
     c9a:	82 1b       	sub	r24, r18
     c9c:	93 0b       	sbc	r25, r19
     c9e:	a4 0b       	sbc	r26, r20
     ca0:	b5 0b       	sbc	r27, r21
     ca2:	80 93 a4 01 	sts	0x01A4, r24
     ca6:	90 93 a5 01 	sts	0x01A5, r25
     caa:	a0 93 a6 01 	sts	0x01A6, r26
     cae:	b0 93 a7 01 	sts	0x01A7, r27
	TCNT0 = initial_value;
     cb2:	e2 e5       	ldi	r30, 0x52	; 82
     cb4:	f0 e0       	ldi	r31, 0x00	; 0
     cb6:	80 91 a4 01 	lds	r24, 0x01A4
     cba:	90 91 a5 01 	lds	r25, 0x01A5
     cbe:	a0 91 a6 01 	lds	r26, 0x01A6
     cc2:	b0 91 a7 01 	lds	r27, 0x01A7
     cc6:	80 83       	st	Z, r24
	ovf_numbers++; //2
     cc8:	80 91 a0 01 	lds	r24, 0x01A0
     ccc:	90 91 a1 01 	lds	r25, 0x01A1
     cd0:	a0 91 a2 01 	lds	r26, 0x01A2
     cd4:	b0 91 a3 01 	lds	r27, 0x01A3
     cd8:	01 96       	adiw	r24, 0x01	; 1
     cda:	a1 1d       	adc	r26, r1
     cdc:	b1 1d       	adc	r27, r1
     cde:	80 93 a0 01 	sts	0x01A0, r24
     ce2:	90 93 a1 01 	sts	0x01A1, r25
     ce6:	a0 93 a2 01 	sts	0x01A2, r26
     cea:	b0 93 a3 01 	sts	0x01A3, r27

}
     cee:	2c 96       	adiw	r28, 0x0c	; 12
     cf0:	0f b6       	in	r0, 0x3f	; 63
     cf2:	f8 94       	cli
     cf4:	de bf       	out	0x3e, r29	; 62
     cf6:	0f be       	out	0x3f, r0	; 63
     cf8:	cd bf       	out	0x3d, r28	; 61
     cfa:	cf 91       	pop	r28
     cfc:	df 91       	pop	r29
     cfe:	08 95       	ret

00000d00 <SetPort_Dir>:
#include <avr/io.h>
#include "../../LIB/Bit_Math.h"
#include "../../LIB/Types.h"
#include "Intr.h"
void SetPort_Dir(u8 port,u8 dir)
{
     d00:	df 93       	push	r29
     d02:	cf 93       	push	r28
     d04:	00 d0       	rcall	.+0      	; 0xd06 <SetPort_Dir+0x6>
     d06:	00 d0       	rcall	.+0      	; 0xd08 <SetPort_Dir+0x8>
     d08:	cd b7       	in	r28, 0x3d	; 61
     d0a:	de b7       	in	r29, 0x3e	; 62
     d0c:	89 83       	std	Y+1, r24	; 0x01
     d0e:	6a 83       	std	Y+2, r22	; 0x02
	switch (port)
     d10:	89 81       	ldd	r24, Y+1	; 0x01
     d12:	28 2f       	mov	r18, r24
     d14:	30 e0       	ldi	r19, 0x00	; 0
     d16:	3c 83       	std	Y+4, r19	; 0x04
     d18:	2b 83       	std	Y+3, r18	; 0x03
     d1a:	8b 81       	ldd	r24, Y+3	; 0x03
     d1c:	9c 81       	ldd	r25, Y+4	; 0x04
     d1e:	81 30       	cpi	r24, 0x01	; 1
     d20:	91 05       	cpc	r25, r1
     d22:	d1 f0       	breq	.+52     	; 0xd58 <SetPort_Dir+0x58>
     d24:	2b 81       	ldd	r18, Y+3	; 0x03
     d26:	3c 81       	ldd	r19, Y+4	; 0x04
     d28:	22 30       	cpi	r18, 0x02	; 2
     d2a:	31 05       	cpc	r19, r1
     d2c:	2c f4       	brge	.+10     	; 0xd38 <SetPort_Dir+0x38>
     d2e:	8b 81       	ldd	r24, Y+3	; 0x03
     d30:	9c 81       	ldd	r25, Y+4	; 0x04
     d32:	00 97       	sbiw	r24, 0x00	; 0
     d34:	61 f0       	breq	.+24     	; 0xd4e <SetPort_Dir+0x4e>
     d36:	1e c0       	rjmp	.+60     	; 0xd74 <SetPort_Dir+0x74>
     d38:	2b 81       	ldd	r18, Y+3	; 0x03
     d3a:	3c 81       	ldd	r19, Y+4	; 0x04
     d3c:	22 30       	cpi	r18, 0x02	; 2
     d3e:	31 05       	cpc	r19, r1
     d40:	81 f0       	breq	.+32     	; 0xd62 <SetPort_Dir+0x62>
     d42:	8b 81       	ldd	r24, Y+3	; 0x03
     d44:	9c 81       	ldd	r25, Y+4	; 0x04
     d46:	83 30       	cpi	r24, 0x03	; 3
     d48:	91 05       	cpc	r25, r1
     d4a:	81 f0       	breq	.+32     	; 0xd6c <SetPort_Dir+0x6c>
     d4c:	13 c0       	rjmp	.+38     	; 0xd74 <SetPort_Dir+0x74>
	{
	case DIO_PORTA :DDRA=dir;  break;
     d4e:	ea e3       	ldi	r30, 0x3A	; 58
     d50:	f0 e0       	ldi	r31, 0x00	; 0
     d52:	8a 81       	ldd	r24, Y+2	; 0x02
     d54:	80 83       	st	Z, r24
     d56:	0e c0       	rjmp	.+28     	; 0xd74 <SetPort_Dir+0x74>
	case DIO_PORTB :DDRB=dir;  break;
     d58:	e7 e3       	ldi	r30, 0x37	; 55
     d5a:	f0 e0       	ldi	r31, 0x00	; 0
     d5c:	8a 81       	ldd	r24, Y+2	; 0x02
     d5e:	80 83       	st	Z, r24
     d60:	09 c0       	rjmp	.+18     	; 0xd74 <SetPort_Dir+0x74>
	case DIO_PORTC :DDRC=dir;  break;
     d62:	e4 e3       	ldi	r30, 0x34	; 52
     d64:	f0 e0       	ldi	r31, 0x00	; 0
     d66:	8a 81       	ldd	r24, Y+2	; 0x02
     d68:	80 83       	st	Z, r24
     d6a:	04 c0       	rjmp	.+8      	; 0xd74 <SetPort_Dir+0x74>
	case DIO_PORTD :DDRD=dir;  break;
     d6c:	e1 e3       	ldi	r30, 0x31	; 49
     d6e:	f0 e0       	ldi	r31, 0x00	; 0
     d70:	8a 81       	ldd	r24, Y+2	; 0x02
     d72:	80 83       	st	Z, r24

	}

}
     d74:	0f 90       	pop	r0
     d76:	0f 90       	pop	r0
     d78:	0f 90       	pop	r0
     d7a:	0f 90       	pop	r0
     d7c:	cf 91       	pop	r28
     d7e:	df 91       	pop	r29
     d80:	08 95       	ret

00000d82 <SetPort_Val>:
void SetPort_Val(u8 port,u8 val)
{
     d82:	df 93       	push	r29
     d84:	cf 93       	push	r28
     d86:	00 d0       	rcall	.+0      	; 0xd88 <SetPort_Val+0x6>
     d88:	00 d0       	rcall	.+0      	; 0xd8a <SetPort_Val+0x8>
     d8a:	cd b7       	in	r28, 0x3d	; 61
     d8c:	de b7       	in	r29, 0x3e	; 62
     d8e:	89 83       	std	Y+1, r24	; 0x01
     d90:	6a 83       	std	Y+2, r22	; 0x02
	switch (port)
     d92:	89 81       	ldd	r24, Y+1	; 0x01
     d94:	28 2f       	mov	r18, r24
     d96:	30 e0       	ldi	r19, 0x00	; 0
     d98:	3c 83       	std	Y+4, r19	; 0x04
     d9a:	2b 83       	std	Y+3, r18	; 0x03
     d9c:	8b 81       	ldd	r24, Y+3	; 0x03
     d9e:	9c 81       	ldd	r25, Y+4	; 0x04
     da0:	81 30       	cpi	r24, 0x01	; 1
     da2:	91 05       	cpc	r25, r1
     da4:	d1 f0       	breq	.+52     	; 0xdda <SetPort_Val+0x58>
     da6:	2b 81       	ldd	r18, Y+3	; 0x03
     da8:	3c 81       	ldd	r19, Y+4	; 0x04
     daa:	22 30       	cpi	r18, 0x02	; 2
     dac:	31 05       	cpc	r19, r1
     dae:	2c f4       	brge	.+10     	; 0xdba <SetPort_Val+0x38>
     db0:	8b 81       	ldd	r24, Y+3	; 0x03
     db2:	9c 81       	ldd	r25, Y+4	; 0x04
     db4:	00 97       	sbiw	r24, 0x00	; 0
     db6:	61 f0       	breq	.+24     	; 0xdd0 <SetPort_Val+0x4e>
     db8:	1e c0       	rjmp	.+60     	; 0xdf6 <SetPort_Val+0x74>
     dba:	2b 81       	ldd	r18, Y+3	; 0x03
     dbc:	3c 81       	ldd	r19, Y+4	; 0x04
     dbe:	22 30       	cpi	r18, 0x02	; 2
     dc0:	31 05       	cpc	r19, r1
     dc2:	81 f0       	breq	.+32     	; 0xde4 <SetPort_Val+0x62>
     dc4:	8b 81       	ldd	r24, Y+3	; 0x03
     dc6:	9c 81       	ldd	r25, Y+4	; 0x04
     dc8:	83 30       	cpi	r24, 0x03	; 3
     dca:	91 05       	cpc	r25, r1
     dcc:	81 f0       	breq	.+32     	; 0xdee <SetPort_Val+0x6c>
     dce:	13 c0       	rjmp	.+38     	; 0xdf6 <SetPort_Val+0x74>
	{
	case DIO_PORTA :PORTA=val ;  break;
     dd0:	eb e3       	ldi	r30, 0x3B	; 59
     dd2:	f0 e0       	ldi	r31, 0x00	; 0
     dd4:	8a 81       	ldd	r24, Y+2	; 0x02
     dd6:	80 83       	st	Z, r24
     dd8:	0e c0       	rjmp	.+28     	; 0xdf6 <SetPort_Val+0x74>
	case DIO_PORTB :PORTB=val ;  break;
     dda:	e8 e3       	ldi	r30, 0x38	; 56
     ddc:	f0 e0       	ldi	r31, 0x00	; 0
     dde:	8a 81       	ldd	r24, Y+2	; 0x02
     de0:	80 83       	st	Z, r24
     de2:	09 c0       	rjmp	.+18     	; 0xdf6 <SetPort_Val+0x74>
	case DIO_PORTC :PORTC=val ;  break;
     de4:	e5 e3       	ldi	r30, 0x35	; 53
     de6:	f0 e0       	ldi	r31, 0x00	; 0
     de8:	8a 81       	ldd	r24, Y+2	; 0x02
     dea:	80 83       	st	Z, r24
     dec:	04 c0       	rjmp	.+8      	; 0xdf6 <SetPort_Val+0x74>
	case DIO_PORTD :PORTD=val ;  break;
     dee:	e2 e3       	ldi	r30, 0x32	; 50
     df0:	f0 e0       	ldi	r31, 0x00	; 0
     df2:	8a 81       	ldd	r24, Y+2	; 0x02
     df4:	80 83       	st	Z, r24

	}

}
     df6:	0f 90       	pop	r0
     df8:	0f 90       	pop	r0
     dfa:	0f 90       	pop	r0
     dfc:	0f 90       	pop	r0
     dfe:	cf 91       	pop	r28
     e00:	df 91       	pop	r29
     e02:	08 95       	ret

00000e04 <SetPin_Dir>:
void SetPin_Dir(u8 port,u8 pin,u8 dir)
{
     e04:	df 93       	push	r29
     e06:	cf 93       	push	r28
     e08:	cd b7       	in	r28, 0x3d	; 61
     e0a:	de b7       	in	r29, 0x3e	; 62
     e0c:	29 97       	sbiw	r28, 0x09	; 9
     e0e:	0f b6       	in	r0, 0x3f	; 63
     e10:	f8 94       	cli
     e12:	de bf       	out	0x3e, r29	; 62
     e14:	0f be       	out	0x3f, r0	; 63
     e16:	cd bf       	out	0x3d, r28	; 61
     e18:	89 83       	std	Y+1, r24	; 0x01
     e1a:	6a 83       	std	Y+2, r22	; 0x02
     e1c:	4b 83       	std	Y+3, r20	; 0x03
	switch (dir)
     e1e:	8b 81       	ldd	r24, Y+3	; 0x03
     e20:	28 2f       	mov	r18, r24
     e22:	30 e0       	ldi	r19, 0x00	; 0
     e24:	39 87       	std	Y+9, r19	; 0x09
     e26:	28 87       	std	Y+8, r18	; 0x08
     e28:	88 85       	ldd	r24, Y+8	; 0x08
     e2a:	99 85       	ldd	r25, Y+9	; 0x09
     e2c:	00 97       	sbiw	r24, 0x00	; 0
     e2e:	09 f4       	brne	.+2      	; 0xe32 <SetPin_Dir+0x2e>
     e30:	75 c0       	rjmp	.+234    	; 0xf1c <SetPin_Dir+0x118>
     e32:	28 85       	ldd	r18, Y+8	; 0x08
     e34:	39 85       	ldd	r19, Y+9	; 0x09
     e36:	21 30       	cpi	r18, 0x01	; 1
     e38:	31 05       	cpc	r19, r1
     e3a:	09 f0       	breq	.+2      	; 0xe3e <SetPin_Dir+0x3a>
     e3c:	e2 c0       	rjmp	.+452    	; 0x1002 <SetPin_Dir+0x1fe>
	{
	case PIN_OUT :
		switch(port)
     e3e:	89 81       	ldd	r24, Y+1	; 0x01
     e40:	28 2f       	mov	r18, r24
     e42:	30 e0       	ldi	r19, 0x00	; 0
     e44:	3f 83       	std	Y+7, r19	; 0x07
     e46:	2e 83       	std	Y+6, r18	; 0x06
     e48:	8e 81       	ldd	r24, Y+6	; 0x06
     e4a:	9f 81       	ldd	r25, Y+7	; 0x07
     e4c:	81 30       	cpi	r24, 0x01	; 1
     e4e:	91 05       	cpc	r25, r1
     e50:	49 f1       	breq	.+82     	; 0xea4 <SetPin_Dir+0xa0>
     e52:	2e 81       	ldd	r18, Y+6	; 0x06
     e54:	3f 81       	ldd	r19, Y+7	; 0x07
     e56:	22 30       	cpi	r18, 0x02	; 2
     e58:	31 05       	cpc	r19, r1
     e5a:	2c f4       	brge	.+10     	; 0xe66 <SetPin_Dir+0x62>
     e5c:	8e 81       	ldd	r24, Y+6	; 0x06
     e5e:	9f 81       	ldd	r25, Y+7	; 0x07
     e60:	00 97       	sbiw	r24, 0x00	; 0
     e62:	61 f0       	breq	.+24     	; 0xe7c <SetPin_Dir+0x78>
     e64:	ce c0       	rjmp	.+412    	; 0x1002 <SetPin_Dir+0x1fe>
     e66:	2e 81       	ldd	r18, Y+6	; 0x06
     e68:	3f 81       	ldd	r19, Y+7	; 0x07
     e6a:	22 30       	cpi	r18, 0x02	; 2
     e6c:	31 05       	cpc	r19, r1
     e6e:	71 f1       	breq	.+92     	; 0xecc <SetPin_Dir+0xc8>
     e70:	8e 81       	ldd	r24, Y+6	; 0x06
     e72:	9f 81       	ldd	r25, Y+7	; 0x07
     e74:	83 30       	cpi	r24, 0x03	; 3
     e76:	91 05       	cpc	r25, r1
     e78:	e9 f1       	breq	.+122    	; 0xef4 <SetPin_Dir+0xf0>
     e7a:	c3 c0       	rjmp	.+390    	; 0x1002 <SetPin_Dir+0x1fe>
		{
		case DIO_PORTA : Set_Bit(DDRA,pin);break;
     e7c:	aa e3       	ldi	r26, 0x3A	; 58
     e7e:	b0 e0       	ldi	r27, 0x00	; 0
     e80:	ea e3       	ldi	r30, 0x3A	; 58
     e82:	f0 e0       	ldi	r31, 0x00	; 0
     e84:	80 81       	ld	r24, Z
     e86:	48 2f       	mov	r20, r24
     e88:	8a 81       	ldd	r24, Y+2	; 0x02
     e8a:	28 2f       	mov	r18, r24
     e8c:	30 e0       	ldi	r19, 0x00	; 0
     e8e:	81 e0       	ldi	r24, 0x01	; 1
     e90:	90 e0       	ldi	r25, 0x00	; 0
     e92:	02 2e       	mov	r0, r18
     e94:	02 c0       	rjmp	.+4      	; 0xe9a <SetPin_Dir+0x96>
     e96:	88 0f       	add	r24, r24
     e98:	99 1f       	adc	r25, r25
     e9a:	0a 94       	dec	r0
     e9c:	e2 f7       	brpl	.-8      	; 0xe96 <SetPin_Dir+0x92>
     e9e:	84 2b       	or	r24, r20
     ea0:	8c 93       	st	X, r24
     ea2:	af c0       	rjmp	.+350    	; 0x1002 <SetPin_Dir+0x1fe>
		case DIO_PORTB : Set_Bit(DDRB,pin);break;
     ea4:	a7 e3       	ldi	r26, 0x37	; 55
     ea6:	b0 e0       	ldi	r27, 0x00	; 0
     ea8:	e7 e3       	ldi	r30, 0x37	; 55
     eaa:	f0 e0       	ldi	r31, 0x00	; 0
     eac:	80 81       	ld	r24, Z
     eae:	48 2f       	mov	r20, r24
     eb0:	8a 81       	ldd	r24, Y+2	; 0x02
     eb2:	28 2f       	mov	r18, r24
     eb4:	30 e0       	ldi	r19, 0x00	; 0
     eb6:	81 e0       	ldi	r24, 0x01	; 1
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	02 2e       	mov	r0, r18
     ebc:	02 c0       	rjmp	.+4      	; 0xec2 <SetPin_Dir+0xbe>
     ebe:	88 0f       	add	r24, r24
     ec0:	99 1f       	adc	r25, r25
     ec2:	0a 94       	dec	r0
     ec4:	e2 f7       	brpl	.-8      	; 0xebe <SetPin_Dir+0xba>
     ec6:	84 2b       	or	r24, r20
     ec8:	8c 93       	st	X, r24
     eca:	9b c0       	rjmp	.+310    	; 0x1002 <SetPin_Dir+0x1fe>
		case DIO_PORTC : Set_Bit(DDRC,pin);break;
     ecc:	a4 e3       	ldi	r26, 0x34	; 52
     ece:	b0 e0       	ldi	r27, 0x00	; 0
     ed0:	e4 e3       	ldi	r30, 0x34	; 52
     ed2:	f0 e0       	ldi	r31, 0x00	; 0
     ed4:	80 81       	ld	r24, Z
     ed6:	48 2f       	mov	r20, r24
     ed8:	8a 81       	ldd	r24, Y+2	; 0x02
     eda:	28 2f       	mov	r18, r24
     edc:	30 e0       	ldi	r19, 0x00	; 0
     ede:	81 e0       	ldi	r24, 0x01	; 1
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	02 2e       	mov	r0, r18
     ee4:	02 c0       	rjmp	.+4      	; 0xeea <SetPin_Dir+0xe6>
     ee6:	88 0f       	add	r24, r24
     ee8:	99 1f       	adc	r25, r25
     eea:	0a 94       	dec	r0
     eec:	e2 f7       	brpl	.-8      	; 0xee6 <SetPin_Dir+0xe2>
     eee:	84 2b       	or	r24, r20
     ef0:	8c 93       	st	X, r24
     ef2:	87 c0       	rjmp	.+270    	; 0x1002 <SetPin_Dir+0x1fe>
		case DIO_PORTD : Set_Bit(DDRD,pin);break;
     ef4:	a1 e3       	ldi	r26, 0x31	; 49
     ef6:	b0 e0       	ldi	r27, 0x00	; 0
     ef8:	e1 e3       	ldi	r30, 0x31	; 49
     efa:	f0 e0       	ldi	r31, 0x00	; 0
     efc:	80 81       	ld	r24, Z
     efe:	48 2f       	mov	r20, r24
     f00:	8a 81       	ldd	r24, Y+2	; 0x02
     f02:	28 2f       	mov	r18, r24
     f04:	30 e0       	ldi	r19, 0x00	; 0
     f06:	81 e0       	ldi	r24, 0x01	; 1
     f08:	90 e0       	ldi	r25, 0x00	; 0
     f0a:	02 2e       	mov	r0, r18
     f0c:	02 c0       	rjmp	.+4      	; 0xf12 <SetPin_Dir+0x10e>
     f0e:	88 0f       	add	r24, r24
     f10:	99 1f       	adc	r25, r25
     f12:	0a 94       	dec	r0
     f14:	e2 f7       	brpl	.-8      	; 0xf0e <SetPin_Dir+0x10a>
     f16:	84 2b       	or	r24, r20
     f18:	8c 93       	st	X, r24
     f1a:	73 c0       	rjmp	.+230    	; 0x1002 <SetPin_Dir+0x1fe>
		}
		break;
	case PIN_IN :
		switch(port)
     f1c:	89 81       	ldd	r24, Y+1	; 0x01
     f1e:	28 2f       	mov	r18, r24
     f20:	30 e0       	ldi	r19, 0x00	; 0
     f22:	3d 83       	std	Y+5, r19	; 0x05
     f24:	2c 83       	std	Y+4, r18	; 0x04
     f26:	8c 81       	ldd	r24, Y+4	; 0x04
     f28:	9d 81       	ldd	r25, Y+5	; 0x05
     f2a:	81 30       	cpi	r24, 0x01	; 1
     f2c:	91 05       	cpc	r25, r1
     f2e:	59 f1       	breq	.+86     	; 0xf86 <SetPin_Dir+0x182>
     f30:	2c 81       	ldd	r18, Y+4	; 0x04
     f32:	3d 81       	ldd	r19, Y+5	; 0x05
     f34:	22 30       	cpi	r18, 0x02	; 2
     f36:	31 05       	cpc	r19, r1
     f38:	2c f4       	brge	.+10     	; 0xf44 <SetPin_Dir+0x140>
     f3a:	8c 81       	ldd	r24, Y+4	; 0x04
     f3c:	9d 81       	ldd	r25, Y+5	; 0x05
     f3e:	00 97       	sbiw	r24, 0x00	; 0
     f40:	69 f0       	breq	.+26     	; 0xf5c <SetPin_Dir+0x158>
     f42:	5f c0       	rjmp	.+190    	; 0x1002 <SetPin_Dir+0x1fe>
     f44:	2c 81       	ldd	r18, Y+4	; 0x04
     f46:	3d 81       	ldd	r19, Y+5	; 0x05
     f48:	22 30       	cpi	r18, 0x02	; 2
     f4a:	31 05       	cpc	r19, r1
     f4c:	89 f1       	breq	.+98     	; 0xfb0 <SetPin_Dir+0x1ac>
     f4e:	8c 81       	ldd	r24, Y+4	; 0x04
     f50:	9d 81       	ldd	r25, Y+5	; 0x05
     f52:	83 30       	cpi	r24, 0x03	; 3
     f54:	91 05       	cpc	r25, r1
     f56:	09 f4       	brne	.+2      	; 0xf5a <SetPin_Dir+0x156>
     f58:	40 c0       	rjmp	.+128    	; 0xfda <SetPin_Dir+0x1d6>
     f5a:	53 c0       	rjmp	.+166    	; 0x1002 <SetPin_Dir+0x1fe>
		{
		case DIO_PORTA : Clr_Bit(DDRA,pin);break;
     f5c:	aa e3       	ldi	r26, 0x3A	; 58
     f5e:	b0 e0       	ldi	r27, 0x00	; 0
     f60:	ea e3       	ldi	r30, 0x3A	; 58
     f62:	f0 e0       	ldi	r31, 0x00	; 0
     f64:	80 81       	ld	r24, Z
     f66:	48 2f       	mov	r20, r24
     f68:	8a 81       	ldd	r24, Y+2	; 0x02
     f6a:	28 2f       	mov	r18, r24
     f6c:	30 e0       	ldi	r19, 0x00	; 0
     f6e:	81 e0       	ldi	r24, 0x01	; 1
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	02 2e       	mov	r0, r18
     f74:	02 c0       	rjmp	.+4      	; 0xf7a <SetPin_Dir+0x176>
     f76:	88 0f       	add	r24, r24
     f78:	99 1f       	adc	r25, r25
     f7a:	0a 94       	dec	r0
     f7c:	e2 f7       	brpl	.-8      	; 0xf76 <SetPin_Dir+0x172>
     f7e:	80 95       	com	r24
     f80:	84 23       	and	r24, r20
     f82:	8c 93       	st	X, r24
     f84:	3e c0       	rjmp	.+124    	; 0x1002 <SetPin_Dir+0x1fe>
		case DIO_PORTB : Clr_Bit(DDRB,pin);break;
     f86:	a7 e3       	ldi	r26, 0x37	; 55
     f88:	b0 e0       	ldi	r27, 0x00	; 0
     f8a:	e7 e3       	ldi	r30, 0x37	; 55
     f8c:	f0 e0       	ldi	r31, 0x00	; 0
     f8e:	80 81       	ld	r24, Z
     f90:	48 2f       	mov	r20, r24
     f92:	8a 81       	ldd	r24, Y+2	; 0x02
     f94:	28 2f       	mov	r18, r24
     f96:	30 e0       	ldi	r19, 0x00	; 0
     f98:	81 e0       	ldi	r24, 0x01	; 1
     f9a:	90 e0       	ldi	r25, 0x00	; 0
     f9c:	02 2e       	mov	r0, r18
     f9e:	02 c0       	rjmp	.+4      	; 0xfa4 <SetPin_Dir+0x1a0>
     fa0:	88 0f       	add	r24, r24
     fa2:	99 1f       	adc	r25, r25
     fa4:	0a 94       	dec	r0
     fa6:	e2 f7       	brpl	.-8      	; 0xfa0 <SetPin_Dir+0x19c>
     fa8:	80 95       	com	r24
     faa:	84 23       	and	r24, r20
     fac:	8c 93       	st	X, r24
     fae:	29 c0       	rjmp	.+82     	; 0x1002 <SetPin_Dir+0x1fe>
		case DIO_PORTC : Clr_Bit(DDRC,pin);break;
     fb0:	a4 e3       	ldi	r26, 0x34	; 52
     fb2:	b0 e0       	ldi	r27, 0x00	; 0
     fb4:	e4 e3       	ldi	r30, 0x34	; 52
     fb6:	f0 e0       	ldi	r31, 0x00	; 0
     fb8:	80 81       	ld	r24, Z
     fba:	48 2f       	mov	r20, r24
     fbc:	8a 81       	ldd	r24, Y+2	; 0x02
     fbe:	28 2f       	mov	r18, r24
     fc0:	30 e0       	ldi	r19, 0x00	; 0
     fc2:	81 e0       	ldi	r24, 0x01	; 1
     fc4:	90 e0       	ldi	r25, 0x00	; 0
     fc6:	02 2e       	mov	r0, r18
     fc8:	02 c0       	rjmp	.+4      	; 0xfce <SetPin_Dir+0x1ca>
     fca:	88 0f       	add	r24, r24
     fcc:	99 1f       	adc	r25, r25
     fce:	0a 94       	dec	r0
     fd0:	e2 f7       	brpl	.-8      	; 0xfca <SetPin_Dir+0x1c6>
     fd2:	80 95       	com	r24
     fd4:	84 23       	and	r24, r20
     fd6:	8c 93       	st	X, r24
     fd8:	14 c0       	rjmp	.+40     	; 0x1002 <SetPin_Dir+0x1fe>
		case DIO_PORTD : Clr_Bit(DDRD,pin);break;
     fda:	a1 e3       	ldi	r26, 0x31	; 49
     fdc:	b0 e0       	ldi	r27, 0x00	; 0
     fde:	e1 e3       	ldi	r30, 0x31	; 49
     fe0:	f0 e0       	ldi	r31, 0x00	; 0
     fe2:	80 81       	ld	r24, Z
     fe4:	48 2f       	mov	r20, r24
     fe6:	8a 81       	ldd	r24, Y+2	; 0x02
     fe8:	28 2f       	mov	r18, r24
     fea:	30 e0       	ldi	r19, 0x00	; 0
     fec:	81 e0       	ldi	r24, 0x01	; 1
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	02 2e       	mov	r0, r18
     ff2:	02 c0       	rjmp	.+4      	; 0xff8 <SetPin_Dir+0x1f4>
     ff4:	88 0f       	add	r24, r24
     ff6:	99 1f       	adc	r25, r25
     ff8:	0a 94       	dec	r0
     ffa:	e2 f7       	brpl	.-8      	; 0xff4 <SetPin_Dir+0x1f0>
     ffc:	80 95       	com	r24
     ffe:	84 23       	and	r24, r20
    1000:	8c 93       	st	X, r24
		}
		break;
	}

}
    1002:	29 96       	adiw	r28, 0x09	; 9
    1004:	0f b6       	in	r0, 0x3f	; 63
    1006:	f8 94       	cli
    1008:	de bf       	out	0x3e, r29	; 62
    100a:	0f be       	out	0x3f, r0	; 63
    100c:	cd bf       	out	0x3d, r28	; 61
    100e:	cf 91       	pop	r28
    1010:	df 91       	pop	r29
    1012:	08 95       	ret

00001014 <SetPin_Val>:
void SetPin_Val(u8 port,u8 pin,u8 val)
{
    1014:	df 93       	push	r29
    1016:	cf 93       	push	r28
    1018:	cd b7       	in	r28, 0x3d	; 61
    101a:	de b7       	in	r29, 0x3e	; 62
    101c:	29 97       	sbiw	r28, 0x09	; 9
    101e:	0f b6       	in	r0, 0x3f	; 63
    1020:	f8 94       	cli
    1022:	de bf       	out	0x3e, r29	; 62
    1024:	0f be       	out	0x3f, r0	; 63
    1026:	cd bf       	out	0x3d, r28	; 61
    1028:	89 83       	std	Y+1, r24	; 0x01
    102a:	6a 83       	std	Y+2, r22	; 0x02
    102c:	4b 83       	std	Y+3, r20	; 0x03
	switch (val)
    102e:	8b 81       	ldd	r24, Y+3	; 0x03
    1030:	28 2f       	mov	r18, r24
    1032:	30 e0       	ldi	r19, 0x00	; 0
    1034:	39 87       	std	Y+9, r19	; 0x09
    1036:	28 87       	std	Y+8, r18	; 0x08
    1038:	88 85       	ldd	r24, Y+8	; 0x08
    103a:	99 85       	ldd	r25, Y+9	; 0x09
    103c:	00 97       	sbiw	r24, 0x00	; 0
    103e:	09 f4       	brne	.+2      	; 0x1042 <SetPin_Val+0x2e>
    1040:	75 c0       	rjmp	.+234    	; 0x112c <SetPin_Val+0x118>
    1042:	28 85       	ldd	r18, Y+8	; 0x08
    1044:	39 85       	ldd	r19, Y+9	; 0x09
    1046:	21 30       	cpi	r18, 0x01	; 1
    1048:	31 05       	cpc	r19, r1
    104a:	09 f0       	breq	.+2      	; 0x104e <SetPin_Val+0x3a>
    104c:	e2 c0       	rjmp	.+452    	; 0x1212 <SetPin_Val+0x1fe>
	{
	case PIN_HIGH :
		switch(port)
    104e:	89 81       	ldd	r24, Y+1	; 0x01
    1050:	28 2f       	mov	r18, r24
    1052:	30 e0       	ldi	r19, 0x00	; 0
    1054:	3f 83       	std	Y+7, r19	; 0x07
    1056:	2e 83       	std	Y+6, r18	; 0x06
    1058:	8e 81       	ldd	r24, Y+6	; 0x06
    105a:	9f 81       	ldd	r25, Y+7	; 0x07
    105c:	81 30       	cpi	r24, 0x01	; 1
    105e:	91 05       	cpc	r25, r1
    1060:	49 f1       	breq	.+82     	; 0x10b4 <SetPin_Val+0xa0>
    1062:	2e 81       	ldd	r18, Y+6	; 0x06
    1064:	3f 81       	ldd	r19, Y+7	; 0x07
    1066:	22 30       	cpi	r18, 0x02	; 2
    1068:	31 05       	cpc	r19, r1
    106a:	2c f4       	brge	.+10     	; 0x1076 <SetPin_Val+0x62>
    106c:	8e 81       	ldd	r24, Y+6	; 0x06
    106e:	9f 81       	ldd	r25, Y+7	; 0x07
    1070:	00 97       	sbiw	r24, 0x00	; 0
    1072:	61 f0       	breq	.+24     	; 0x108c <SetPin_Val+0x78>
    1074:	ce c0       	rjmp	.+412    	; 0x1212 <SetPin_Val+0x1fe>
    1076:	2e 81       	ldd	r18, Y+6	; 0x06
    1078:	3f 81       	ldd	r19, Y+7	; 0x07
    107a:	22 30       	cpi	r18, 0x02	; 2
    107c:	31 05       	cpc	r19, r1
    107e:	71 f1       	breq	.+92     	; 0x10dc <SetPin_Val+0xc8>
    1080:	8e 81       	ldd	r24, Y+6	; 0x06
    1082:	9f 81       	ldd	r25, Y+7	; 0x07
    1084:	83 30       	cpi	r24, 0x03	; 3
    1086:	91 05       	cpc	r25, r1
    1088:	e9 f1       	breq	.+122    	; 0x1104 <SetPin_Val+0xf0>
    108a:	c3 c0       	rjmp	.+390    	; 0x1212 <SetPin_Val+0x1fe>
		{
		case DIO_PORTA : Set_Bit(PORTA,pin);break;
    108c:	ab e3       	ldi	r26, 0x3B	; 59
    108e:	b0 e0       	ldi	r27, 0x00	; 0
    1090:	eb e3       	ldi	r30, 0x3B	; 59
    1092:	f0 e0       	ldi	r31, 0x00	; 0
    1094:	80 81       	ld	r24, Z
    1096:	48 2f       	mov	r20, r24
    1098:	8a 81       	ldd	r24, Y+2	; 0x02
    109a:	28 2f       	mov	r18, r24
    109c:	30 e0       	ldi	r19, 0x00	; 0
    109e:	81 e0       	ldi	r24, 0x01	; 1
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	02 2e       	mov	r0, r18
    10a4:	02 c0       	rjmp	.+4      	; 0x10aa <SetPin_Val+0x96>
    10a6:	88 0f       	add	r24, r24
    10a8:	99 1f       	adc	r25, r25
    10aa:	0a 94       	dec	r0
    10ac:	e2 f7       	brpl	.-8      	; 0x10a6 <SetPin_Val+0x92>
    10ae:	84 2b       	or	r24, r20
    10b0:	8c 93       	st	X, r24
    10b2:	af c0       	rjmp	.+350    	; 0x1212 <SetPin_Val+0x1fe>
		case DIO_PORTB : Set_Bit(PORTB,pin);break;
    10b4:	a8 e3       	ldi	r26, 0x38	; 56
    10b6:	b0 e0       	ldi	r27, 0x00	; 0
    10b8:	e8 e3       	ldi	r30, 0x38	; 56
    10ba:	f0 e0       	ldi	r31, 0x00	; 0
    10bc:	80 81       	ld	r24, Z
    10be:	48 2f       	mov	r20, r24
    10c0:	8a 81       	ldd	r24, Y+2	; 0x02
    10c2:	28 2f       	mov	r18, r24
    10c4:	30 e0       	ldi	r19, 0x00	; 0
    10c6:	81 e0       	ldi	r24, 0x01	; 1
    10c8:	90 e0       	ldi	r25, 0x00	; 0
    10ca:	02 2e       	mov	r0, r18
    10cc:	02 c0       	rjmp	.+4      	; 0x10d2 <SetPin_Val+0xbe>
    10ce:	88 0f       	add	r24, r24
    10d0:	99 1f       	adc	r25, r25
    10d2:	0a 94       	dec	r0
    10d4:	e2 f7       	brpl	.-8      	; 0x10ce <SetPin_Val+0xba>
    10d6:	84 2b       	or	r24, r20
    10d8:	8c 93       	st	X, r24
    10da:	9b c0       	rjmp	.+310    	; 0x1212 <SetPin_Val+0x1fe>
		case DIO_PORTC : Set_Bit(PORTC,pin);break;
    10dc:	a5 e3       	ldi	r26, 0x35	; 53
    10de:	b0 e0       	ldi	r27, 0x00	; 0
    10e0:	e5 e3       	ldi	r30, 0x35	; 53
    10e2:	f0 e0       	ldi	r31, 0x00	; 0
    10e4:	80 81       	ld	r24, Z
    10e6:	48 2f       	mov	r20, r24
    10e8:	8a 81       	ldd	r24, Y+2	; 0x02
    10ea:	28 2f       	mov	r18, r24
    10ec:	30 e0       	ldi	r19, 0x00	; 0
    10ee:	81 e0       	ldi	r24, 0x01	; 1
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	02 2e       	mov	r0, r18
    10f4:	02 c0       	rjmp	.+4      	; 0x10fa <SetPin_Val+0xe6>
    10f6:	88 0f       	add	r24, r24
    10f8:	99 1f       	adc	r25, r25
    10fa:	0a 94       	dec	r0
    10fc:	e2 f7       	brpl	.-8      	; 0x10f6 <SetPin_Val+0xe2>
    10fe:	84 2b       	or	r24, r20
    1100:	8c 93       	st	X, r24
    1102:	87 c0       	rjmp	.+270    	; 0x1212 <SetPin_Val+0x1fe>
		case DIO_PORTD : Set_Bit(PORTD,pin);break;
    1104:	a2 e3       	ldi	r26, 0x32	; 50
    1106:	b0 e0       	ldi	r27, 0x00	; 0
    1108:	e2 e3       	ldi	r30, 0x32	; 50
    110a:	f0 e0       	ldi	r31, 0x00	; 0
    110c:	80 81       	ld	r24, Z
    110e:	48 2f       	mov	r20, r24
    1110:	8a 81       	ldd	r24, Y+2	; 0x02
    1112:	28 2f       	mov	r18, r24
    1114:	30 e0       	ldi	r19, 0x00	; 0
    1116:	81 e0       	ldi	r24, 0x01	; 1
    1118:	90 e0       	ldi	r25, 0x00	; 0
    111a:	02 2e       	mov	r0, r18
    111c:	02 c0       	rjmp	.+4      	; 0x1122 <SetPin_Val+0x10e>
    111e:	88 0f       	add	r24, r24
    1120:	99 1f       	adc	r25, r25
    1122:	0a 94       	dec	r0
    1124:	e2 f7       	brpl	.-8      	; 0x111e <SetPin_Val+0x10a>
    1126:	84 2b       	or	r24, r20
    1128:	8c 93       	st	X, r24
    112a:	73 c0       	rjmp	.+230    	; 0x1212 <SetPin_Val+0x1fe>
		}
		break;
	case PIN_LOW :
		switch(port)
    112c:	89 81       	ldd	r24, Y+1	; 0x01
    112e:	28 2f       	mov	r18, r24
    1130:	30 e0       	ldi	r19, 0x00	; 0
    1132:	3d 83       	std	Y+5, r19	; 0x05
    1134:	2c 83       	std	Y+4, r18	; 0x04
    1136:	8c 81       	ldd	r24, Y+4	; 0x04
    1138:	9d 81       	ldd	r25, Y+5	; 0x05
    113a:	81 30       	cpi	r24, 0x01	; 1
    113c:	91 05       	cpc	r25, r1
    113e:	59 f1       	breq	.+86     	; 0x1196 <SetPin_Val+0x182>
    1140:	2c 81       	ldd	r18, Y+4	; 0x04
    1142:	3d 81       	ldd	r19, Y+5	; 0x05
    1144:	22 30       	cpi	r18, 0x02	; 2
    1146:	31 05       	cpc	r19, r1
    1148:	2c f4       	brge	.+10     	; 0x1154 <SetPin_Val+0x140>
    114a:	8c 81       	ldd	r24, Y+4	; 0x04
    114c:	9d 81       	ldd	r25, Y+5	; 0x05
    114e:	00 97       	sbiw	r24, 0x00	; 0
    1150:	69 f0       	breq	.+26     	; 0x116c <SetPin_Val+0x158>
    1152:	5f c0       	rjmp	.+190    	; 0x1212 <SetPin_Val+0x1fe>
    1154:	2c 81       	ldd	r18, Y+4	; 0x04
    1156:	3d 81       	ldd	r19, Y+5	; 0x05
    1158:	22 30       	cpi	r18, 0x02	; 2
    115a:	31 05       	cpc	r19, r1
    115c:	89 f1       	breq	.+98     	; 0x11c0 <SetPin_Val+0x1ac>
    115e:	8c 81       	ldd	r24, Y+4	; 0x04
    1160:	9d 81       	ldd	r25, Y+5	; 0x05
    1162:	83 30       	cpi	r24, 0x03	; 3
    1164:	91 05       	cpc	r25, r1
    1166:	09 f4       	brne	.+2      	; 0x116a <SetPin_Val+0x156>
    1168:	40 c0       	rjmp	.+128    	; 0x11ea <SetPin_Val+0x1d6>
    116a:	53 c0       	rjmp	.+166    	; 0x1212 <SetPin_Val+0x1fe>
		{
		case DIO_PORTA : Clr_Bit(PORTA,pin);break;
    116c:	ab e3       	ldi	r26, 0x3B	; 59
    116e:	b0 e0       	ldi	r27, 0x00	; 0
    1170:	eb e3       	ldi	r30, 0x3B	; 59
    1172:	f0 e0       	ldi	r31, 0x00	; 0
    1174:	80 81       	ld	r24, Z
    1176:	48 2f       	mov	r20, r24
    1178:	8a 81       	ldd	r24, Y+2	; 0x02
    117a:	28 2f       	mov	r18, r24
    117c:	30 e0       	ldi	r19, 0x00	; 0
    117e:	81 e0       	ldi	r24, 0x01	; 1
    1180:	90 e0       	ldi	r25, 0x00	; 0
    1182:	02 2e       	mov	r0, r18
    1184:	02 c0       	rjmp	.+4      	; 0x118a <SetPin_Val+0x176>
    1186:	88 0f       	add	r24, r24
    1188:	99 1f       	adc	r25, r25
    118a:	0a 94       	dec	r0
    118c:	e2 f7       	brpl	.-8      	; 0x1186 <SetPin_Val+0x172>
    118e:	80 95       	com	r24
    1190:	84 23       	and	r24, r20
    1192:	8c 93       	st	X, r24
    1194:	3e c0       	rjmp	.+124    	; 0x1212 <SetPin_Val+0x1fe>
		case DIO_PORTB : Clr_Bit(PORTB,pin);break;
    1196:	a8 e3       	ldi	r26, 0x38	; 56
    1198:	b0 e0       	ldi	r27, 0x00	; 0
    119a:	e8 e3       	ldi	r30, 0x38	; 56
    119c:	f0 e0       	ldi	r31, 0x00	; 0
    119e:	80 81       	ld	r24, Z
    11a0:	48 2f       	mov	r20, r24
    11a2:	8a 81       	ldd	r24, Y+2	; 0x02
    11a4:	28 2f       	mov	r18, r24
    11a6:	30 e0       	ldi	r19, 0x00	; 0
    11a8:	81 e0       	ldi	r24, 0x01	; 1
    11aa:	90 e0       	ldi	r25, 0x00	; 0
    11ac:	02 2e       	mov	r0, r18
    11ae:	02 c0       	rjmp	.+4      	; 0x11b4 <SetPin_Val+0x1a0>
    11b0:	88 0f       	add	r24, r24
    11b2:	99 1f       	adc	r25, r25
    11b4:	0a 94       	dec	r0
    11b6:	e2 f7       	brpl	.-8      	; 0x11b0 <SetPin_Val+0x19c>
    11b8:	80 95       	com	r24
    11ba:	84 23       	and	r24, r20
    11bc:	8c 93       	st	X, r24
    11be:	29 c0       	rjmp	.+82     	; 0x1212 <SetPin_Val+0x1fe>
		case DIO_PORTC : Clr_Bit(PORTC,pin);break;
    11c0:	a5 e3       	ldi	r26, 0x35	; 53
    11c2:	b0 e0       	ldi	r27, 0x00	; 0
    11c4:	e5 e3       	ldi	r30, 0x35	; 53
    11c6:	f0 e0       	ldi	r31, 0x00	; 0
    11c8:	80 81       	ld	r24, Z
    11ca:	48 2f       	mov	r20, r24
    11cc:	8a 81       	ldd	r24, Y+2	; 0x02
    11ce:	28 2f       	mov	r18, r24
    11d0:	30 e0       	ldi	r19, 0x00	; 0
    11d2:	81 e0       	ldi	r24, 0x01	; 1
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	02 2e       	mov	r0, r18
    11d8:	02 c0       	rjmp	.+4      	; 0x11de <SetPin_Val+0x1ca>
    11da:	88 0f       	add	r24, r24
    11dc:	99 1f       	adc	r25, r25
    11de:	0a 94       	dec	r0
    11e0:	e2 f7       	brpl	.-8      	; 0x11da <SetPin_Val+0x1c6>
    11e2:	80 95       	com	r24
    11e4:	84 23       	and	r24, r20
    11e6:	8c 93       	st	X, r24
    11e8:	14 c0       	rjmp	.+40     	; 0x1212 <SetPin_Val+0x1fe>
		case DIO_PORTD : Clr_Bit(PORTD,pin);break;
    11ea:	a2 e3       	ldi	r26, 0x32	; 50
    11ec:	b0 e0       	ldi	r27, 0x00	; 0
    11ee:	e2 e3       	ldi	r30, 0x32	; 50
    11f0:	f0 e0       	ldi	r31, 0x00	; 0
    11f2:	80 81       	ld	r24, Z
    11f4:	48 2f       	mov	r20, r24
    11f6:	8a 81       	ldd	r24, Y+2	; 0x02
    11f8:	28 2f       	mov	r18, r24
    11fa:	30 e0       	ldi	r19, 0x00	; 0
    11fc:	81 e0       	ldi	r24, 0x01	; 1
    11fe:	90 e0       	ldi	r25, 0x00	; 0
    1200:	02 2e       	mov	r0, r18
    1202:	02 c0       	rjmp	.+4      	; 0x1208 <SetPin_Val+0x1f4>
    1204:	88 0f       	add	r24, r24
    1206:	99 1f       	adc	r25, r25
    1208:	0a 94       	dec	r0
    120a:	e2 f7       	brpl	.-8      	; 0x1204 <SetPin_Val+0x1f0>
    120c:	80 95       	com	r24
    120e:	84 23       	and	r24, r20
    1210:	8c 93       	st	X, r24
		}
		break;
	}

}
    1212:	29 96       	adiw	r28, 0x09	; 9
    1214:	0f b6       	in	r0, 0x3f	; 63
    1216:	f8 94       	cli
    1218:	de bf       	out	0x3e, r29	; 62
    121a:	0f be       	out	0x3f, r0	; 63
    121c:	cd bf       	out	0x3d, r28	; 61
    121e:	cf 91       	pop	r28
    1220:	df 91       	pop	r29
    1222:	08 95       	ret

00001224 <Get_PinVal>:
u8 Get_PinVal(u8 port,u8 pin)
{
    1224:	df 93       	push	r29
    1226:	cf 93       	push	r28
    1228:	00 d0       	rcall	.+0      	; 0x122a <Get_PinVal+0x6>
    122a:	00 d0       	rcall	.+0      	; 0x122c <Get_PinVal+0x8>
    122c:	00 d0       	rcall	.+0      	; 0x122e <Get_PinVal+0xa>
    122e:	cd b7       	in	r28, 0x3d	; 61
    1230:	de b7       	in	r29, 0x3e	; 62
    1232:	89 83       	std	Y+1, r24	; 0x01
    1234:	6a 83       	std	Y+2, r22	; 0x02
	switch(port)
    1236:	89 81       	ldd	r24, Y+1	; 0x01
    1238:	28 2f       	mov	r18, r24
    123a:	30 e0       	ldi	r19, 0x00	; 0
    123c:	3d 83       	std	Y+5, r19	; 0x05
    123e:	2c 83       	std	Y+4, r18	; 0x04
    1240:	4c 81       	ldd	r20, Y+4	; 0x04
    1242:	5d 81       	ldd	r21, Y+5	; 0x05
    1244:	41 30       	cpi	r20, 0x01	; 1
    1246:	51 05       	cpc	r21, r1
    1248:	49 f1       	breq	.+82     	; 0x129c <Get_PinVal+0x78>
    124a:	8c 81       	ldd	r24, Y+4	; 0x04
    124c:	9d 81       	ldd	r25, Y+5	; 0x05
    124e:	82 30       	cpi	r24, 0x02	; 2
    1250:	91 05       	cpc	r25, r1
    1252:	34 f4       	brge	.+12     	; 0x1260 <Get_PinVal+0x3c>
    1254:	2c 81       	ldd	r18, Y+4	; 0x04
    1256:	3d 81       	ldd	r19, Y+5	; 0x05
    1258:	21 15       	cp	r18, r1
    125a:	31 05       	cpc	r19, r1
    125c:	61 f0       	breq	.+24     	; 0x1276 <Get_PinVal+0x52>
    125e:	57 c0       	rjmp	.+174    	; 0x130e <Get_PinVal+0xea>
    1260:	4c 81       	ldd	r20, Y+4	; 0x04
    1262:	5d 81       	ldd	r21, Y+5	; 0x05
    1264:	42 30       	cpi	r20, 0x02	; 2
    1266:	51 05       	cpc	r21, r1
    1268:	61 f1       	breq	.+88     	; 0x12c2 <Get_PinVal+0x9e>
    126a:	8c 81       	ldd	r24, Y+4	; 0x04
    126c:	9d 81       	ldd	r25, Y+5	; 0x05
    126e:	83 30       	cpi	r24, 0x03	; 3
    1270:	91 05       	cpc	r25, r1
    1272:	d1 f1       	breq	.+116    	; 0x12e8 <Get_PinVal+0xc4>
    1274:	4c c0       	rjmp	.+152    	; 0x130e <Get_PinVal+0xea>
	{
	case DIO_PORTA : return get_Bit(PINA,pin);
    1276:	e9 e3       	ldi	r30, 0x39	; 57
    1278:	f0 e0       	ldi	r31, 0x00	; 0
    127a:	80 81       	ld	r24, Z
    127c:	28 2f       	mov	r18, r24
    127e:	30 e0       	ldi	r19, 0x00	; 0
    1280:	8a 81       	ldd	r24, Y+2	; 0x02
    1282:	88 2f       	mov	r24, r24
    1284:	90 e0       	ldi	r25, 0x00	; 0
    1286:	a9 01       	movw	r20, r18
    1288:	02 c0       	rjmp	.+4      	; 0x128e <Get_PinVal+0x6a>
    128a:	55 95       	asr	r21
    128c:	47 95       	ror	r20
    128e:	8a 95       	dec	r24
    1290:	e2 f7       	brpl	.-8      	; 0x128a <Get_PinVal+0x66>
    1292:	ca 01       	movw	r24, r20
    1294:	58 2f       	mov	r21, r24
    1296:	51 70       	andi	r21, 0x01	; 1
    1298:	5b 83       	std	Y+3, r21	; 0x03
    129a:	3a c0       	rjmp	.+116    	; 0x1310 <Get_PinVal+0xec>
	case DIO_PORTB : return get_Bit(PINB,pin);
    129c:	e6 e3       	ldi	r30, 0x36	; 54
    129e:	f0 e0       	ldi	r31, 0x00	; 0
    12a0:	80 81       	ld	r24, Z
    12a2:	28 2f       	mov	r18, r24
    12a4:	30 e0       	ldi	r19, 0x00	; 0
    12a6:	8a 81       	ldd	r24, Y+2	; 0x02
    12a8:	88 2f       	mov	r24, r24
    12aa:	90 e0       	ldi	r25, 0x00	; 0
    12ac:	a9 01       	movw	r20, r18
    12ae:	02 c0       	rjmp	.+4      	; 0x12b4 <Get_PinVal+0x90>
    12b0:	55 95       	asr	r21
    12b2:	47 95       	ror	r20
    12b4:	8a 95       	dec	r24
    12b6:	e2 f7       	brpl	.-8      	; 0x12b0 <Get_PinVal+0x8c>
    12b8:	ca 01       	movw	r24, r20
    12ba:	58 2f       	mov	r21, r24
    12bc:	51 70       	andi	r21, 0x01	; 1
    12be:	5b 83       	std	Y+3, r21	; 0x03
    12c0:	27 c0       	rjmp	.+78     	; 0x1310 <Get_PinVal+0xec>
	case DIO_PORTC : return get_Bit(PINC,pin);
    12c2:	e3 e3       	ldi	r30, 0x33	; 51
    12c4:	f0 e0       	ldi	r31, 0x00	; 0
    12c6:	80 81       	ld	r24, Z
    12c8:	28 2f       	mov	r18, r24
    12ca:	30 e0       	ldi	r19, 0x00	; 0
    12cc:	8a 81       	ldd	r24, Y+2	; 0x02
    12ce:	88 2f       	mov	r24, r24
    12d0:	90 e0       	ldi	r25, 0x00	; 0
    12d2:	a9 01       	movw	r20, r18
    12d4:	02 c0       	rjmp	.+4      	; 0x12da <Get_PinVal+0xb6>
    12d6:	55 95       	asr	r21
    12d8:	47 95       	ror	r20
    12da:	8a 95       	dec	r24
    12dc:	e2 f7       	brpl	.-8      	; 0x12d6 <Get_PinVal+0xb2>
    12de:	ca 01       	movw	r24, r20
    12e0:	58 2f       	mov	r21, r24
    12e2:	51 70       	andi	r21, 0x01	; 1
    12e4:	5b 83       	std	Y+3, r21	; 0x03
    12e6:	14 c0       	rjmp	.+40     	; 0x1310 <Get_PinVal+0xec>
	case DIO_PORTD : return get_Bit(PIND,pin);
    12e8:	e0 e3       	ldi	r30, 0x30	; 48
    12ea:	f0 e0       	ldi	r31, 0x00	; 0
    12ec:	80 81       	ld	r24, Z
    12ee:	28 2f       	mov	r18, r24
    12f0:	30 e0       	ldi	r19, 0x00	; 0
    12f2:	8a 81       	ldd	r24, Y+2	; 0x02
    12f4:	88 2f       	mov	r24, r24
    12f6:	90 e0       	ldi	r25, 0x00	; 0
    12f8:	a9 01       	movw	r20, r18
    12fa:	02 c0       	rjmp	.+4      	; 0x1300 <Get_PinVal+0xdc>
    12fc:	55 95       	asr	r21
    12fe:	47 95       	ror	r20
    1300:	8a 95       	dec	r24
    1302:	e2 f7       	brpl	.-8      	; 0x12fc <Get_PinVal+0xd8>
    1304:	ca 01       	movw	r24, r20
    1306:	58 2f       	mov	r21, r24
    1308:	51 70       	andi	r21, 0x01	; 1
    130a:	5b 83       	std	Y+3, r21	; 0x03
    130c:	01 c0       	rjmp	.+2      	; 0x1310 <Get_PinVal+0xec>
    130e:	02 c0       	rjmp	.+4      	; 0x1314 <Get_PinVal+0xf0>
	}
}
    1310:	8b 81       	ldd	r24, Y+3	; 0x03
    1312:	8e 83       	std	Y+6, r24	; 0x06
    1314:	8e 81       	ldd	r24, Y+6	; 0x06
    1316:	26 96       	adiw	r28, 0x06	; 6
    1318:	0f b6       	in	r0, 0x3f	; 63
    131a:	f8 94       	cli
    131c:	de bf       	out	0x3e, r29	; 62
    131e:	0f be       	out	0x3f, r0	; 63
    1320:	cd bf       	out	0x3d, r28	; 61
    1322:	cf 91       	pop	r28
    1324:	df 91       	pop	r29
    1326:	08 95       	ret

00001328 <Pin_pullUp>:
void Pin_pullUp(u8 port,u8 pin)
{
    1328:	df 93       	push	r29
    132a:	cf 93       	push	r28
    132c:	00 d0       	rcall	.+0      	; 0x132e <Pin_pullUp+0x6>
    132e:	00 d0       	rcall	.+0      	; 0x1330 <Pin_pullUp+0x8>
    1330:	cd b7       	in	r28, 0x3d	; 61
    1332:	de b7       	in	r29, 0x3e	; 62
    1334:	89 83       	std	Y+1, r24	; 0x01
    1336:	6a 83       	std	Y+2, r22	; 0x02
	switch(port)
    1338:	89 81       	ldd	r24, Y+1	; 0x01
    133a:	28 2f       	mov	r18, r24
    133c:	30 e0       	ldi	r19, 0x00	; 0
    133e:	3c 83       	std	Y+4, r19	; 0x04
    1340:	2b 83       	std	Y+3, r18	; 0x03
    1342:	8b 81       	ldd	r24, Y+3	; 0x03
    1344:	9c 81       	ldd	r25, Y+4	; 0x04
    1346:	81 30       	cpi	r24, 0x01	; 1
    1348:	91 05       	cpc	r25, r1
    134a:	49 f1       	breq	.+82     	; 0x139e <Pin_pullUp+0x76>
    134c:	2b 81       	ldd	r18, Y+3	; 0x03
    134e:	3c 81       	ldd	r19, Y+4	; 0x04
    1350:	22 30       	cpi	r18, 0x02	; 2
    1352:	31 05       	cpc	r19, r1
    1354:	2c f4       	brge	.+10     	; 0x1360 <Pin_pullUp+0x38>
    1356:	8b 81       	ldd	r24, Y+3	; 0x03
    1358:	9c 81       	ldd	r25, Y+4	; 0x04
    135a:	00 97       	sbiw	r24, 0x00	; 0
    135c:	61 f0       	breq	.+24     	; 0x1376 <Pin_pullUp+0x4e>
    135e:	5a c0       	rjmp	.+180    	; 0x1414 <Pin_pullUp+0xec>
    1360:	2b 81       	ldd	r18, Y+3	; 0x03
    1362:	3c 81       	ldd	r19, Y+4	; 0x04
    1364:	22 30       	cpi	r18, 0x02	; 2
    1366:	31 05       	cpc	r19, r1
    1368:	71 f1       	breq	.+92     	; 0x13c6 <Pin_pullUp+0x9e>
    136a:	8b 81       	ldd	r24, Y+3	; 0x03
    136c:	9c 81       	ldd	r25, Y+4	; 0x04
    136e:	83 30       	cpi	r24, 0x03	; 3
    1370:	91 05       	cpc	r25, r1
    1372:	e9 f1       	breq	.+122    	; 0x13ee <Pin_pullUp+0xc6>
    1374:	4f c0       	rjmp	.+158    	; 0x1414 <Pin_pullUp+0xec>
		{
		case DIO_PORTA : Set_Bit(PORTA,pin);break;
    1376:	ab e3       	ldi	r26, 0x3B	; 59
    1378:	b0 e0       	ldi	r27, 0x00	; 0
    137a:	eb e3       	ldi	r30, 0x3B	; 59
    137c:	f0 e0       	ldi	r31, 0x00	; 0
    137e:	80 81       	ld	r24, Z
    1380:	48 2f       	mov	r20, r24
    1382:	8a 81       	ldd	r24, Y+2	; 0x02
    1384:	28 2f       	mov	r18, r24
    1386:	30 e0       	ldi	r19, 0x00	; 0
    1388:	81 e0       	ldi	r24, 0x01	; 1
    138a:	90 e0       	ldi	r25, 0x00	; 0
    138c:	02 2e       	mov	r0, r18
    138e:	02 c0       	rjmp	.+4      	; 0x1394 <Pin_pullUp+0x6c>
    1390:	88 0f       	add	r24, r24
    1392:	99 1f       	adc	r25, r25
    1394:	0a 94       	dec	r0
    1396:	e2 f7       	brpl	.-8      	; 0x1390 <Pin_pullUp+0x68>
    1398:	84 2b       	or	r24, r20
    139a:	8c 93       	st	X, r24
    139c:	3b c0       	rjmp	.+118    	; 0x1414 <Pin_pullUp+0xec>
		case DIO_PORTB : Set_Bit(PORTB,pin);break;
    139e:	a8 e3       	ldi	r26, 0x38	; 56
    13a0:	b0 e0       	ldi	r27, 0x00	; 0
    13a2:	e8 e3       	ldi	r30, 0x38	; 56
    13a4:	f0 e0       	ldi	r31, 0x00	; 0
    13a6:	80 81       	ld	r24, Z
    13a8:	48 2f       	mov	r20, r24
    13aa:	8a 81       	ldd	r24, Y+2	; 0x02
    13ac:	28 2f       	mov	r18, r24
    13ae:	30 e0       	ldi	r19, 0x00	; 0
    13b0:	81 e0       	ldi	r24, 0x01	; 1
    13b2:	90 e0       	ldi	r25, 0x00	; 0
    13b4:	02 2e       	mov	r0, r18
    13b6:	02 c0       	rjmp	.+4      	; 0x13bc <Pin_pullUp+0x94>
    13b8:	88 0f       	add	r24, r24
    13ba:	99 1f       	adc	r25, r25
    13bc:	0a 94       	dec	r0
    13be:	e2 f7       	brpl	.-8      	; 0x13b8 <Pin_pullUp+0x90>
    13c0:	84 2b       	or	r24, r20
    13c2:	8c 93       	st	X, r24
    13c4:	27 c0       	rjmp	.+78     	; 0x1414 <Pin_pullUp+0xec>
		case DIO_PORTC : Set_Bit(PORTC,pin);break;
    13c6:	a5 e3       	ldi	r26, 0x35	; 53
    13c8:	b0 e0       	ldi	r27, 0x00	; 0
    13ca:	e5 e3       	ldi	r30, 0x35	; 53
    13cc:	f0 e0       	ldi	r31, 0x00	; 0
    13ce:	80 81       	ld	r24, Z
    13d0:	48 2f       	mov	r20, r24
    13d2:	8a 81       	ldd	r24, Y+2	; 0x02
    13d4:	28 2f       	mov	r18, r24
    13d6:	30 e0       	ldi	r19, 0x00	; 0
    13d8:	81 e0       	ldi	r24, 0x01	; 1
    13da:	90 e0       	ldi	r25, 0x00	; 0
    13dc:	02 2e       	mov	r0, r18
    13de:	02 c0       	rjmp	.+4      	; 0x13e4 <Pin_pullUp+0xbc>
    13e0:	88 0f       	add	r24, r24
    13e2:	99 1f       	adc	r25, r25
    13e4:	0a 94       	dec	r0
    13e6:	e2 f7       	brpl	.-8      	; 0x13e0 <Pin_pullUp+0xb8>
    13e8:	84 2b       	or	r24, r20
    13ea:	8c 93       	st	X, r24
    13ec:	13 c0       	rjmp	.+38     	; 0x1414 <Pin_pullUp+0xec>
		case DIO_PORTD : Set_Bit(PORTD,pin);break;
    13ee:	a2 e3       	ldi	r26, 0x32	; 50
    13f0:	b0 e0       	ldi	r27, 0x00	; 0
    13f2:	e2 e3       	ldi	r30, 0x32	; 50
    13f4:	f0 e0       	ldi	r31, 0x00	; 0
    13f6:	80 81       	ld	r24, Z
    13f8:	48 2f       	mov	r20, r24
    13fa:	8a 81       	ldd	r24, Y+2	; 0x02
    13fc:	28 2f       	mov	r18, r24
    13fe:	30 e0       	ldi	r19, 0x00	; 0
    1400:	81 e0       	ldi	r24, 0x01	; 1
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	02 2e       	mov	r0, r18
    1406:	02 c0       	rjmp	.+4      	; 0x140c <Pin_pullUp+0xe4>
    1408:	88 0f       	add	r24, r24
    140a:	99 1f       	adc	r25, r25
    140c:	0a 94       	dec	r0
    140e:	e2 f7       	brpl	.-8      	; 0x1408 <Pin_pullUp+0xe0>
    1410:	84 2b       	or	r24, r20
    1412:	8c 93       	st	X, r24
		}
}
    1414:	0f 90       	pop	r0
    1416:	0f 90       	pop	r0
    1418:	0f 90       	pop	r0
    141a:	0f 90       	pop	r0
    141c:	cf 91       	pop	r28
    141e:	df 91       	pop	r29
    1420:	08 95       	ret

00001422 <Tog_Pin>:
void Tog_Pin(u8 port , u8 pin)
{
    1422:	df 93       	push	r29
    1424:	cf 93       	push	r28
    1426:	00 d0       	rcall	.+0      	; 0x1428 <Tog_Pin+0x6>
    1428:	00 d0       	rcall	.+0      	; 0x142a <Tog_Pin+0x8>
    142a:	cd b7       	in	r28, 0x3d	; 61
    142c:	de b7       	in	r29, 0x3e	; 62
    142e:	89 83       	std	Y+1, r24	; 0x01
    1430:	6a 83       	std	Y+2, r22	; 0x02
	switch(port)
    1432:	89 81       	ldd	r24, Y+1	; 0x01
    1434:	28 2f       	mov	r18, r24
    1436:	30 e0       	ldi	r19, 0x00	; 0
    1438:	3c 83       	std	Y+4, r19	; 0x04
    143a:	2b 83       	std	Y+3, r18	; 0x03
    143c:	8b 81       	ldd	r24, Y+3	; 0x03
    143e:	9c 81       	ldd	r25, Y+4	; 0x04
    1440:	81 30       	cpi	r24, 0x01	; 1
    1442:	91 05       	cpc	r25, r1
    1444:	49 f1       	breq	.+82     	; 0x1498 <Tog_Pin+0x76>
    1446:	2b 81       	ldd	r18, Y+3	; 0x03
    1448:	3c 81       	ldd	r19, Y+4	; 0x04
    144a:	22 30       	cpi	r18, 0x02	; 2
    144c:	31 05       	cpc	r19, r1
    144e:	2c f4       	brge	.+10     	; 0x145a <Tog_Pin+0x38>
    1450:	8b 81       	ldd	r24, Y+3	; 0x03
    1452:	9c 81       	ldd	r25, Y+4	; 0x04
    1454:	00 97       	sbiw	r24, 0x00	; 0
    1456:	61 f0       	breq	.+24     	; 0x1470 <Tog_Pin+0x4e>
    1458:	5a c0       	rjmp	.+180    	; 0x150e <Tog_Pin+0xec>
    145a:	2b 81       	ldd	r18, Y+3	; 0x03
    145c:	3c 81       	ldd	r19, Y+4	; 0x04
    145e:	22 30       	cpi	r18, 0x02	; 2
    1460:	31 05       	cpc	r19, r1
    1462:	71 f1       	breq	.+92     	; 0x14c0 <Tog_Pin+0x9e>
    1464:	8b 81       	ldd	r24, Y+3	; 0x03
    1466:	9c 81       	ldd	r25, Y+4	; 0x04
    1468:	83 30       	cpi	r24, 0x03	; 3
    146a:	91 05       	cpc	r25, r1
    146c:	e9 f1       	breq	.+122    	; 0x14e8 <Tog_Pin+0xc6>
    146e:	4f c0       	rjmp	.+158    	; 0x150e <Tog_Pin+0xec>
	{
	case DIO_PORTA : toggle_Bit(PORTA , pin);	break;
    1470:	ab e3       	ldi	r26, 0x3B	; 59
    1472:	b0 e0       	ldi	r27, 0x00	; 0
    1474:	eb e3       	ldi	r30, 0x3B	; 59
    1476:	f0 e0       	ldi	r31, 0x00	; 0
    1478:	80 81       	ld	r24, Z
    147a:	48 2f       	mov	r20, r24
    147c:	8a 81       	ldd	r24, Y+2	; 0x02
    147e:	28 2f       	mov	r18, r24
    1480:	30 e0       	ldi	r19, 0x00	; 0
    1482:	81 e0       	ldi	r24, 0x01	; 1
    1484:	90 e0       	ldi	r25, 0x00	; 0
    1486:	02 2e       	mov	r0, r18
    1488:	02 c0       	rjmp	.+4      	; 0x148e <Tog_Pin+0x6c>
    148a:	88 0f       	add	r24, r24
    148c:	99 1f       	adc	r25, r25
    148e:	0a 94       	dec	r0
    1490:	e2 f7       	brpl	.-8      	; 0x148a <Tog_Pin+0x68>
    1492:	84 27       	eor	r24, r20
    1494:	8c 93       	st	X, r24
    1496:	3b c0       	rjmp	.+118    	; 0x150e <Tog_Pin+0xec>
	case DIO_PORTB : toggle_Bit(PORTB , pin);	break;
    1498:	a8 e3       	ldi	r26, 0x38	; 56
    149a:	b0 e0       	ldi	r27, 0x00	; 0
    149c:	e8 e3       	ldi	r30, 0x38	; 56
    149e:	f0 e0       	ldi	r31, 0x00	; 0
    14a0:	80 81       	ld	r24, Z
    14a2:	48 2f       	mov	r20, r24
    14a4:	8a 81       	ldd	r24, Y+2	; 0x02
    14a6:	28 2f       	mov	r18, r24
    14a8:	30 e0       	ldi	r19, 0x00	; 0
    14aa:	81 e0       	ldi	r24, 0x01	; 1
    14ac:	90 e0       	ldi	r25, 0x00	; 0
    14ae:	02 2e       	mov	r0, r18
    14b0:	02 c0       	rjmp	.+4      	; 0x14b6 <Tog_Pin+0x94>
    14b2:	88 0f       	add	r24, r24
    14b4:	99 1f       	adc	r25, r25
    14b6:	0a 94       	dec	r0
    14b8:	e2 f7       	brpl	.-8      	; 0x14b2 <Tog_Pin+0x90>
    14ba:	84 27       	eor	r24, r20
    14bc:	8c 93       	st	X, r24
    14be:	27 c0       	rjmp	.+78     	; 0x150e <Tog_Pin+0xec>
	case DIO_PORTC : toggle_Bit(PORTC , pin);	break;
    14c0:	a5 e3       	ldi	r26, 0x35	; 53
    14c2:	b0 e0       	ldi	r27, 0x00	; 0
    14c4:	e5 e3       	ldi	r30, 0x35	; 53
    14c6:	f0 e0       	ldi	r31, 0x00	; 0
    14c8:	80 81       	ld	r24, Z
    14ca:	48 2f       	mov	r20, r24
    14cc:	8a 81       	ldd	r24, Y+2	; 0x02
    14ce:	28 2f       	mov	r18, r24
    14d0:	30 e0       	ldi	r19, 0x00	; 0
    14d2:	81 e0       	ldi	r24, 0x01	; 1
    14d4:	90 e0       	ldi	r25, 0x00	; 0
    14d6:	02 2e       	mov	r0, r18
    14d8:	02 c0       	rjmp	.+4      	; 0x14de <Tog_Pin+0xbc>
    14da:	88 0f       	add	r24, r24
    14dc:	99 1f       	adc	r25, r25
    14de:	0a 94       	dec	r0
    14e0:	e2 f7       	brpl	.-8      	; 0x14da <Tog_Pin+0xb8>
    14e2:	84 27       	eor	r24, r20
    14e4:	8c 93       	st	X, r24
    14e6:	13 c0       	rjmp	.+38     	; 0x150e <Tog_Pin+0xec>
	case DIO_PORTD : toggle_Bit(PORTD , pin);	break;
    14e8:	a2 e3       	ldi	r26, 0x32	; 50
    14ea:	b0 e0       	ldi	r27, 0x00	; 0
    14ec:	e2 e3       	ldi	r30, 0x32	; 50
    14ee:	f0 e0       	ldi	r31, 0x00	; 0
    14f0:	80 81       	ld	r24, Z
    14f2:	48 2f       	mov	r20, r24
    14f4:	8a 81       	ldd	r24, Y+2	; 0x02
    14f6:	28 2f       	mov	r18, r24
    14f8:	30 e0       	ldi	r19, 0x00	; 0
    14fa:	81 e0       	ldi	r24, 0x01	; 1
    14fc:	90 e0       	ldi	r25, 0x00	; 0
    14fe:	02 2e       	mov	r0, r18
    1500:	02 c0       	rjmp	.+4      	; 0x1506 <Tog_Pin+0xe4>
    1502:	88 0f       	add	r24, r24
    1504:	99 1f       	adc	r25, r25
    1506:	0a 94       	dec	r0
    1508:	e2 f7       	brpl	.-8      	; 0x1502 <Tog_Pin+0xe0>
    150a:	84 27       	eor	r24, r20
    150c:	8c 93       	st	X, r24
	}
}
    150e:	0f 90       	pop	r0
    1510:	0f 90       	pop	r0
    1512:	0f 90       	pop	r0
    1514:	0f 90       	pop	r0
    1516:	cf 91       	pop	r28
    1518:	df 91       	pop	r29
    151a:	08 95       	ret

0000151c <seg>:


u8 seg(u8 n)
{
    151c:	df 93       	push	r29
    151e:	cf 93       	push	r28
    1520:	00 d0       	rcall	.+0      	; 0x1522 <seg+0x6>
    1522:	00 d0       	rcall	.+0      	; 0x1524 <seg+0x8>
    1524:	0f 92       	push	r0
    1526:	cd b7       	in	r28, 0x3d	; 61
    1528:	de b7       	in	r29, 0x3e	; 62
    152a:	89 83       	std	Y+1, r24	; 0x01
	switch(n)
    152c:	89 81       	ldd	r24, Y+1	; 0x01
    152e:	28 2f       	mov	r18, r24
    1530:	30 e0       	ldi	r19, 0x00	; 0
    1532:	3c 83       	std	Y+4, r19	; 0x04
    1534:	2b 83       	std	Y+3, r18	; 0x03
    1536:	8b 81       	ldd	r24, Y+3	; 0x03
    1538:	9c 81       	ldd	r25, Y+4	; 0x04
    153a:	84 30       	cpi	r24, 0x04	; 4
    153c:	91 05       	cpc	r25, r1
    153e:	09 f4       	brne	.+2      	; 0x1542 <seg+0x26>
    1540:	4b c0       	rjmp	.+150    	; 0x15d8 <seg+0xbc>
    1542:	2b 81       	ldd	r18, Y+3	; 0x03
    1544:	3c 81       	ldd	r19, Y+4	; 0x04
    1546:	25 30       	cpi	r18, 0x05	; 5
    1548:	31 05       	cpc	r19, r1
    154a:	d4 f4       	brge	.+52     	; 0x1580 <seg+0x64>
    154c:	8b 81       	ldd	r24, Y+3	; 0x03
    154e:	9c 81       	ldd	r25, Y+4	; 0x04
    1550:	81 30       	cpi	r24, 0x01	; 1
    1552:	91 05       	cpc	r25, r1
    1554:	c1 f1       	breq	.+112    	; 0x15c6 <seg+0xaa>
    1556:	2b 81       	ldd	r18, Y+3	; 0x03
    1558:	3c 81       	ldd	r19, Y+4	; 0x04
    155a:	22 30       	cpi	r18, 0x02	; 2
    155c:	31 05       	cpc	r19, r1
    155e:	2c f4       	brge	.+10     	; 0x156a <seg+0x4e>
    1560:	8b 81       	ldd	r24, Y+3	; 0x03
    1562:	9c 81       	ldd	r25, Y+4	; 0x04
    1564:	00 97       	sbiw	r24, 0x00	; 0
    1566:	61 f1       	breq	.+88     	; 0x15c0 <seg+0xa4>
    1568:	49 c0       	rjmp	.+146    	; 0x15fc <seg+0xe0>
    156a:	2b 81       	ldd	r18, Y+3	; 0x03
    156c:	3c 81       	ldd	r19, Y+4	; 0x04
    156e:	22 30       	cpi	r18, 0x02	; 2
    1570:	31 05       	cpc	r19, r1
    1572:	61 f1       	breq	.+88     	; 0x15cc <seg+0xb0>
    1574:	8b 81       	ldd	r24, Y+3	; 0x03
    1576:	9c 81       	ldd	r25, Y+4	; 0x04
    1578:	83 30       	cpi	r24, 0x03	; 3
    157a:	91 05       	cpc	r25, r1
    157c:	51 f1       	breq	.+84     	; 0x15d2 <seg+0xb6>
    157e:	3e c0       	rjmp	.+124    	; 0x15fc <seg+0xe0>
    1580:	2b 81       	ldd	r18, Y+3	; 0x03
    1582:	3c 81       	ldd	r19, Y+4	; 0x04
    1584:	27 30       	cpi	r18, 0x07	; 7
    1586:	31 05       	cpc	r19, r1
    1588:	81 f1       	breq	.+96     	; 0x15ea <seg+0xce>
    158a:	8b 81       	ldd	r24, Y+3	; 0x03
    158c:	9c 81       	ldd	r25, Y+4	; 0x04
    158e:	88 30       	cpi	r24, 0x08	; 8
    1590:	91 05       	cpc	r25, r1
    1592:	5c f4       	brge	.+22     	; 0x15aa <seg+0x8e>
    1594:	2b 81       	ldd	r18, Y+3	; 0x03
    1596:	3c 81       	ldd	r19, Y+4	; 0x04
    1598:	25 30       	cpi	r18, 0x05	; 5
    159a:	31 05       	cpc	r19, r1
    159c:	01 f1       	breq	.+64     	; 0x15de <seg+0xc2>
    159e:	8b 81       	ldd	r24, Y+3	; 0x03
    15a0:	9c 81       	ldd	r25, Y+4	; 0x04
    15a2:	86 30       	cpi	r24, 0x06	; 6
    15a4:	91 05       	cpc	r25, r1
    15a6:	f1 f0       	breq	.+60     	; 0x15e4 <seg+0xc8>
    15a8:	29 c0       	rjmp	.+82     	; 0x15fc <seg+0xe0>
    15aa:	2b 81       	ldd	r18, Y+3	; 0x03
    15ac:	3c 81       	ldd	r19, Y+4	; 0x04
    15ae:	28 30       	cpi	r18, 0x08	; 8
    15b0:	31 05       	cpc	r19, r1
    15b2:	f1 f0       	breq	.+60     	; 0x15f0 <seg+0xd4>
    15b4:	8b 81       	ldd	r24, Y+3	; 0x03
    15b6:	9c 81       	ldd	r25, Y+4	; 0x04
    15b8:	89 30       	cpi	r24, 0x09	; 9
    15ba:	91 05       	cpc	r25, r1
    15bc:	e1 f0       	breq	.+56     	; 0x15f6 <seg+0xda>
    15be:	1e c0       	rjmp	.+60     	; 0x15fc <seg+0xe0>
		{
		case 0:return 0b00111111;
    15c0:	9f e3       	ldi	r25, 0x3F	; 63
    15c2:	9a 83       	std	Y+2, r25	; 0x02
    15c4:	1c c0       	rjmp	.+56     	; 0x15fe <seg+0xe2>
		case 1:return 0b00000110;
    15c6:	26 e0       	ldi	r18, 0x06	; 6
    15c8:	2a 83       	std	Y+2, r18	; 0x02
    15ca:	19 c0       	rjmp	.+50     	; 0x15fe <seg+0xe2>
		case 2:return 0b01011011;
    15cc:	3b e5       	ldi	r19, 0x5B	; 91
    15ce:	3a 83       	std	Y+2, r19	; 0x02
    15d0:	16 c0       	rjmp	.+44     	; 0x15fe <seg+0xe2>
		case 3:return 0b01001111;
    15d2:	8f e4       	ldi	r24, 0x4F	; 79
    15d4:	8a 83       	std	Y+2, r24	; 0x02
    15d6:	13 c0       	rjmp	.+38     	; 0x15fe <seg+0xe2>
		case 4:return 0b01100110;
    15d8:	96 e6       	ldi	r25, 0x66	; 102
    15da:	9a 83       	std	Y+2, r25	; 0x02
    15dc:	10 c0       	rjmp	.+32     	; 0x15fe <seg+0xe2>
		case 5:return 0b01101101;
    15de:	2d e6       	ldi	r18, 0x6D	; 109
    15e0:	2a 83       	std	Y+2, r18	; 0x02
    15e2:	0d c0       	rjmp	.+26     	; 0x15fe <seg+0xe2>
		case 6:return 0b01111101;
    15e4:	3d e7       	ldi	r19, 0x7D	; 125
    15e6:	3a 83       	std	Y+2, r19	; 0x02
    15e8:	0a c0       	rjmp	.+20     	; 0x15fe <seg+0xe2>
		case 7:return 0b00000111;
    15ea:	87 e0       	ldi	r24, 0x07	; 7
    15ec:	8a 83       	std	Y+2, r24	; 0x02
    15ee:	07 c0       	rjmp	.+14     	; 0x15fe <seg+0xe2>
		case 8:return 0b01111111;
    15f0:	9f e7       	ldi	r25, 0x7F	; 127
    15f2:	9a 83       	std	Y+2, r25	; 0x02
    15f4:	04 c0       	rjmp	.+8      	; 0x15fe <seg+0xe2>
		case 9:return 0b01101111;
    15f6:	2f e6       	ldi	r18, 0x6F	; 111
    15f8:	2a 83       	std	Y+2, r18	; 0x02
    15fa:	01 c0       	rjmp	.+2      	; 0x15fe <seg+0xe2>
    15fc:	02 c0       	rjmp	.+4      	; 0x1602 <seg+0xe6>
		}


}
    15fe:	3a 81       	ldd	r19, Y+2	; 0x02
    1600:	3d 83       	std	Y+5, r19	; 0x05
    1602:	8d 81       	ldd	r24, Y+5	; 0x05
    1604:	0f 90       	pop	r0
    1606:	0f 90       	pop	r0
    1608:	0f 90       	pop	r0
    160a:	0f 90       	pop	r0
    160c:	0f 90       	pop	r0
    160e:	cf 91       	pop	r28
    1610:	df 91       	pop	r29
    1612:	08 95       	ret

00001614 <LCD_INTI>:
#include "Intr.h"



void LCD_INTI(void)
{
    1614:	df 93       	push	r29
    1616:	cf 93       	push	r28
    1618:	cd b7       	in	r28, 0x3d	; 61
    161a:	de b7       	in	r29, 0x3e	; 62
    161c:	e8 97       	sbiw	r28, 0x38	; 56
    161e:	0f b6       	in	r0, 0x3f	; 63
    1620:	f8 94       	cli
    1622:	de bf       	out	0x3e, r29	; 62
    1624:	0f be       	out	0x3f, r0	; 63
    1626:	cd bf       	out	0x3d, r28	; 61
SetPin_Dir(LCD_Ctrl_Port, LCD_Rs_Pin, PIN_OUT);
    1628:	83 e0       	ldi	r24, 0x03	; 3
    162a:	60 e0       	ldi	r22, 0x00	; 0
    162c:	41 e0       	ldi	r20, 0x01	; 1
    162e:	0e 94 02 07 	call	0xe04	; 0xe04 <SetPin_Dir>
SetPin_Dir(LCD_Ctrl_Port, LCD_Rw_Pin, PIN_OUT);
    1632:	83 e0       	ldi	r24, 0x03	; 3
    1634:	61 e0       	ldi	r22, 0x01	; 1
    1636:	41 e0       	ldi	r20, 0x01	; 1
    1638:	0e 94 02 07 	call	0xe04	; 0xe04 <SetPin_Dir>
SetPin_Dir(DIO_PORTA, LCD_Enable_Pin, PIN_OUT);
    163c:	80 e0       	ldi	r24, 0x00	; 0
    163e:	67 e0       	ldi	r22, 0x07	; 7
    1640:	41 e0       	ldi	r20, 0x01	; 1
    1642:	0e 94 02 07 	call	0xe04	; 0xe04 <SetPin_Dir>
    1646:	80 e0       	ldi	r24, 0x00	; 0
    1648:	90 e0       	ldi	r25, 0x00	; 0
    164a:	a0 ef       	ldi	r26, 0xF0	; 240
    164c:	b1 e4       	ldi	r27, 0x41	; 65
    164e:	8d ab       	std	Y+53, r24	; 0x35
    1650:	9e ab       	std	Y+54, r25	; 0x36
    1652:	af ab       	std	Y+55, r26	; 0x37
    1654:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1656:	6d a9       	ldd	r22, Y+53	; 0x35
    1658:	7e a9       	ldd	r23, Y+54	; 0x36
    165a:	8f a9       	ldd	r24, Y+55	; 0x37
    165c:	98 ad       	ldd	r25, Y+56	; 0x38
    165e:	20 e0       	ldi	r18, 0x00	; 0
    1660:	30 e0       	ldi	r19, 0x00	; 0
    1662:	4a ef       	ldi	r20, 0xFA	; 250
    1664:	54 e4       	ldi	r21, 0x44	; 68
    1666:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    166a:	dc 01       	movw	r26, r24
    166c:	cb 01       	movw	r24, r22
    166e:	89 ab       	std	Y+49, r24	; 0x31
    1670:	9a ab       	std	Y+50, r25	; 0x32
    1672:	ab ab       	std	Y+51, r26	; 0x33
    1674:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1676:	69 a9       	ldd	r22, Y+49	; 0x31
    1678:	7a a9       	ldd	r23, Y+50	; 0x32
    167a:	8b a9       	ldd	r24, Y+51	; 0x33
    167c:	9c a9       	ldd	r25, Y+52	; 0x34
    167e:	20 e0       	ldi	r18, 0x00	; 0
    1680:	30 e0       	ldi	r19, 0x00	; 0
    1682:	40 e8       	ldi	r20, 0x80	; 128
    1684:	5f e3       	ldi	r21, 0x3F	; 63
    1686:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    168a:	88 23       	and	r24, r24
    168c:	2c f4       	brge	.+10     	; 0x1698 <LCD_INTI+0x84>
		__ticks = 1;
    168e:	81 e0       	ldi	r24, 0x01	; 1
    1690:	90 e0       	ldi	r25, 0x00	; 0
    1692:	98 ab       	std	Y+48, r25	; 0x30
    1694:	8f a7       	std	Y+47, r24	; 0x2f
    1696:	3f c0       	rjmp	.+126    	; 0x1716 <LCD_INTI+0x102>
	else if (__tmp > 65535)
    1698:	69 a9       	ldd	r22, Y+49	; 0x31
    169a:	7a a9       	ldd	r23, Y+50	; 0x32
    169c:	8b a9       	ldd	r24, Y+51	; 0x33
    169e:	9c a9       	ldd	r25, Y+52	; 0x34
    16a0:	20 e0       	ldi	r18, 0x00	; 0
    16a2:	3f ef       	ldi	r19, 0xFF	; 255
    16a4:	4f e7       	ldi	r20, 0x7F	; 127
    16a6:	57 e4       	ldi	r21, 0x47	; 71
    16a8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    16ac:	18 16       	cp	r1, r24
    16ae:	4c f5       	brge	.+82     	; 0x1702 <LCD_INTI+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16b0:	6d a9       	ldd	r22, Y+53	; 0x35
    16b2:	7e a9       	ldd	r23, Y+54	; 0x36
    16b4:	8f a9       	ldd	r24, Y+55	; 0x37
    16b6:	98 ad       	ldd	r25, Y+56	; 0x38
    16b8:	20 e0       	ldi	r18, 0x00	; 0
    16ba:	30 e0       	ldi	r19, 0x00	; 0
    16bc:	40 e2       	ldi	r20, 0x20	; 32
    16be:	51 e4       	ldi	r21, 0x41	; 65
    16c0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    16c4:	dc 01       	movw	r26, r24
    16c6:	cb 01       	movw	r24, r22
    16c8:	bc 01       	movw	r22, r24
    16ca:	cd 01       	movw	r24, r26
    16cc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    16d0:	dc 01       	movw	r26, r24
    16d2:	cb 01       	movw	r24, r22
    16d4:	98 ab       	std	Y+48, r25	; 0x30
    16d6:	8f a7       	std	Y+47, r24	; 0x2f
    16d8:	0f c0       	rjmp	.+30     	; 0x16f8 <LCD_INTI+0xe4>
    16da:	88 ec       	ldi	r24, 0xC8	; 200
    16dc:	90 e0       	ldi	r25, 0x00	; 0
    16de:	9e a7       	std	Y+46, r25	; 0x2e
    16e0:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    16e2:	8d a5       	ldd	r24, Y+45	; 0x2d
    16e4:	9e a5       	ldd	r25, Y+46	; 0x2e
    16e6:	01 97       	sbiw	r24, 0x01	; 1
    16e8:	f1 f7       	brne	.-4      	; 0x16e6 <LCD_INTI+0xd2>
    16ea:	9e a7       	std	Y+46, r25	; 0x2e
    16ec:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16ee:	8f a5       	ldd	r24, Y+47	; 0x2f
    16f0:	98 a9       	ldd	r25, Y+48	; 0x30
    16f2:	01 97       	sbiw	r24, 0x01	; 1
    16f4:	98 ab       	std	Y+48, r25	; 0x30
    16f6:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16f8:	8f a5       	ldd	r24, Y+47	; 0x2f
    16fa:	98 a9       	ldd	r25, Y+48	; 0x30
    16fc:	00 97       	sbiw	r24, 0x00	; 0
    16fe:	69 f7       	brne	.-38     	; 0x16da <LCD_INTI+0xc6>
    1700:	14 c0       	rjmp	.+40     	; 0x172a <LCD_INTI+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1702:	69 a9       	ldd	r22, Y+49	; 0x31
    1704:	7a a9       	ldd	r23, Y+50	; 0x32
    1706:	8b a9       	ldd	r24, Y+51	; 0x33
    1708:	9c a9       	ldd	r25, Y+52	; 0x34
    170a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    170e:	dc 01       	movw	r26, r24
    1710:	cb 01       	movw	r24, r22
    1712:	98 ab       	std	Y+48, r25	; 0x30
    1714:	8f a7       	std	Y+47, r24	; 0x2f
    1716:	8f a5       	ldd	r24, Y+47	; 0x2f
    1718:	98 a9       	ldd	r25, Y+48	; 0x30
    171a:	9c a7       	std	Y+44, r25	; 0x2c
    171c:	8b a7       	std	Y+43, r24	; 0x2b
    171e:	8b a5       	ldd	r24, Y+43	; 0x2b
    1720:	9c a5       	ldd	r25, Y+44	; 0x2c
    1722:	01 97       	sbiw	r24, 0x01	; 1
    1724:	f1 f7       	brne	.-4      	; 0x1722 <LCD_INTI+0x10e>
    1726:	9c a7       	std	Y+44, r25	; 0x2c
    1728:	8b a7       	std	Y+43, r24	; 0x2b

	_delay_ms(30);
SetPort_Dir(LCD_Data_Port, PORT_OUT);
    172a:	82 e0       	ldi	r24, 0x02	; 2
    172c:	6f ef       	ldi	r22, 0xFF	; 255
    172e:	0e 94 80 06 	call	0xd00	; 0xd00 <SetPort_Dir>
LCD_SendCMD(0b00111100);
    1732:	8c e3       	ldi	r24, 0x3C	; 60
    1734:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <LCD_SendCMD>
    1738:	80 e0       	ldi	r24, 0x00	; 0
    173a:	90 e0       	ldi	r25, 0x00	; 0
    173c:	a0 e8       	ldi	r26, 0x80	; 128
    173e:	bf e3       	ldi	r27, 0x3F	; 63
    1740:	8f a3       	std	Y+39, r24	; 0x27
    1742:	98 a7       	std	Y+40, r25	; 0x28
    1744:	a9 a7       	std	Y+41, r26	; 0x29
    1746:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1748:	6f a1       	ldd	r22, Y+39	; 0x27
    174a:	78 a5       	ldd	r23, Y+40	; 0x28
    174c:	89 a5       	ldd	r24, Y+41	; 0x29
    174e:	9a a5       	ldd	r25, Y+42	; 0x2a
    1750:	20 e0       	ldi	r18, 0x00	; 0
    1752:	30 e0       	ldi	r19, 0x00	; 0
    1754:	4a ef       	ldi	r20, 0xFA	; 250
    1756:	54 e4       	ldi	r21, 0x44	; 68
    1758:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    175c:	dc 01       	movw	r26, r24
    175e:	cb 01       	movw	r24, r22
    1760:	8b a3       	std	Y+35, r24	; 0x23
    1762:	9c a3       	std	Y+36, r25	; 0x24
    1764:	ad a3       	std	Y+37, r26	; 0x25
    1766:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1768:	6b a1       	ldd	r22, Y+35	; 0x23
    176a:	7c a1       	ldd	r23, Y+36	; 0x24
    176c:	8d a1       	ldd	r24, Y+37	; 0x25
    176e:	9e a1       	ldd	r25, Y+38	; 0x26
    1770:	20 e0       	ldi	r18, 0x00	; 0
    1772:	30 e0       	ldi	r19, 0x00	; 0
    1774:	40 e8       	ldi	r20, 0x80	; 128
    1776:	5f e3       	ldi	r21, 0x3F	; 63
    1778:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    177c:	88 23       	and	r24, r24
    177e:	2c f4       	brge	.+10     	; 0x178a <LCD_INTI+0x176>
		__ticks = 1;
    1780:	81 e0       	ldi	r24, 0x01	; 1
    1782:	90 e0       	ldi	r25, 0x00	; 0
    1784:	9a a3       	std	Y+34, r25	; 0x22
    1786:	89 a3       	std	Y+33, r24	; 0x21
    1788:	3f c0       	rjmp	.+126    	; 0x1808 <LCD_INTI+0x1f4>
	else if (__tmp > 65535)
    178a:	6b a1       	ldd	r22, Y+35	; 0x23
    178c:	7c a1       	ldd	r23, Y+36	; 0x24
    178e:	8d a1       	ldd	r24, Y+37	; 0x25
    1790:	9e a1       	ldd	r25, Y+38	; 0x26
    1792:	20 e0       	ldi	r18, 0x00	; 0
    1794:	3f ef       	ldi	r19, 0xFF	; 255
    1796:	4f e7       	ldi	r20, 0x7F	; 127
    1798:	57 e4       	ldi	r21, 0x47	; 71
    179a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    179e:	18 16       	cp	r1, r24
    17a0:	4c f5       	brge	.+82     	; 0x17f4 <LCD_INTI+0x1e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17a2:	6f a1       	ldd	r22, Y+39	; 0x27
    17a4:	78 a5       	ldd	r23, Y+40	; 0x28
    17a6:	89 a5       	ldd	r24, Y+41	; 0x29
    17a8:	9a a5       	ldd	r25, Y+42	; 0x2a
    17aa:	20 e0       	ldi	r18, 0x00	; 0
    17ac:	30 e0       	ldi	r19, 0x00	; 0
    17ae:	40 e2       	ldi	r20, 0x20	; 32
    17b0:	51 e4       	ldi	r21, 0x41	; 65
    17b2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    17b6:	dc 01       	movw	r26, r24
    17b8:	cb 01       	movw	r24, r22
    17ba:	bc 01       	movw	r22, r24
    17bc:	cd 01       	movw	r24, r26
    17be:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    17c2:	dc 01       	movw	r26, r24
    17c4:	cb 01       	movw	r24, r22
    17c6:	9a a3       	std	Y+34, r25	; 0x22
    17c8:	89 a3       	std	Y+33, r24	; 0x21
    17ca:	0f c0       	rjmp	.+30     	; 0x17ea <LCD_INTI+0x1d6>
    17cc:	88 ec       	ldi	r24, 0xC8	; 200
    17ce:	90 e0       	ldi	r25, 0x00	; 0
    17d0:	98 a3       	std	Y+32, r25	; 0x20
    17d2:	8f 8f       	std	Y+31, r24	; 0x1f
    17d4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    17d6:	98 a1       	ldd	r25, Y+32	; 0x20
    17d8:	01 97       	sbiw	r24, 0x01	; 1
    17da:	f1 f7       	brne	.-4      	; 0x17d8 <LCD_INTI+0x1c4>
    17dc:	98 a3       	std	Y+32, r25	; 0x20
    17de:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17e0:	89 a1       	ldd	r24, Y+33	; 0x21
    17e2:	9a a1       	ldd	r25, Y+34	; 0x22
    17e4:	01 97       	sbiw	r24, 0x01	; 1
    17e6:	9a a3       	std	Y+34, r25	; 0x22
    17e8:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17ea:	89 a1       	ldd	r24, Y+33	; 0x21
    17ec:	9a a1       	ldd	r25, Y+34	; 0x22
    17ee:	00 97       	sbiw	r24, 0x00	; 0
    17f0:	69 f7       	brne	.-38     	; 0x17cc <LCD_INTI+0x1b8>
    17f2:	14 c0       	rjmp	.+40     	; 0x181c <LCD_INTI+0x208>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17f4:	6b a1       	ldd	r22, Y+35	; 0x23
    17f6:	7c a1       	ldd	r23, Y+36	; 0x24
    17f8:	8d a1       	ldd	r24, Y+37	; 0x25
    17fa:	9e a1       	ldd	r25, Y+38	; 0x26
    17fc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1800:	dc 01       	movw	r26, r24
    1802:	cb 01       	movw	r24, r22
    1804:	9a a3       	std	Y+34, r25	; 0x22
    1806:	89 a3       	std	Y+33, r24	; 0x21
    1808:	89 a1       	ldd	r24, Y+33	; 0x21
    180a:	9a a1       	ldd	r25, Y+34	; 0x22
    180c:	9e 8f       	std	Y+30, r25	; 0x1e
    180e:	8d 8f       	std	Y+29, r24	; 0x1d
    1810:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1812:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1814:	01 97       	sbiw	r24, 0x01	; 1
    1816:	f1 f7       	brne	.-4      	; 0x1814 <LCD_INTI+0x200>
    1818:	9e 8f       	std	Y+30, r25	; 0x1e
    181a:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
LCD_SendCMD(0b00001111);
    181c:	8f e0       	ldi	r24, 0x0F	; 15
    181e:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <LCD_SendCMD>
    1822:	80 e0       	ldi	r24, 0x00	; 0
    1824:	90 e0       	ldi	r25, 0x00	; 0
    1826:	a0 e8       	ldi	r26, 0x80	; 128
    1828:	bf e3       	ldi	r27, 0x3F	; 63
    182a:	89 8f       	std	Y+25, r24	; 0x19
    182c:	9a 8f       	std	Y+26, r25	; 0x1a
    182e:	ab 8f       	std	Y+27, r26	; 0x1b
    1830:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1832:	69 8d       	ldd	r22, Y+25	; 0x19
    1834:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1836:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1838:	9c 8d       	ldd	r25, Y+28	; 0x1c
    183a:	20 e0       	ldi	r18, 0x00	; 0
    183c:	30 e0       	ldi	r19, 0x00	; 0
    183e:	4a ef       	ldi	r20, 0xFA	; 250
    1840:	54 e4       	ldi	r21, 0x44	; 68
    1842:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1846:	dc 01       	movw	r26, r24
    1848:	cb 01       	movw	r24, r22
    184a:	8d 8b       	std	Y+21, r24	; 0x15
    184c:	9e 8b       	std	Y+22, r25	; 0x16
    184e:	af 8b       	std	Y+23, r26	; 0x17
    1850:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1852:	6d 89       	ldd	r22, Y+21	; 0x15
    1854:	7e 89       	ldd	r23, Y+22	; 0x16
    1856:	8f 89       	ldd	r24, Y+23	; 0x17
    1858:	98 8d       	ldd	r25, Y+24	; 0x18
    185a:	20 e0       	ldi	r18, 0x00	; 0
    185c:	30 e0       	ldi	r19, 0x00	; 0
    185e:	40 e8       	ldi	r20, 0x80	; 128
    1860:	5f e3       	ldi	r21, 0x3F	; 63
    1862:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1866:	88 23       	and	r24, r24
    1868:	2c f4       	brge	.+10     	; 0x1874 <LCD_INTI+0x260>
		__ticks = 1;
    186a:	81 e0       	ldi	r24, 0x01	; 1
    186c:	90 e0       	ldi	r25, 0x00	; 0
    186e:	9c 8b       	std	Y+20, r25	; 0x14
    1870:	8b 8b       	std	Y+19, r24	; 0x13
    1872:	3f c0       	rjmp	.+126    	; 0x18f2 <LCD_INTI+0x2de>
	else if (__tmp > 65535)
    1874:	6d 89       	ldd	r22, Y+21	; 0x15
    1876:	7e 89       	ldd	r23, Y+22	; 0x16
    1878:	8f 89       	ldd	r24, Y+23	; 0x17
    187a:	98 8d       	ldd	r25, Y+24	; 0x18
    187c:	20 e0       	ldi	r18, 0x00	; 0
    187e:	3f ef       	ldi	r19, 0xFF	; 255
    1880:	4f e7       	ldi	r20, 0x7F	; 127
    1882:	57 e4       	ldi	r21, 0x47	; 71
    1884:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1888:	18 16       	cp	r1, r24
    188a:	4c f5       	brge	.+82     	; 0x18de <LCD_INTI+0x2ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    188c:	69 8d       	ldd	r22, Y+25	; 0x19
    188e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1890:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1892:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1894:	20 e0       	ldi	r18, 0x00	; 0
    1896:	30 e0       	ldi	r19, 0x00	; 0
    1898:	40 e2       	ldi	r20, 0x20	; 32
    189a:	51 e4       	ldi	r21, 0x41	; 65
    189c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    18a0:	dc 01       	movw	r26, r24
    18a2:	cb 01       	movw	r24, r22
    18a4:	bc 01       	movw	r22, r24
    18a6:	cd 01       	movw	r24, r26
    18a8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    18ac:	dc 01       	movw	r26, r24
    18ae:	cb 01       	movw	r24, r22
    18b0:	9c 8b       	std	Y+20, r25	; 0x14
    18b2:	8b 8b       	std	Y+19, r24	; 0x13
    18b4:	0f c0       	rjmp	.+30     	; 0x18d4 <LCD_INTI+0x2c0>
    18b6:	88 ec       	ldi	r24, 0xC8	; 200
    18b8:	90 e0       	ldi	r25, 0x00	; 0
    18ba:	9a 8b       	std	Y+18, r25	; 0x12
    18bc:	89 8b       	std	Y+17, r24	; 0x11
    18be:	89 89       	ldd	r24, Y+17	; 0x11
    18c0:	9a 89       	ldd	r25, Y+18	; 0x12
    18c2:	01 97       	sbiw	r24, 0x01	; 1
    18c4:	f1 f7       	brne	.-4      	; 0x18c2 <LCD_INTI+0x2ae>
    18c6:	9a 8b       	std	Y+18, r25	; 0x12
    18c8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18ca:	8b 89       	ldd	r24, Y+19	; 0x13
    18cc:	9c 89       	ldd	r25, Y+20	; 0x14
    18ce:	01 97       	sbiw	r24, 0x01	; 1
    18d0:	9c 8b       	std	Y+20, r25	; 0x14
    18d2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18d4:	8b 89       	ldd	r24, Y+19	; 0x13
    18d6:	9c 89       	ldd	r25, Y+20	; 0x14
    18d8:	00 97       	sbiw	r24, 0x00	; 0
    18da:	69 f7       	brne	.-38     	; 0x18b6 <LCD_INTI+0x2a2>
    18dc:	14 c0       	rjmp	.+40     	; 0x1906 <LCD_INTI+0x2f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18de:	6d 89       	ldd	r22, Y+21	; 0x15
    18e0:	7e 89       	ldd	r23, Y+22	; 0x16
    18e2:	8f 89       	ldd	r24, Y+23	; 0x17
    18e4:	98 8d       	ldd	r25, Y+24	; 0x18
    18e6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    18ea:	dc 01       	movw	r26, r24
    18ec:	cb 01       	movw	r24, r22
    18ee:	9c 8b       	std	Y+20, r25	; 0x14
    18f0:	8b 8b       	std	Y+19, r24	; 0x13
    18f2:	8b 89       	ldd	r24, Y+19	; 0x13
    18f4:	9c 89       	ldd	r25, Y+20	; 0x14
    18f6:	98 8b       	std	Y+16, r25	; 0x10
    18f8:	8f 87       	std	Y+15, r24	; 0x0f
    18fa:	8f 85       	ldd	r24, Y+15	; 0x0f
    18fc:	98 89       	ldd	r25, Y+16	; 0x10
    18fe:	01 97       	sbiw	r24, 0x01	; 1
    1900:	f1 f7       	brne	.-4      	; 0x18fe <LCD_INTI+0x2ea>
    1902:	98 8b       	std	Y+16, r25	; 0x10
    1904:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
LCD_SendCMD(0b00000001);
    1906:	81 e0       	ldi	r24, 0x01	; 1
    1908:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <LCD_SendCMD>
    190c:	80 e0       	ldi	r24, 0x00	; 0
    190e:	90 e0       	ldi	r25, 0x00	; 0
    1910:	a0 e0       	ldi	r26, 0x00	; 0
    1912:	b0 e4       	ldi	r27, 0x40	; 64
    1914:	8b 87       	std	Y+11, r24	; 0x0b
    1916:	9c 87       	std	Y+12, r25	; 0x0c
    1918:	ad 87       	std	Y+13, r26	; 0x0d
    191a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    191c:	6b 85       	ldd	r22, Y+11	; 0x0b
    191e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1920:	8d 85       	ldd	r24, Y+13	; 0x0d
    1922:	9e 85       	ldd	r25, Y+14	; 0x0e
    1924:	20 e0       	ldi	r18, 0x00	; 0
    1926:	30 e0       	ldi	r19, 0x00	; 0
    1928:	4a ef       	ldi	r20, 0xFA	; 250
    192a:	54 e4       	ldi	r21, 0x44	; 68
    192c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1930:	dc 01       	movw	r26, r24
    1932:	cb 01       	movw	r24, r22
    1934:	8f 83       	std	Y+7, r24	; 0x07
    1936:	98 87       	std	Y+8, r25	; 0x08
    1938:	a9 87       	std	Y+9, r26	; 0x09
    193a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    193c:	6f 81       	ldd	r22, Y+7	; 0x07
    193e:	78 85       	ldd	r23, Y+8	; 0x08
    1940:	89 85       	ldd	r24, Y+9	; 0x09
    1942:	9a 85       	ldd	r25, Y+10	; 0x0a
    1944:	20 e0       	ldi	r18, 0x00	; 0
    1946:	30 e0       	ldi	r19, 0x00	; 0
    1948:	40 e8       	ldi	r20, 0x80	; 128
    194a:	5f e3       	ldi	r21, 0x3F	; 63
    194c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1950:	88 23       	and	r24, r24
    1952:	2c f4       	brge	.+10     	; 0x195e <LCD_INTI+0x34a>
		__ticks = 1;
    1954:	81 e0       	ldi	r24, 0x01	; 1
    1956:	90 e0       	ldi	r25, 0x00	; 0
    1958:	9e 83       	std	Y+6, r25	; 0x06
    195a:	8d 83       	std	Y+5, r24	; 0x05
    195c:	3f c0       	rjmp	.+126    	; 0x19dc <LCD_INTI+0x3c8>
	else if (__tmp > 65535)
    195e:	6f 81       	ldd	r22, Y+7	; 0x07
    1960:	78 85       	ldd	r23, Y+8	; 0x08
    1962:	89 85       	ldd	r24, Y+9	; 0x09
    1964:	9a 85       	ldd	r25, Y+10	; 0x0a
    1966:	20 e0       	ldi	r18, 0x00	; 0
    1968:	3f ef       	ldi	r19, 0xFF	; 255
    196a:	4f e7       	ldi	r20, 0x7F	; 127
    196c:	57 e4       	ldi	r21, 0x47	; 71
    196e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1972:	18 16       	cp	r1, r24
    1974:	4c f5       	brge	.+82     	; 0x19c8 <LCD_INTI+0x3b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1976:	6b 85       	ldd	r22, Y+11	; 0x0b
    1978:	7c 85       	ldd	r23, Y+12	; 0x0c
    197a:	8d 85       	ldd	r24, Y+13	; 0x0d
    197c:	9e 85       	ldd	r25, Y+14	; 0x0e
    197e:	20 e0       	ldi	r18, 0x00	; 0
    1980:	30 e0       	ldi	r19, 0x00	; 0
    1982:	40 e2       	ldi	r20, 0x20	; 32
    1984:	51 e4       	ldi	r21, 0x41	; 65
    1986:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    198a:	dc 01       	movw	r26, r24
    198c:	cb 01       	movw	r24, r22
    198e:	bc 01       	movw	r22, r24
    1990:	cd 01       	movw	r24, r26
    1992:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1996:	dc 01       	movw	r26, r24
    1998:	cb 01       	movw	r24, r22
    199a:	9e 83       	std	Y+6, r25	; 0x06
    199c:	8d 83       	std	Y+5, r24	; 0x05
    199e:	0f c0       	rjmp	.+30     	; 0x19be <LCD_INTI+0x3aa>
    19a0:	88 ec       	ldi	r24, 0xC8	; 200
    19a2:	90 e0       	ldi	r25, 0x00	; 0
    19a4:	9c 83       	std	Y+4, r25	; 0x04
    19a6:	8b 83       	std	Y+3, r24	; 0x03
    19a8:	8b 81       	ldd	r24, Y+3	; 0x03
    19aa:	9c 81       	ldd	r25, Y+4	; 0x04
    19ac:	01 97       	sbiw	r24, 0x01	; 1
    19ae:	f1 f7       	brne	.-4      	; 0x19ac <LCD_INTI+0x398>
    19b0:	9c 83       	std	Y+4, r25	; 0x04
    19b2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19b4:	8d 81       	ldd	r24, Y+5	; 0x05
    19b6:	9e 81       	ldd	r25, Y+6	; 0x06
    19b8:	01 97       	sbiw	r24, 0x01	; 1
    19ba:	9e 83       	std	Y+6, r25	; 0x06
    19bc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19be:	8d 81       	ldd	r24, Y+5	; 0x05
    19c0:	9e 81       	ldd	r25, Y+6	; 0x06
    19c2:	00 97       	sbiw	r24, 0x00	; 0
    19c4:	69 f7       	brne	.-38     	; 0x19a0 <LCD_INTI+0x38c>
    19c6:	14 c0       	rjmp	.+40     	; 0x19f0 <LCD_INTI+0x3dc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19c8:	6f 81       	ldd	r22, Y+7	; 0x07
    19ca:	78 85       	ldd	r23, Y+8	; 0x08
    19cc:	89 85       	ldd	r24, Y+9	; 0x09
    19ce:	9a 85       	ldd	r25, Y+10	; 0x0a
    19d0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    19d4:	dc 01       	movw	r26, r24
    19d6:	cb 01       	movw	r24, r22
    19d8:	9e 83       	std	Y+6, r25	; 0x06
    19da:	8d 83       	std	Y+5, r24	; 0x05
    19dc:	8d 81       	ldd	r24, Y+5	; 0x05
    19de:	9e 81       	ldd	r25, Y+6	; 0x06
    19e0:	9a 83       	std	Y+2, r25	; 0x02
    19e2:	89 83       	std	Y+1, r24	; 0x01
    19e4:	89 81       	ldd	r24, Y+1	; 0x01
    19e6:	9a 81       	ldd	r25, Y+2	; 0x02
    19e8:	01 97       	sbiw	r24, 0x01	; 1
    19ea:	f1 f7       	brne	.-4      	; 0x19e8 <LCD_INTI+0x3d4>
    19ec:	9a 83       	std	Y+2, r25	; 0x02
    19ee:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
LCD_SendCMD(0b00000110);
    19f0:	86 e0       	ldi	r24, 0x06	; 6
    19f2:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <LCD_SendCMD>

}
    19f6:	e8 96       	adiw	r28, 0x38	; 56
    19f8:	0f b6       	in	r0, 0x3f	; 63
    19fa:	f8 94       	cli
    19fc:	de bf       	out	0x3e, r29	; 62
    19fe:	0f be       	out	0x3f, r0	; 63
    1a00:	cd bf       	out	0x3d, r28	; 61
    1a02:	cf 91       	pop	r28
    1a04:	df 91       	pop	r29
    1a06:	08 95       	ret

00001a08 <LCD_SendCMD>:
void LCD_SendCMD(u8 cmd)
{
    1a08:	df 93       	push	r29
    1a0a:	cf 93       	push	r28
    1a0c:	cd b7       	in	r28, 0x3d	; 61
    1a0e:	de b7       	in	r29, 0x3e	; 62
    1a10:	6d 97       	sbiw	r28, 0x1d	; 29
    1a12:	0f b6       	in	r0, 0x3f	; 63
    1a14:	f8 94       	cli
    1a16:	de bf       	out	0x3e, r29	; 62
    1a18:	0f be       	out	0x3f, r0	; 63
    1a1a:	cd bf       	out	0x3d, r28	; 61
    1a1c:	8d 8f       	std	Y+29, r24	; 0x1d
	SetPin_Val(LCD_Ctrl_Port,LCD_Rs_Pin, PIN_LOW);
    1a1e:	83 e0       	ldi	r24, 0x03	; 3
    1a20:	60 e0       	ldi	r22, 0x00	; 0
    1a22:	40 e0       	ldi	r20, 0x00	; 0
    1a24:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
	SetPin_Val(LCD_Ctrl_Port,LCD_Rw_Pin, PIN_LOW);
    1a28:	83 e0       	ldi	r24, 0x03	; 3
    1a2a:	61 e0       	ldi	r22, 0x01	; 1
    1a2c:	40 e0       	ldi	r20, 0x00	; 0
    1a2e:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
	SetPort_Val(LCD_Data_Port, cmd);
    1a32:	82 e0       	ldi	r24, 0x02	; 2
    1a34:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1a36:	0e 94 c1 06 	call	0xd82	; 0xd82 <SetPort_Val>

	SetPin_Val(DIO_PORTA, LCD_Enable_Pin, PIN_HIGH );
    1a3a:	80 e0       	ldi	r24, 0x00	; 0
    1a3c:	67 e0       	ldi	r22, 0x07	; 7
    1a3e:	41 e0       	ldi	r20, 0x01	; 1
    1a40:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
    1a44:	80 e0       	ldi	r24, 0x00	; 0
    1a46:	90 e0       	ldi	r25, 0x00	; 0
    1a48:	a0 e8       	ldi	r26, 0x80	; 128
    1a4a:	bf e3       	ldi	r27, 0x3F	; 63
    1a4c:	89 8f       	std	Y+25, r24	; 0x19
    1a4e:	9a 8f       	std	Y+26, r25	; 0x1a
    1a50:	ab 8f       	std	Y+27, r26	; 0x1b
    1a52:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a54:	69 8d       	ldd	r22, Y+25	; 0x19
    1a56:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1a58:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1a5a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1a5c:	20 e0       	ldi	r18, 0x00	; 0
    1a5e:	30 e0       	ldi	r19, 0x00	; 0
    1a60:	4a ef       	ldi	r20, 0xFA	; 250
    1a62:	54 e4       	ldi	r21, 0x44	; 68
    1a64:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a68:	dc 01       	movw	r26, r24
    1a6a:	cb 01       	movw	r24, r22
    1a6c:	8d 8b       	std	Y+21, r24	; 0x15
    1a6e:	9e 8b       	std	Y+22, r25	; 0x16
    1a70:	af 8b       	std	Y+23, r26	; 0x17
    1a72:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1a74:	6d 89       	ldd	r22, Y+21	; 0x15
    1a76:	7e 89       	ldd	r23, Y+22	; 0x16
    1a78:	8f 89       	ldd	r24, Y+23	; 0x17
    1a7a:	98 8d       	ldd	r25, Y+24	; 0x18
    1a7c:	20 e0       	ldi	r18, 0x00	; 0
    1a7e:	30 e0       	ldi	r19, 0x00	; 0
    1a80:	40 e8       	ldi	r20, 0x80	; 128
    1a82:	5f e3       	ldi	r21, 0x3F	; 63
    1a84:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1a88:	88 23       	and	r24, r24
    1a8a:	2c f4       	brge	.+10     	; 0x1a96 <LCD_SendCMD+0x8e>
		__ticks = 1;
    1a8c:	81 e0       	ldi	r24, 0x01	; 1
    1a8e:	90 e0       	ldi	r25, 0x00	; 0
    1a90:	9c 8b       	std	Y+20, r25	; 0x14
    1a92:	8b 8b       	std	Y+19, r24	; 0x13
    1a94:	3f c0       	rjmp	.+126    	; 0x1b14 <LCD_SendCMD+0x10c>
	else if (__tmp > 65535)
    1a96:	6d 89       	ldd	r22, Y+21	; 0x15
    1a98:	7e 89       	ldd	r23, Y+22	; 0x16
    1a9a:	8f 89       	ldd	r24, Y+23	; 0x17
    1a9c:	98 8d       	ldd	r25, Y+24	; 0x18
    1a9e:	20 e0       	ldi	r18, 0x00	; 0
    1aa0:	3f ef       	ldi	r19, 0xFF	; 255
    1aa2:	4f e7       	ldi	r20, 0x7F	; 127
    1aa4:	57 e4       	ldi	r21, 0x47	; 71
    1aa6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1aaa:	18 16       	cp	r1, r24
    1aac:	4c f5       	brge	.+82     	; 0x1b00 <LCD_SendCMD+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1aae:	69 8d       	ldd	r22, Y+25	; 0x19
    1ab0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1ab2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1ab4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1ab6:	20 e0       	ldi	r18, 0x00	; 0
    1ab8:	30 e0       	ldi	r19, 0x00	; 0
    1aba:	40 e2       	ldi	r20, 0x20	; 32
    1abc:	51 e4       	ldi	r21, 0x41	; 65
    1abe:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ac2:	dc 01       	movw	r26, r24
    1ac4:	cb 01       	movw	r24, r22
    1ac6:	bc 01       	movw	r22, r24
    1ac8:	cd 01       	movw	r24, r26
    1aca:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1ace:	dc 01       	movw	r26, r24
    1ad0:	cb 01       	movw	r24, r22
    1ad2:	9c 8b       	std	Y+20, r25	; 0x14
    1ad4:	8b 8b       	std	Y+19, r24	; 0x13
    1ad6:	0f c0       	rjmp	.+30     	; 0x1af6 <LCD_SendCMD+0xee>
    1ad8:	88 ec       	ldi	r24, 0xC8	; 200
    1ada:	90 e0       	ldi	r25, 0x00	; 0
    1adc:	9a 8b       	std	Y+18, r25	; 0x12
    1ade:	89 8b       	std	Y+17, r24	; 0x11
    1ae0:	89 89       	ldd	r24, Y+17	; 0x11
    1ae2:	9a 89       	ldd	r25, Y+18	; 0x12
    1ae4:	01 97       	sbiw	r24, 0x01	; 1
    1ae6:	f1 f7       	brne	.-4      	; 0x1ae4 <LCD_SendCMD+0xdc>
    1ae8:	9a 8b       	std	Y+18, r25	; 0x12
    1aea:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1aec:	8b 89       	ldd	r24, Y+19	; 0x13
    1aee:	9c 89       	ldd	r25, Y+20	; 0x14
    1af0:	01 97       	sbiw	r24, 0x01	; 1
    1af2:	9c 8b       	std	Y+20, r25	; 0x14
    1af4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1af6:	8b 89       	ldd	r24, Y+19	; 0x13
    1af8:	9c 89       	ldd	r25, Y+20	; 0x14
    1afa:	00 97       	sbiw	r24, 0x00	; 0
    1afc:	69 f7       	brne	.-38     	; 0x1ad8 <LCD_SendCMD+0xd0>
    1afe:	14 c0       	rjmp	.+40     	; 0x1b28 <LCD_SendCMD+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b00:	6d 89       	ldd	r22, Y+21	; 0x15
    1b02:	7e 89       	ldd	r23, Y+22	; 0x16
    1b04:	8f 89       	ldd	r24, Y+23	; 0x17
    1b06:	98 8d       	ldd	r25, Y+24	; 0x18
    1b08:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b0c:	dc 01       	movw	r26, r24
    1b0e:	cb 01       	movw	r24, r22
    1b10:	9c 8b       	std	Y+20, r25	; 0x14
    1b12:	8b 8b       	std	Y+19, r24	; 0x13
    1b14:	8b 89       	ldd	r24, Y+19	; 0x13
    1b16:	9c 89       	ldd	r25, Y+20	; 0x14
    1b18:	98 8b       	std	Y+16, r25	; 0x10
    1b1a:	8f 87       	std	Y+15, r24	; 0x0f
    1b1c:	8f 85       	ldd	r24, Y+15	; 0x0f
    1b1e:	98 89       	ldd	r25, Y+16	; 0x10
    1b20:	01 97       	sbiw	r24, 0x01	; 1
    1b22:	f1 f7       	brne	.-4      	; 0x1b20 <LCD_SendCMD+0x118>
    1b24:	98 8b       	std	Y+16, r25	; 0x10
    1b26:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	SetPin_Val(DIO_PORTA , LCD_Enable_Pin , PIN_LOW);
    1b28:	80 e0       	ldi	r24, 0x00	; 0
    1b2a:	67 e0       	ldi	r22, 0x07	; 7
    1b2c:	40 e0       	ldi	r20, 0x00	; 0
    1b2e:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
    1b32:	80 e0       	ldi	r24, 0x00	; 0
    1b34:	90 e0       	ldi	r25, 0x00	; 0
    1b36:	a0 e8       	ldi	r26, 0x80	; 128
    1b38:	bf e3       	ldi	r27, 0x3F	; 63
    1b3a:	8b 87       	std	Y+11, r24	; 0x0b
    1b3c:	9c 87       	std	Y+12, r25	; 0x0c
    1b3e:	ad 87       	std	Y+13, r26	; 0x0d
    1b40:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b42:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b44:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b46:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b48:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b4a:	20 e0       	ldi	r18, 0x00	; 0
    1b4c:	30 e0       	ldi	r19, 0x00	; 0
    1b4e:	4a ef       	ldi	r20, 0xFA	; 250
    1b50:	54 e4       	ldi	r21, 0x44	; 68
    1b52:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b56:	dc 01       	movw	r26, r24
    1b58:	cb 01       	movw	r24, r22
    1b5a:	8f 83       	std	Y+7, r24	; 0x07
    1b5c:	98 87       	std	Y+8, r25	; 0x08
    1b5e:	a9 87       	std	Y+9, r26	; 0x09
    1b60:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1b62:	6f 81       	ldd	r22, Y+7	; 0x07
    1b64:	78 85       	ldd	r23, Y+8	; 0x08
    1b66:	89 85       	ldd	r24, Y+9	; 0x09
    1b68:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b6a:	20 e0       	ldi	r18, 0x00	; 0
    1b6c:	30 e0       	ldi	r19, 0x00	; 0
    1b6e:	40 e8       	ldi	r20, 0x80	; 128
    1b70:	5f e3       	ldi	r21, 0x3F	; 63
    1b72:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1b76:	88 23       	and	r24, r24
    1b78:	2c f4       	brge	.+10     	; 0x1b84 <LCD_SendCMD+0x17c>
		__ticks = 1;
    1b7a:	81 e0       	ldi	r24, 0x01	; 1
    1b7c:	90 e0       	ldi	r25, 0x00	; 0
    1b7e:	9e 83       	std	Y+6, r25	; 0x06
    1b80:	8d 83       	std	Y+5, r24	; 0x05
    1b82:	3f c0       	rjmp	.+126    	; 0x1c02 <LCD_SendCMD+0x1fa>
	else if (__tmp > 65535)
    1b84:	6f 81       	ldd	r22, Y+7	; 0x07
    1b86:	78 85       	ldd	r23, Y+8	; 0x08
    1b88:	89 85       	ldd	r24, Y+9	; 0x09
    1b8a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b8c:	20 e0       	ldi	r18, 0x00	; 0
    1b8e:	3f ef       	ldi	r19, 0xFF	; 255
    1b90:	4f e7       	ldi	r20, 0x7F	; 127
    1b92:	57 e4       	ldi	r21, 0x47	; 71
    1b94:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1b98:	18 16       	cp	r1, r24
    1b9a:	4c f5       	brge	.+82     	; 0x1bee <LCD_SendCMD+0x1e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b9c:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b9e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ba0:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ba2:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ba4:	20 e0       	ldi	r18, 0x00	; 0
    1ba6:	30 e0       	ldi	r19, 0x00	; 0
    1ba8:	40 e2       	ldi	r20, 0x20	; 32
    1baa:	51 e4       	ldi	r21, 0x41	; 65
    1bac:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1bb0:	dc 01       	movw	r26, r24
    1bb2:	cb 01       	movw	r24, r22
    1bb4:	bc 01       	movw	r22, r24
    1bb6:	cd 01       	movw	r24, r26
    1bb8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1bbc:	dc 01       	movw	r26, r24
    1bbe:	cb 01       	movw	r24, r22
    1bc0:	9e 83       	std	Y+6, r25	; 0x06
    1bc2:	8d 83       	std	Y+5, r24	; 0x05
    1bc4:	0f c0       	rjmp	.+30     	; 0x1be4 <LCD_SendCMD+0x1dc>
    1bc6:	88 ec       	ldi	r24, 0xC8	; 200
    1bc8:	90 e0       	ldi	r25, 0x00	; 0
    1bca:	9c 83       	std	Y+4, r25	; 0x04
    1bcc:	8b 83       	std	Y+3, r24	; 0x03
    1bce:	8b 81       	ldd	r24, Y+3	; 0x03
    1bd0:	9c 81       	ldd	r25, Y+4	; 0x04
    1bd2:	01 97       	sbiw	r24, 0x01	; 1
    1bd4:	f1 f7       	brne	.-4      	; 0x1bd2 <LCD_SendCMD+0x1ca>
    1bd6:	9c 83       	std	Y+4, r25	; 0x04
    1bd8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bda:	8d 81       	ldd	r24, Y+5	; 0x05
    1bdc:	9e 81       	ldd	r25, Y+6	; 0x06
    1bde:	01 97       	sbiw	r24, 0x01	; 1
    1be0:	9e 83       	std	Y+6, r25	; 0x06
    1be2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1be4:	8d 81       	ldd	r24, Y+5	; 0x05
    1be6:	9e 81       	ldd	r25, Y+6	; 0x06
    1be8:	00 97       	sbiw	r24, 0x00	; 0
    1bea:	69 f7       	brne	.-38     	; 0x1bc6 <LCD_SendCMD+0x1be>
    1bec:	14 c0       	rjmp	.+40     	; 0x1c16 <LCD_SendCMD+0x20e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bee:	6f 81       	ldd	r22, Y+7	; 0x07
    1bf0:	78 85       	ldd	r23, Y+8	; 0x08
    1bf2:	89 85       	ldd	r24, Y+9	; 0x09
    1bf4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1bf6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1bfa:	dc 01       	movw	r26, r24
    1bfc:	cb 01       	movw	r24, r22
    1bfe:	9e 83       	std	Y+6, r25	; 0x06
    1c00:	8d 83       	std	Y+5, r24	; 0x05
    1c02:	8d 81       	ldd	r24, Y+5	; 0x05
    1c04:	9e 81       	ldd	r25, Y+6	; 0x06
    1c06:	9a 83       	std	Y+2, r25	; 0x02
    1c08:	89 83       	std	Y+1, r24	; 0x01
    1c0a:	89 81       	ldd	r24, Y+1	; 0x01
    1c0c:	9a 81       	ldd	r25, Y+2	; 0x02
    1c0e:	01 97       	sbiw	r24, 0x01	; 1
    1c10:	f1 f7       	brne	.-4      	; 0x1c0e <LCD_SendCMD+0x206>
    1c12:	9a 83       	std	Y+2, r25	; 0x02
    1c14:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);

}
    1c16:	6d 96       	adiw	r28, 0x1d	; 29
    1c18:	0f b6       	in	r0, 0x3f	; 63
    1c1a:	f8 94       	cli
    1c1c:	de bf       	out	0x3e, r29	; 62
    1c1e:	0f be       	out	0x3f, r0	; 63
    1c20:	cd bf       	out	0x3d, r28	; 61
    1c22:	cf 91       	pop	r28
    1c24:	df 91       	pop	r29
    1c26:	08 95       	ret

00001c28 <LCD_SendChar>:
void LCD_SendChar(u8 data)
{
    1c28:	df 93       	push	r29
    1c2a:	cf 93       	push	r28
    1c2c:	cd b7       	in	r28, 0x3d	; 61
    1c2e:	de b7       	in	r29, 0x3e	; 62
    1c30:	6d 97       	sbiw	r28, 0x1d	; 29
    1c32:	0f b6       	in	r0, 0x3f	; 63
    1c34:	f8 94       	cli
    1c36:	de bf       	out	0x3e, r29	; 62
    1c38:	0f be       	out	0x3f, r0	; 63
    1c3a:	cd bf       	out	0x3d, r28	; 61
    1c3c:	8d 8f       	std	Y+29, r24	; 0x1d
	SetPin_Val(LCD_Ctrl_Port,LCD_Rs_Pin, PIN_HIGH);
    1c3e:	83 e0       	ldi	r24, 0x03	; 3
    1c40:	60 e0       	ldi	r22, 0x00	; 0
    1c42:	41 e0       	ldi	r20, 0x01	; 1
    1c44:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
	SetPin_Val(LCD_Ctrl_Port,LCD_Rw_Pin, PIN_LOW);
    1c48:	83 e0       	ldi	r24, 0x03	; 3
    1c4a:	61 e0       	ldi	r22, 0x01	; 1
    1c4c:	40 e0       	ldi	r20, 0x00	; 0
    1c4e:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
	SetPort_Val(LCD_Data_Port, data);
    1c52:	82 e0       	ldi	r24, 0x02	; 2
    1c54:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1c56:	0e 94 c1 06 	call	0xd82	; 0xd82 <SetPort_Val>

	SetPin_Val(DIO_PORTA, LCD_Enable_Pin, PIN_HIGH );
    1c5a:	80 e0       	ldi	r24, 0x00	; 0
    1c5c:	67 e0       	ldi	r22, 0x07	; 7
    1c5e:	41 e0       	ldi	r20, 0x01	; 1
    1c60:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
    1c64:	80 e0       	ldi	r24, 0x00	; 0
    1c66:	90 e0       	ldi	r25, 0x00	; 0
    1c68:	a0 e8       	ldi	r26, 0x80	; 128
    1c6a:	bf e3       	ldi	r27, 0x3F	; 63
    1c6c:	89 8f       	std	Y+25, r24	; 0x19
    1c6e:	9a 8f       	std	Y+26, r25	; 0x1a
    1c70:	ab 8f       	std	Y+27, r26	; 0x1b
    1c72:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c74:	69 8d       	ldd	r22, Y+25	; 0x19
    1c76:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1c78:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c7a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c7c:	20 e0       	ldi	r18, 0x00	; 0
    1c7e:	30 e0       	ldi	r19, 0x00	; 0
    1c80:	4a ef       	ldi	r20, 0xFA	; 250
    1c82:	54 e4       	ldi	r21, 0x44	; 68
    1c84:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c88:	dc 01       	movw	r26, r24
    1c8a:	cb 01       	movw	r24, r22
    1c8c:	8d 8b       	std	Y+21, r24	; 0x15
    1c8e:	9e 8b       	std	Y+22, r25	; 0x16
    1c90:	af 8b       	std	Y+23, r26	; 0x17
    1c92:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1c94:	6d 89       	ldd	r22, Y+21	; 0x15
    1c96:	7e 89       	ldd	r23, Y+22	; 0x16
    1c98:	8f 89       	ldd	r24, Y+23	; 0x17
    1c9a:	98 8d       	ldd	r25, Y+24	; 0x18
    1c9c:	20 e0       	ldi	r18, 0x00	; 0
    1c9e:	30 e0       	ldi	r19, 0x00	; 0
    1ca0:	40 e8       	ldi	r20, 0x80	; 128
    1ca2:	5f e3       	ldi	r21, 0x3F	; 63
    1ca4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1ca8:	88 23       	and	r24, r24
    1caa:	2c f4       	brge	.+10     	; 0x1cb6 <LCD_SendChar+0x8e>
		__ticks = 1;
    1cac:	81 e0       	ldi	r24, 0x01	; 1
    1cae:	90 e0       	ldi	r25, 0x00	; 0
    1cb0:	9c 8b       	std	Y+20, r25	; 0x14
    1cb2:	8b 8b       	std	Y+19, r24	; 0x13
    1cb4:	3f c0       	rjmp	.+126    	; 0x1d34 <LCD_SendChar+0x10c>
	else if (__tmp > 65535)
    1cb6:	6d 89       	ldd	r22, Y+21	; 0x15
    1cb8:	7e 89       	ldd	r23, Y+22	; 0x16
    1cba:	8f 89       	ldd	r24, Y+23	; 0x17
    1cbc:	98 8d       	ldd	r25, Y+24	; 0x18
    1cbe:	20 e0       	ldi	r18, 0x00	; 0
    1cc0:	3f ef       	ldi	r19, 0xFF	; 255
    1cc2:	4f e7       	ldi	r20, 0x7F	; 127
    1cc4:	57 e4       	ldi	r21, 0x47	; 71
    1cc6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1cca:	18 16       	cp	r1, r24
    1ccc:	4c f5       	brge	.+82     	; 0x1d20 <LCD_SendChar+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1cce:	69 8d       	ldd	r22, Y+25	; 0x19
    1cd0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1cd2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1cd4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1cd6:	20 e0       	ldi	r18, 0x00	; 0
    1cd8:	30 e0       	ldi	r19, 0x00	; 0
    1cda:	40 e2       	ldi	r20, 0x20	; 32
    1cdc:	51 e4       	ldi	r21, 0x41	; 65
    1cde:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ce2:	dc 01       	movw	r26, r24
    1ce4:	cb 01       	movw	r24, r22
    1ce6:	bc 01       	movw	r22, r24
    1ce8:	cd 01       	movw	r24, r26
    1cea:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1cee:	dc 01       	movw	r26, r24
    1cf0:	cb 01       	movw	r24, r22
    1cf2:	9c 8b       	std	Y+20, r25	; 0x14
    1cf4:	8b 8b       	std	Y+19, r24	; 0x13
    1cf6:	0f c0       	rjmp	.+30     	; 0x1d16 <LCD_SendChar+0xee>
    1cf8:	88 ec       	ldi	r24, 0xC8	; 200
    1cfa:	90 e0       	ldi	r25, 0x00	; 0
    1cfc:	9a 8b       	std	Y+18, r25	; 0x12
    1cfe:	89 8b       	std	Y+17, r24	; 0x11
    1d00:	89 89       	ldd	r24, Y+17	; 0x11
    1d02:	9a 89       	ldd	r25, Y+18	; 0x12
    1d04:	01 97       	sbiw	r24, 0x01	; 1
    1d06:	f1 f7       	brne	.-4      	; 0x1d04 <LCD_SendChar+0xdc>
    1d08:	9a 8b       	std	Y+18, r25	; 0x12
    1d0a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d0c:	8b 89       	ldd	r24, Y+19	; 0x13
    1d0e:	9c 89       	ldd	r25, Y+20	; 0x14
    1d10:	01 97       	sbiw	r24, 0x01	; 1
    1d12:	9c 8b       	std	Y+20, r25	; 0x14
    1d14:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d16:	8b 89       	ldd	r24, Y+19	; 0x13
    1d18:	9c 89       	ldd	r25, Y+20	; 0x14
    1d1a:	00 97       	sbiw	r24, 0x00	; 0
    1d1c:	69 f7       	brne	.-38     	; 0x1cf8 <LCD_SendChar+0xd0>
    1d1e:	14 c0       	rjmp	.+40     	; 0x1d48 <LCD_SendChar+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d20:	6d 89       	ldd	r22, Y+21	; 0x15
    1d22:	7e 89       	ldd	r23, Y+22	; 0x16
    1d24:	8f 89       	ldd	r24, Y+23	; 0x17
    1d26:	98 8d       	ldd	r25, Y+24	; 0x18
    1d28:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d2c:	dc 01       	movw	r26, r24
    1d2e:	cb 01       	movw	r24, r22
    1d30:	9c 8b       	std	Y+20, r25	; 0x14
    1d32:	8b 8b       	std	Y+19, r24	; 0x13
    1d34:	8b 89       	ldd	r24, Y+19	; 0x13
    1d36:	9c 89       	ldd	r25, Y+20	; 0x14
    1d38:	98 8b       	std	Y+16, r25	; 0x10
    1d3a:	8f 87       	std	Y+15, r24	; 0x0f
    1d3c:	8f 85       	ldd	r24, Y+15	; 0x0f
    1d3e:	98 89       	ldd	r25, Y+16	; 0x10
    1d40:	01 97       	sbiw	r24, 0x01	; 1
    1d42:	f1 f7       	brne	.-4      	; 0x1d40 <LCD_SendChar+0x118>
    1d44:	98 8b       	std	Y+16, r25	; 0x10
    1d46:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(1);
	SetPin_Val(DIO_PORTA , LCD_Enable_Pin , PIN_LOW);
    1d48:	80 e0       	ldi	r24, 0x00	; 0
    1d4a:	67 e0       	ldi	r22, 0x07	; 7
    1d4c:	40 e0       	ldi	r20, 0x00	; 0
    1d4e:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
    1d52:	80 e0       	ldi	r24, 0x00	; 0
    1d54:	90 e0       	ldi	r25, 0x00	; 0
    1d56:	a0 e8       	ldi	r26, 0x80	; 128
    1d58:	bf e3       	ldi	r27, 0x3F	; 63
    1d5a:	8b 87       	std	Y+11, r24	; 0x0b
    1d5c:	9c 87       	std	Y+12, r25	; 0x0c
    1d5e:	ad 87       	std	Y+13, r26	; 0x0d
    1d60:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d62:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d64:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d66:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d68:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d6a:	20 e0       	ldi	r18, 0x00	; 0
    1d6c:	30 e0       	ldi	r19, 0x00	; 0
    1d6e:	4a ef       	ldi	r20, 0xFA	; 250
    1d70:	54 e4       	ldi	r21, 0x44	; 68
    1d72:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d76:	dc 01       	movw	r26, r24
    1d78:	cb 01       	movw	r24, r22
    1d7a:	8f 83       	std	Y+7, r24	; 0x07
    1d7c:	98 87       	std	Y+8, r25	; 0x08
    1d7e:	a9 87       	std	Y+9, r26	; 0x09
    1d80:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1d82:	6f 81       	ldd	r22, Y+7	; 0x07
    1d84:	78 85       	ldd	r23, Y+8	; 0x08
    1d86:	89 85       	ldd	r24, Y+9	; 0x09
    1d88:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d8a:	20 e0       	ldi	r18, 0x00	; 0
    1d8c:	30 e0       	ldi	r19, 0x00	; 0
    1d8e:	40 e8       	ldi	r20, 0x80	; 128
    1d90:	5f e3       	ldi	r21, 0x3F	; 63
    1d92:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1d96:	88 23       	and	r24, r24
    1d98:	2c f4       	brge	.+10     	; 0x1da4 <LCD_SendChar+0x17c>
		__ticks = 1;
    1d9a:	81 e0       	ldi	r24, 0x01	; 1
    1d9c:	90 e0       	ldi	r25, 0x00	; 0
    1d9e:	9e 83       	std	Y+6, r25	; 0x06
    1da0:	8d 83       	std	Y+5, r24	; 0x05
    1da2:	3f c0       	rjmp	.+126    	; 0x1e22 <LCD_SendChar+0x1fa>
	else if (__tmp > 65535)
    1da4:	6f 81       	ldd	r22, Y+7	; 0x07
    1da6:	78 85       	ldd	r23, Y+8	; 0x08
    1da8:	89 85       	ldd	r24, Y+9	; 0x09
    1daa:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dac:	20 e0       	ldi	r18, 0x00	; 0
    1dae:	3f ef       	ldi	r19, 0xFF	; 255
    1db0:	4f e7       	ldi	r20, 0x7F	; 127
    1db2:	57 e4       	ldi	r21, 0x47	; 71
    1db4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1db8:	18 16       	cp	r1, r24
    1dba:	4c f5       	brge	.+82     	; 0x1e0e <LCD_SendChar+0x1e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1dbc:	6b 85       	ldd	r22, Y+11	; 0x0b
    1dbe:	7c 85       	ldd	r23, Y+12	; 0x0c
    1dc0:	8d 85       	ldd	r24, Y+13	; 0x0d
    1dc2:	9e 85       	ldd	r25, Y+14	; 0x0e
    1dc4:	20 e0       	ldi	r18, 0x00	; 0
    1dc6:	30 e0       	ldi	r19, 0x00	; 0
    1dc8:	40 e2       	ldi	r20, 0x20	; 32
    1dca:	51 e4       	ldi	r21, 0x41	; 65
    1dcc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1dd0:	dc 01       	movw	r26, r24
    1dd2:	cb 01       	movw	r24, r22
    1dd4:	bc 01       	movw	r22, r24
    1dd6:	cd 01       	movw	r24, r26
    1dd8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1ddc:	dc 01       	movw	r26, r24
    1dde:	cb 01       	movw	r24, r22
    1de0:	9e 83       	std	Y+6, r25	; 0x06
    1de2:	8d 83       	std	Y+5, r24	; 0x05
    1de4:	0f c0       	rjmp	.+30     	; 0x1e04 <LCD_SendChar+0x1dc>
    1de6:	88 ec       	ldi	r24, 0xC8	; 200
    1de8:	90 e0       	ldi	r25, 0x00	; 0
    1dea:	9c 83       	std	Y+4, r25	; 0x04
    1dec:	8b 83       	std	Y+3, r24	; 0x03
    1dee:	8b 81       	ldd	r24, Y+3	; 0x03
    1df0:	9c 81       	ldd	r25, Y+4	; 0x04
    1df2:	01 97       	sbiw	r24, 0x01	; 1
    1df4:	f1 f7       	brne	.-4      	; 0x1df2 <LCD_SendChar+0x1ca>
    1df6:	9c 83       	std	Y+4, r25	; 0x04
    1df8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1dfa:	8d 81       	ldd	r24, Y+5	; 0x05
    1dfc:	9e 81       	ldd	r25, Y+6	; 0x06
    1dfe:	01 97       	sbiw	r24, 0x01	; 1
    1e00:	9e 83       	std	Y+6, r25	; 0x06
    1e02:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e04:	8d 81       	ldd	r24, Y+5	; 0x05
    1e06:	9e 81       	ldd	r25, Y+6	; 0x06
    1e08:	00 97       	sbiw	r24, 0x00	; 0
    1e0a:	69 f7       	brne	.-38     	; 0x1de6 <LCD_SendChar+0x1be>
    1e0c:	14 c0       	rjmp	.+40     	; 0x1e36 <LCD_SendChar+0x20e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e0e:	6f 81       	ldd	r22, Y+7	; 0x07
    1e10:	78 85       	ldd	r23, Y+8	; 0x08
    1e12:	89 85       	ldd	r24, Y+9	; 0x09
    1e14:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e16:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e1a:	dc 01       	movw	r26, r24
    1e1c:	cb 01       	movw	r24, r22
    1e1e:	9e 83       	std	Y+6, r25	; 0x06
    1e20:	8d 83       	std	Y+5, r24	; 0x05
    1e22:	8d 81       	ldd	r24, Y+5	; 0x05
    1e24:	9e 81       	ldd	r25, Y+6	; 0x06
    1e26:	9a 83       	std	Y+2, r25	; 0x02
    1e28:	89 83       	std	Y+1, r24	; 0x01
    1e2a:	89 81       	ldd	r24, Y+1	; 0x01
    1e2c:	9a 81       	ldd	r25, Y+2	; 0x02
    1e2e:	01 97       	sbiw	r24, 0x01	; 1
    1e30:	f1 f7       	brne	.-4      	; 0x1e2e <LCD_SendChar+0x206>
    1e32:	9a 83       	std	Y+2, r25	; 0x02
    1e34:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(1);

}
    1e36:	6d 96       	adiw	r28, 0x1d	; 29
    1e38:	0f b6       	in	r0, 0x3f	; 63
    1e3a:	f8 94       	cli
    1e3c:	de bf       	out	0x3e, r29	; 62
    1e3e:	0f be       	out	0x3f, r0	; 63
    1e40:	cd bf       	out	0x3d, r28	; 61
    1e42:	cf 91       	pop	r28
    1e44:	df 91       	pop	r29
    1e46:	08 95       	ret

00001e48 <LCD_SendString>:
void LCD_SendString(u8 *str)
{
    1e48:	df 93       	push	r29
    1e4a:	cf 93       	push	r28
    1e4c:	00 d0       	rcall	.+0      	; 0x1e4e <LCD_SendString+0x6>
    1e4e:	cd b7       	in	r28, 0x3d	; 61
    1e50:	de b7       	in	r29, 0x3e	; 62
    1e52:	9a 83       	std	Y+2, r25	; 0x02
    1e54:	89 83       	std	Y+1, r24	; 0x01
    1e56:	0a c0       	rjmp	.+20     	; 0x1e6c <LCD_SendString+0x24>
	while(*str !='\0')
	{
		LCD_SendChar(*str);
    1e58:	e9 81       	ldd	r30, Y+1	; 0x01
    1e5a:	fa 81       	ldd	r31, Y+2	; 0x02
    1e5c:	80 81       	ld	r24, Z
    1e5e:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <LCD_SendChar>
		str++;
    1e62:	89 81       	ldd	r24, Y+1	; 0x01
    1e64:	9a 81       	ldd	r25, Y+2	; 0x02
    1e66:	01 96       	adiw	r24, 0x01	; 1
    1e68:	9a 83       	std	Y+2, r25	; 0x02
    1e6a:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(1);

}
void LCD_SendString(u8 *str)
{
	while(*str !='\0')
    1e6c:	e9 81       	ldd	r30, Y+1	; 0x01
    1e6e:	fa 81       	ldd	r31, Y+2	; 0x02
    1e70:	80 81       	ld	r24, Z
    1e72:	88 23       	and	r24, r24
    1e74:	89 f7       	brne	.-30     	; 0x1e58 <LCD_SendString+0x10>
		str++;

	}


}
    1e76:	0f 90       	pop	r0
    1e78:	0f 90       	pop	r0
    1e7a:	cf 91       	pop	r28
    1e7c:	df 91       	pop	r29
    1e7e:	08 95       	ret

00001e80 <LCD_Clear>:


void LCD_Clear(void)
{
    1e80:	df 93       	push	r29
    1e82:	cf 93       	push	r28
    1e84:	cd b7       	in	r28, 0x3d	; 61
    1e86:	de b7       	in	r29, 0x3e	; 62
	LCD_SendCMD(0b00000001);
    1e88:	81 e0       	ldi	r24, 0x01	; 1
    1e8a:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <LCD_SendCMD>
}
    1e8e:	cf 91       	pop	r28
    1e90:	df 91       	pop	r29
    1e92:	08 95       	ret

00001e94 <LCD_GoTO>:
void LCD_GoTO(u8 row, u8 clm)
{
    1e94:	df 93       	push	r29
    1e96:	cf 93       	push	r28
    1e98:	00 d0       	rcall	.+0      	; 0x1e9a <LCD_GoTO+0x6>
    1e9a:	00 d0       	rcall	.+0      	; 0x1e9c <LCD_GoTO+0x8>
    1e9c:	cd b7       	in	r28, 0x3d	; 61
    1e9e:	de b7       	in	r29, 0x3e	; 62
    1ea0:	89 83       	std	Y+1, r24	; 0x01
    1ea2:	6a 83       	std	Y+2, r22	; 0x02
	switch(row)
    1ea4:	89 81       	ldd	r24, Y+1	; 0x01
    1ea6:	28 2f       	mov	r18, r24
    1ea8:	30 e0       	ldi	r19, 0x00	; 0
    1eaa:	3c 83       	std	Y+4, r19	; 0x04
    1eac:	2b 83       	std	Y+3, r18	; 0x03
    1eae:	8b 81       	ldd	r24, Y+3	; 0x03
    1eb0:	9c 81       	ldd	r25, Y+4	; 0x04
    1eb2:	81 30       	cpi	r24, 0x01	; 1
    1eb4:	91 05       	cpc	r25, r1
    1eb6:	31 f0       	breq	.+12     	; 0x1ec4 <LCD_GoTO+0x30>
    1eb8:	2b 81       	ldd	r18, Y+3	; 0x03
    1eba:	3c 81       	ldd	r19, Y+4	; 0x04
    1ebc:	22 30       	cpi	r18, 0x02	; 2
    1ebe:	31 05       	cpc	r19, r1
    1ec0:	31 f0       	breq	.+12     	; 0x1ece <LCD_GoTO+0x3a>
    1ec2:	09 c0       	rjmp	.+18     	; 0x1ed6 <LCD_GoTO+0x42>
	{
	case 1: LCD_SendCMD(128+clm);	break;
    1ec4:	8a 81       	ldd	r24, Y+2	; 0x02
    1ec6:	80 58       	subi	r24, 0x80	; 128
    1ec8:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <LCD_SendCMD>
    1ecc:	04 c0       	rjmp	.+8      	; 0x1ed6 <LCD_GoTO+0x42>
	case 2: LCD_SendCMD(192+clm);	break;
    1ece:	8a 81       	ldd	r24, Y+2	; 0x02
    1ed0:	80 54       	subi	r24, 0x40	; 64
    1ed2:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <LCD_SendCMD>
	}
}
    1ed6:	0f 90       	pop	r0
    1ed8:	0f 90       	pop	r0
    1eda:	0f 90       	pop	r0
    1edc:	0f 90       	pop	r0
    1ede:	cf 91       	pop	r28
    1ee0:	df 91       	pop	r29
    1ee2:	08 95       	ret

00001ee4 <Lcd_IntToChar>:
void Lcd_IntToChar(s32 inte)
{
    1ee4:	df 93       	push	r29
    1ee6:	cf 93       	push	r28
    1ee8:	cd b7       	in	r28, 0x3d	; 61
    1eea:	de b7       	in	r29, 0x3e	; 62
    1eec:	2a 97       	sbiw	r28, 0x0a	; 10
    1eee:	0f b6       	in	r0, 0x3f	; 63
    1ef0:	f8 94       	cli
    1ef2:	de bf       	out	0x3e, r29	; 62
    1ef4:	0f be       	out	0x3f, r0	; 63
    1ef6:	cd bf       	out	0x3d, r28	; 61
    1ef8:	6e 83       	std	Y+6, r22	; 0x06
    1efa:	7f 83       	std	Y+7, r23	; 0x07
    1efc:	88 87       	std	Y+8, r24	; 0x08
    1efe:	99 87       	std	Y+9, r25	; 0x09
	if(inte<0)
    1f00:	8e 81       	ldd	r24, Y+6	; 0x06
    1f02:	9f 81       	ldd	r25, Y+7	; 0x07
    1f04:	a8 85       	ldd	r26, Y+8	; 0x08
    1f06:	b9 85       	ldd	r27, Y+9	; 0x09
    1f08:	bb 23       	and	r27, r27
    1f0a:	94 f4       	brge	.+36     	; 0x1f30 <Lcd_IntToChar+0x4c>
	{
		LCD_SendChar('-');
    1f0c:	8d e2       	ldi	r24, 0x2D	; 45
    1f0e:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <LCD_SendChar>
		inte=inte*(-1);
    1f12:	8e 81       	ldd	r24, Y+6	; 0x06
    1f14:	9f 81       	ldd	r25, Y+7	; 0x07
    1f16:	a8 85       	ldd	r26, Y+8	; 0x08
    1f18:	b9 85       	ldd	r27, Y+9	; 0x09
    1f1a:	b0 95       	com	r27
    1f1c:	a0 95       	com	r26
    1f1e:	90 95       	com	r25
    1f20:	81 95       	neg	r24
    1f22:	9f 4f       	sbci	r25, 0xFF	; 255
    1f24:	af 4f       	sbci	r26, 0xFF	; 255
    1f26:	bf 4f       	sbci	r27, 0xFF	; 255
    1f28:	8e 83       	std	Y+6, r24	; 0x06
    1f2a:	9f 83       	std	Y+7, r25	; 0x07
    1f2c:	a8 87       	std	Y+8, r26	; 0x08
    1f2e:	b9 87       	std	Y+9, r27	; 0x09
	}

	u32 cha=0;
    1f30:	1a 82       	std	Y+2, r1	; 0x02
    1f32:	1b 82       	std	Y+3, r1	; 0x03
    1f34:	1c 82       	std	Y+4, r1	; 0x04
    1f36:	1d 82       	std	Y+5, r1	; 0x05
	u8 ZeroesNumber=0;
    1f38:	19 82       	std	Y+1, r1	; 0x01
    1f3a:	15 c0       	rjmp	.+42     	; 0x1f66 <Lcd_IntToChar+0x82>
	while(inte%10==0&&inte!=0)
	{
		ZeroesNumber++;
    1f3c:	89 81       	ldd	r24, Y+1	; 0x01
    1f3e:	8f 5f       	subi	r24, 0xFF	; 255
    1f40:	89 83       	std	Y+1, r24	; 0x01
		inte=inte/10;
    1f42:	8e 81       	ldd	r24, Y+6	; 0x06
    1f44:	9f 81       	ldd	r25, Y+7	; 0x07
    1f46:	a8 85       	ldd	r26, Y+8	; 0x08
    1f48:	b9 85       	ldd	r27, Y+9	; 0x09
    1f4a:	2a e0       	ldi	r18, 0x0A	; 10
    1f4c:	30 e0       	ldi	r19, 0x00	; 0
    1f4e:	40 e0       	ldi	r20, 0x00	; 0
    1f50:	50 e0       	ldi	r21, 0x00	; 0
    1f52:	bc 01       	movw	r22, r24
    1f54:	cd 01       	movw	r24, r26
    1f56:	0e 94 b5 33 	call	0x676a	; 0x676a <__divmodsi4>
    1f5a:	da 01       	movw	r26, r20
    1f5c:	c9 01       	movw	r24, r18
    1f5e:	8e 83       	std	Y+6, r24	; 0x06
    1f60:	9f 83       	std	Y+7, r25	; 0x07
    1f62:	a8 87       	std	Y+8, r26	; 0x08
    1f64:	b9 87       	std	Y+9, r27	; 0x09
		inte=inte*(-1);
	}

	u32 cha=0;
	u8 ZeroesNumber=0;
	while(inte%10==0&&inte!=0)
    1f66:	8e 81       	ldd	r24, Y+6	; 0x06
    1f68:	9f 81       	ldd	r25, Y+7	; 0x07
    1f6a:	a8 85       	ldd	r26, Y+8	; 0x08
    1f6c:	b9 85       	ldd	r27, Y+9	; 0x09
    1f6e:	2a e0       	ldi	r18, 0x0A	; 10
    1f70:	30 e0       	ldi	r19, 0x00	; 0
    1f72:	40 e0       	ldi	r20, 0x00	; 0
    1f74:	50 e0       	ldi	r21, 0x00	; 0
    1f76:	bc 01       	movw	r22, r24
    1f78:	cd 01       	movw	r24, r26
    1f7a:	0e 94 b5 33 	call	0x676a	; 0x676a <__divmodsi4>
    1f7e:	dc 01       	movw	r26, r24
    1f80:	cb 01       	movw	r24, r22
    1f82:	00 97       	sbiw	r24, 0x00	; 0
    1f84:	a1 05       	cpc	r26, r1
    1f86:	b1 05       	cpc	r27, r1
    1f88:	09 f0       	breq	.+2      	; 0x1f8c <Lcd_IntToChar+0xa8>
    1f8a:	49 c0       	rjmp	.+146    	; 0x201e <Lcd_IntToChar+0x13a>
    1f8c:	8e 81       	ldd	r24, Y+6	; 0x06
    1f8e:	9f 81       	ldd	r25, Y+7	; 0x07
    1f90:	a8 85       	ldd	r26, Y+8	; 0x08
    1f92:	b9 85       	ldd	r27, Y+9	; 0x09
    1f94:	00 97       	sbiw	r24, 0x00	; 0
    1f96:	a1 05       	cpc	r26, r1
    1f98:	b1 05       	cpc	r27, r1
    1f9a:	81 f6       	brne	.-96     	; 0x1f3c <Lcd_IntToChar+0x58>
    1f9c:	40 c0       	rjmp	.+128    	; 0x201e <Lcd_IntToChar+0x13a>
		ZeroesNumber++;
		inte=inte/10;
	}
	while(inte)
	{
		cha=cha*10;
    1f9e:	8a 81       	ldd	r24, Y+2	; 0x02
    1fa0:	9b 81       	ldd	r25, Y+3	; 0x03
    1fa2:	ac 81       	ldd	r26, Y+4	; 0x04
    1fa4:	bd 81       	ldd	r27, Y+5	; 0x05
    1fa6:	2a e0       	ldi	r18, 0x0A	; 10
    1fa8:	30 e0       	ldi	r19, 0x00	; 0
    1faa:	40 e0       	ldi	r20, 0x00	; 0
    1fac:	50 e0       	ldi	r21, 0x00	; 0
    1fae:	bc 01       	movw	r22, r24
    1fb0:	cd 01       	movw	r24, r26
    1fb2:	0e 94 68 33 	call	0x66d0	; 0x66d0 <__mulsi3>
    1fb6:	dc 01       	movw	r26, r24
    1fb8:	cb 01       	movw	r24, r22
    1fba:	8a 83       	std	Y+2, r24	; 0x02
    1fbc:	9b 83       	std	Y+3, r25	; 0x03
    1fbe:	ac 83       	std	Y+4, r26	; 0x04
    1fc0:	bd 83       	std	Y+5, r27	; 0x05
		cha=cha+(inte%10);
    1fc2:	8e 81       	ldd	r24, Y+6	; 0x06
    1fc4:	9f 81       	ldd	r25, Y+7	; 0x07
    1fc6:	a8 85       	ldd	r26, Y+8	; 0x08
    1fc8:	b9 85       	ldd	r27, Y+9	; 0x09
    1fca:	2a e0       	ldi	r18, 0x0A	; 10
    1fcc:	30 e0       	ldi	r19, 0x00	; 0
    1fce:	40 e0       	ldi	r20, 0x00	; 0
    1fd0:	50 e0       	ldi	r21, 0x00	; 0
    1fd2:	bc 01       	movw	r22, r24
    1fd4:	cd 01       	movw	r24, r26
    1fd6:	0e 94 b5 33 	call	0x676a	; 0x676a <__divmodsi4>
    1fda:	dc 01       	movw	r26, r24
    1fdc:	cb 01       	movw	r24, r22
    1fde:	9c 01       	movw	r18, r24
    1fe0:	ad 01       	movw	r20, r26
    1fe2:	8a 81       	ldd	r24, Y+2	; 0x02
    1fe4:	9b 81       	ldd	r25, Y+3	; 0x03
    1fe6:	ac 81       	ldd	r26, Y+4	; 0x04
    1fe8:	bd 81       	ldd	r27, Y+5	; 0x05
    1fea:	82 0f       	add	r24, r18
    1fec:	93 1f       	adc	r25, r19
    1fee:	a4 1f       	adc	r26, r20
    1ff0:	b5 1f       	adc	r27, r21
    1ff2:	8a 83       	std	Y+2, r24	; 0x02
    1ff4:	9b 83       	std	Y+3, r25	; 0x03
    1ff6:	ac 83       	std	Y+4, r26	; 0x04
    1ff8:	bd 83       	std	Y+5, r27	; 0x05
		inte=inte/10;
    1ffa:	8e 81       	ldd	r24, Y+6	; 0x06
    1ffc:	9f 81       	ldd	r25, Y+7	; 0x07
    1ffe:	a8 85       	ldd	r26, Y+8	; 0x08
    2000:	b9 85       	ldd	r27, Y+9	; 0x09
    2002:	2a e0       	ldi	r18, 0x0A	; 10
    2004:	30 e0       	ldi	r19, 0x00	; 0
    2006:	40 e0       	ldi	r20, 0x00	; 0
    2008:	50 e0       	ldi	r21, 0x00	; 0
    200a:	bc 01       	movw	r22, r24
    200c:	cd 01       	movw	r24, r26
    200e:	0e 94 b5 33 	call	0x676a	; 0x676a <__divmodsi4>
    2012:	da 01       	movw	r26, r20
    2014:	c9 01       	movw	r24, r18
    2016:	8e 83       	std	Y+6, r24	; 0x06
    2018:	9f 83       	std	Y+7, r25	; 0x07
    201a:	a8 87       	std	Y+8, r26	; 0x08
    201c:	b9 87       	std	Y+9, r27	; 0x09
	while(inte%10==0&&inte!=0)
	{
		ZeroesNumber++;
		inte=inte/10;
	}
	while(inte)
    201e:	8e 81       	ldd	r24, Y+6	; 0x06
    2020:	9f 81       	ldd	r25, Y+7	; 0x07
    2022:	a8 85       	ldd	r26, Y+8	; 0x08
    2024:	b9 85       	ldd	r27, Y+9	; 0x09
    2026:	00 97       	sbiw	r24, 0x00	; 0
    2028:	a1 05       	cpc	r26, r1
    202a:	b1 05       	cpc	r27, r1
    202c:	09 f0       	breq	.+2      	; 0x2030 <Lcd_IntToChar+0x14c>
    202e:	b7 cf       	rjmp	.-146    	; 0x1f9e <Lcd_IntToChar+0xba>
	{
		cha=cha*10;
		cha=cha+(inte%10);
		inte=inte/10;
	}
	if (cha ==0)
    2030:	8a 81       	ldd	r24, Y+2	; 0x02
    2032:	9b 81       	ldd	r25, Y+3	; 0x03
    2034:	ac 81       	ldd	r26, Y+4	; 0x04
    2036:	bd 81       	ldd	r27, Y+5	; 0x05
    2038:	00 97       	sbiw	r24, 0x00	; 0
    203a:	a1 05       	cpc	r26, r1
    203c:	b1 05       	cpc	r27, r1
    203e:	39 f5       	brne	.+78     	; 0x208e <Lcd_IntToChar+0x1aa>
	{
		LCD_SendChar('0');
    2040:	80 e3       	ldi	r24, 0x30	; 48
    2042:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <LCD_SendChar>
    2046:	23 c0       	rjmp	.+70     	; 0x208e <Lcd_IntToChar+0x1aa>
	}
	while(cha)
	{
		LCD_SendChar((cha%10)+'0');
    2048:	8a 81       	ldd	r24, Y+2	; 0x02
    204a:	9b 81       	ldd	r25, Y+3	; 0x03
    204c:	ac 81       	ldd	r26, Y+4	; 0x04
    204e:	bd 81       	ldd	r27, Y+5	; 0x05
    2050:	2a e0       	ldi	r18, 0x0A	; 10
    2052:	30 e0       	ldi	r19, 0x00	; 0
    2054:	40 e0       	ldi	r20, 0x00	; 0
    2056:	50 e0       	ldi	r21, 0x00	; 0
    2058:	bc 01       	movw	r22, r24
    205a:	cd 01       	movw	r24, r26
    205c:	0e 94 93 33 	call	0x6726	; 0x6726 <__udivmodsi4>
    2060:	dc 01       	movw	r26, r24
    2062:	cb 01       	movw	r24, r22
    2064:	80 5d       	subi	r24, 0xD0	; 208
    2066:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <LCD_SendChar>
		cha=cha/10;
    206a:	8a 81       	ldd	r24, Y+2	; 0x02
    206c:	9b 81       	ldd	r25, Y+3	; 0x03
    206e:	ac 81       	ldd	r26, Y+4	; 0x04
    2070:	bd 81       	ldd	r27, Y+5	; 0x05
    2072:	2a e0       	ldi	r18, 0x0A	; 10
    2074:	30 e0       	ldi	r19, 0x00	; 0
    2076:	40 e0       	ldi	r20, 0x00	; 0
    2078:	50 e0       	ldi	r21, 0x00	; 0
    207a:	bc 01       	movw	r22, r24
    207c:	cd 01       	movw	r24, r26
    207e:	0e 94 93 33 	call	0x6726	; 0x6726 <__udivmodsi4>
    2082:	da 01       	movw	r26, r20
    2084:	c9 01       	movw	r24, r18
    2086:	8a 83       	std	Y+2, r24	; 0x02
    2088:	9b 83       	std	Y+3, r25	; 0x03
    208a:	ac 83       	std	Y+4, r26	; 0x04
    208c:	bd 83       	std	Y+5, r27	; 0x05
	}
	if (cha ==0)
	{
		LCD_SendChar('0');
	}
	while(cha)
    208e:	8a 81       	ldd	r24, Y+2	; 0x02
    2090:	9b 81       	ldd	r25, Y+3	; 0x03
    2092:	ac 81       	ldd	r26, Y+4	; 0x04
    2094:	bd 81       	ldd	r27, Y+5	; 0x05
    2096:	00 97       	sbiw	r24, 0x00	; 0
    2098:	a1 05       	cpc	r26, r1
    209a:	b1 05       	cpc	r27, r1
    209c:	a9 f6       	brne	.-86     	; 0x2048 <Lcd_IntToChar+0x164>
    209e:	03 c0       	rjmp	.+6      	; 0x20a6 <Lcd_IntToChar+0x1c2>
		cha=cha/10;

	}
	while(ZeroesNumber--)
	{
		LCD_SendChar('0');
    20a0:	80 e3       	ldi	r24, 0x30	; 48
    20a2:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <LCD_SendChar>
	{
		LCD_SendChar((cha%10)+'0');
		cha=cha/10;

	}
	while(ZeroesNumber--)
    20a6:	89 81       	ldd	r24, Y+1	; 0x01
    20a8:	8a 87       	std	Y+10, r24	; 0x0a
    20aa:	8a 85       	ldd	r24, Y+10	; 0x0a
    20ac:	88 23       	and	r24, r24
    20ae:	11 f0       	breq	.+4      	; 0x20b4 <Lcd_IntToChar+0x1d0>
    20b0:	81 e0       	ldi	r24, 0x01	; 1
    20b2:	8a 87       	std	Y+10, r24	; 0x0a
    20b4:	8a 85       	ldd	r24, Y+10	; 0x0a
    20b6:	99 81       	ldd	r25, Y+1	; 0x01
    20b8:	91 50       	subi	r25, 0x01	; 1
    20ba:	99 83       	std	Y+1, r25	; 0x01
    20bc:	88 23       	and	r24, r24
    20be:	81 f7       	brne	.-32     	; 0x20a0 <Lcd_IntToChar+0x1bc>
	{
		LCD_SendChar('0');
	}

}
    20c0:	2a 96       	adiw	r28, 0x0a	; 10
    20c2:	0f b6       	in	r0, 0x3f	; 63
    20c4:	f8 94       	cli
    20c6:	de bf       	out	0x3e, r29	; 62
    20c8:	0f be       	out	0x3f, r0	; 63
    20ca:	cd bf       	out	0x3d, r28	; 61
    20cc:	cf 91       	pop	r28
    20ce:	df 91       	pop	r29
    20d0:	08 95       	ret

000020d2 <Keypad_Inti>:
		   	 {'1','2','3','-'},
			 {'n','0','=','+'}
			};

void Keypad_Inti(void)
{
    20d2:	df 93       	push	r29
    20d4:	cf 93       	push	r28
    20d6:	cd b7       	in	r28, 0x3d	; 61
    20d8:	de b7       	in	r29, 0x3e	; 62
	SetPin_Dir(Keypad_port, Keypad_Row0, PIN_IN);
    20da:	81 e0       	ldi	r24, 0x01	; 1
    20dc:	60 e0       	ldi	r22, 0x00	; 0
    20de:	40 e0       	ldi	r20, 0x00	; 0
    20e0:	0e 94 02 07 	call	0xe04	; 0xe04 <SetPin_Dir>
	SetPin_Dir(Keypad_port, Keypad_Row1, PIN_IN);
    20e4:	81 e0       	ldi	r24, 0x01	; 1
    20e6:	61 e0       	ldi	r22, 0x01	; 1
    20e8:	40 e0       	ldi	r20, 0x00	; 0
    20ea:	0e 94 02 07 	call	0xe04	; 0xe04 <SetPin_Dir>
	SetPin_Dir(Keypad_port, Keypad_Row2, PIN_IN);
    20ee:	81 e0       	ldi	r24, 0x01	; 1
    20f0:	62 e0       	ldi	r22, 0x02	; 2
    20f2:	40 e0       	ldi	r20, 0x00	; 0
    20f4:	0e 94 02 07 	call	0xe04	; 0xe04 <SetPin_Dir>
	SetPin_Dir(Keypad_port, Keypad_Row3, PIN_IN);
    20f8:	81 e0       	ldi	r24, 0x01	; 1
    20fa:	63 e0       	ldi	r22, 0x03	; 3
    20fc:	40 e0       	ldi	r20, 0x00	; 0
    20fe:	0e 94 02 07 	call	0xe04	; 0xe04 <SetPin_Dir>

	SetPin_Dir(Keypad_port, Keypad_Clmn0, PIN_OUT);
    2102:	81 e0       	ldi	r24, 0x01	; 1
    2104:	64 e0       	ldi	r22, 0x04	; 4
    2106:	41 e0       	ldi	r20, 0x01	; 1
    2108:	0e 94 02 07 	call	0xe04	; 0xe04 <SetPin_Dir>
	SetPin_Dir(Keypad_port, Keypad_Clmn1, PIN_OUT);
    210c:	81 e0       	ldi	r24, 0x01	; 1
    210e:	65 e0       	ldi	r22, 0x05	; 5
    2110:	41 e0       	ldi	r20, 0x01	; 1
    2112:	0e 94 02 07 	call	0xe04	; 0xe04 <SetPin_Dir>
	SetPin_Dir(Keypad_port, Keypad_Clmn2, PIN_OUT);
    2116:	81 e0       	ldi	r24, 0x01	; 1
    2118:	66 e0       	ldi	r22, 0x06	; 6
    211a:	41 e0       	ldi	r20, 0x01	; 1
    211c:	0e 94 02 07 	call	0xe04	; 0xe04 <SetPin_Dir>
	SetPin_Dir(Keypad_port, Keypad_Clmn3, PIN_OUT);
    2120:	81 e0       	ldi	r24, 0x01	; 1
    2122:	67 e0       	ldi	r22, 0x07	; 7
    2124:	41 e0       	ldi	r20, 0x01	; 1
    2126:	0e 94 02 07 	call	0xe04	; 0xe04 <SetPin_Dir>

	SetPin_Val(Keypad_port, Keypad_Clmn0, PIN_HIGH);
    212a:	81 e0       	ldi	r24, 0x01	; 1
    212c:	64 e0       	ldi	r22, 0x04	; 4
    212e:	41 e0       	ldi	r20, 0x01	; 1
    2130:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
	SetPin_Val(Keypad_port, Keypad_Clmn1, PIN_HIGH);
    2134:	81 e0       	ldi	r24, 0x01	; 1
    2136:	65 e0       	ldi	r22, 0x05	; 5
    2138:	41 e0       	ldi	r20, 0x01	; 1
    213a:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
	SetPin_Val(Keypad_port, Keypad_Clmn2, PIN_HIGH);
    213e:	81 e0       	ldi	r24, 0x01	; 1
    2140:	66 e0       	ldi	r22, 0x06	; 6
    2142:	41 e0       	ldi	r20, 0x01	; 1
    2144:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
	SetPin_Val(Keypad_port, Keypad_Clmn3, PIN_HIGH);
    2148:	81 e0       	ldi	r24, 0x01	; 1
    214a:	67 e0       	ldi	r22, 0x07	; 7
    214c:	41 e0       	ldi	r20, 0x01	; 1
    214e:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>

	Pin_pullUp(Keypad_port, Keypad_Row0);
    2152:	81 e0       	ldi	r24, 0x01	; 1
    2154:	60 e0       	ldi	r22, 0x00	; 0
    2156:	0e 94 94 09 	call	0x1328	; 0x1328 <Pin_pullUp>
	Pin_pullUp(Keypad_port, Keypad_Row1);
    215a:	81 e0       	ldi	r24, 0x01	; 1
    215c:	61 e0       	ldi	r22, 0x01	; 1
    215e:	0e 94 94 09 	call	0x1328	; 0x1328 <Pin_pullUp>
	Pin_pullUp(Keypad_port, Keypad_Row2);
    2162:	81 e0       	ldi	r24, 0x01	; 1
    2164:	62 e0       	ldi	r22, 0x02	; 2
    2166:	0e 94 94 09 	call	0x1328	; 0x1328 <Pin_pullUp>
	Pin_pullUp(Keypad_port, Keypad_Row3);
    216a:	81 e0       	ldi	r24, 0x01	; 1
    216c:	63 e0       	ldi	r22, 0x03	; 3
    216e:	0e 94 94 09 	call	0x1328	; 0x1328 <Pin_pullUp>



}
    2172:	cf 91       	pop	r28
    2174:	df 91       	pop	r29
    2176:	08 95       	ret

00002178 <keypad_GetVal>:
u8 keypad_GetVal(void)
{
    2178:	df 93       	push	r29
    217a:	cf 93       	push	r28
    217c:	cd b7       	in	r28, 0x3d	; 61
    217e:	de b7       	in	r29, 0x3e	; 62
    2180:	63 97       	sbiw	r28, 0x13	; 19
    2182:	0f b6       	in	r0, 0x3f	; 63
    2184:	f8 94       	cli
    2186:	de bf       	out	0x3e, r29	; 62
    2188:	0f be       	out	0x3f, r0	; 63
    218a:	cd bf       	out	0x3d, r28	; 61
	u8 val=0;
    218c:	1b 8a       	std	Y+19, r1	; 0x13
	for(int i=Keypad_Clmn0;i<=Keypad_Clmn3;i++)
    218e:	84 e0       	ldi	r24, 0x04	; 4
    2190:	90 e0       	ldi	r25, 0x00	; 0
    2192:	9a 8b       	std	Y+18, r25	; 0x12
    2194:	89 8b       	std	Y+17, r24	; 0x11
    2196:	b2 c0       	rjmp	.+356    	; 0x22fc <keypad_GetVal+0x184>
	{
		SetPin_Val(Keypad_port,i, PIN_LOW);
    2198:	99 89       	ldd	r25, Y+17	; 0x11
    219a:	81 e0       	ldi	r24, 0x01	; 1
    219c:	69 2f       	mov	r22, r25
    219e:	40 e0       	ldi	r20, 0x00	; 0
    21a0:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
		for(int j=Keypad_Row0;j<=Keypad_Row3;j++)
    21a4:	18 8a       	std	Y+16, r1	; 0x10
    21a6:	1f 86       	std	Y+15, r1	; 0x0f
    21a8:	98 c0       	rjmp	.+304    	; 0x22da <keypad_GetVal+0x162>
		{
			if(Get_PinVal(Keypad_port, j)==0)
    21aa:	9f 85       	ldd	r25, Y+15	; 0x0f
    21ac:	81 e0       	ldi	r24, 0x01	; 1
    21ae:	69 2f       	mov	r22, r25
    21b0:	0e 94 12 09 	call	0x1224	; 0x1224 <Get_PinVal>
    21b4:	88 23       	and	r24, r24
    21b6:	d1 f4       	brne	.+52     	; 0x21ec <keypad_GetVal+0x74>
			{
				val=KeyPadVal[j][i-4];
    21b8:	4f 85       	ldd	r20, Y+15	; 0x0f
    21ba:	58 89       	ldd	r21, Y+16	; 0x10
    21bc:	89 89       	ldd	r24, Y+17	; 0x11
    21be:	9a 89       	ldd	r25, Y+18	; 0x12
    21c0:	9c 01       	movw	r18, r24
    21c2:	24 50       	subi	r18, 0x04	; 4
    21c4:	30 40       	sbci	r19, 0x00	; 0
    21c6:	ca 01       	movw	r24, r20
    21c8:	88 0f       	add	r24, r24
    21ca:	99 1f       	adc	r25, r25
    21cc:	88 0f       	add	r24, r24
    21ce:	99 1f       	adc	r25, r25
    21d0:	82 0f       	add	r24, r18
    21d2:	93 1f       	adc	r25, r19
    21d4:	fc 01       	movw	r30, r24
    21d6:	e0 57       	subi	r30, 0x70	; 112
    21d8:	fe 4f       	sbci	r31, 0xFE	; 254
    21da:	80 81       	ld	r24, Z
    21dc:	8b 8b       	std	Y+19, r24	; 0x13
				while(Get_PinVal(Keypad_port, j)==0);
    21de:	9f 85       	ldd	r25, Y+15	; 0x0f
    21e0:	81 e0       	ldi	r24, 0x01	; 1
    21e2:	69 2f       	mov	r22, r25
    21e4:	0e 94 12 09 	call	0x1224	; 0x1224 <Get_PinVal>
    21e8:	88 23       	and	r24, r24
    21ea:	c9 f3       	breq	.-14     	; 0x21de <keypad_GetVal+0x66>
    21ec:	80 e0       	ldi	r24, 0x00	; 0
    21ee:	90 e0       	ldi	r25, 0x00	; 0
    21f0:	a0 e2       	ldi	r26, 0x20	; 32
    21f2:	b1 e4       	ldi	r27, 0x41	; 65
    21f4:	8b 87       	std	Y+11, r24	; 0x0b
    21f6:	9c 87       	std	Y+12, r25	; 0x0c
    21f8:	ad 87       	std	Y+13, r26	; 0x0d
    21fa:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21fc:	6b 85       	ldd	r22, Y+11	; 0x0b
    21fe:	7c 85       	ldd	r23, Y+12	; 0x0c
    2200:	8d 85       	ldd	r24, Y+13	; 0x0d
    2202:	9e 85       	ldd	r25, Y+14	; 0x0e
    2204:	20 e0       	ldi	r18, 0x00	; 0
    2206:	30 e0       	ldi	r19, 0x00	; 0
    2208:	4a ef       	ldi	r20, 0xFA	; 250
    220a:	54 e4       	ldi	r21, 0x44	; 68
    220c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2210:	dc 01       	movw	r26, r24
    2212:	cb 01       	movw	r24, r22
    2214:	8f 83       	std	Y+7, r24	; 0x07
    2216:	98 87       	std	Y+8, r25	; 0x08
    2218:	a9 87       	std	Y+9, r26	; 0x09
    221a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    221c:	6f 81       	ldd	r22, Y+7	; 0x07
    221e:	78 85       	ldd	r23, Y+8	; 0x08
    2220:	89 85       	ldd	r24, Y+9	; 0x09
    2222:	9a 85       	ldd	r25, Y+10	; 0x0a
    2224:	20 e0       	ldi	r18, 0x00	; 0
    2226:	30 e0       	ldi	r19, 0x00	; 0
    2228:	40 e8       	ldi	r20, 0x80	; 128
    222a:	5f e3       	ldi	r21, 0x3F	; 63
    222c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2230:	88 23       	and	r24, r24
    2232:	2c f4       	brge	.+10     	; 0x223e <keypad_GetVal+0xc6>
		__ticks = 1;
    2234:	81 e0       	ldi	r24, 0x01	; 1
    2236:	90 e0       	ldi	r25, 0x00	; 0
    2238:	9e 83       	std	Y+6, r25	; 0x06
    223a:	8d 83       	std	Y+5, r24	; 0x05
    223c:	3f c0       	rjmp	.+126    	; 0x22bc <keypad_GetVal+0x144>
	else if (__tmp > 65535)
    223e:	6f 81       	ldd	r22, Y+7	; 0x07
    2240:	78 85       	ldd	r23, Y+8	; 0x08
    2242:	89 85       	ldd	r24, Y+9	; 0x09
    2244:	9a 85       	ldd	r25, Y+10	; 0x0a
    2246:	20 e0       	ldi	r18, 0x00	; 0
    2248:	3f ef       	ldi	r19, 0xFF	; 255
    224a:	4f e7       	ldi	r20, 0x7F	; 127
    224c:	57 e4       	ldi	r21, 0x47	; 71
    224e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2252:	18 16       	cp	r1, r24
    2254:	4c f5       	brge	.+82     	; 0x22a8 <keypad_GetVal+0x130>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2256:	6b 85       	ldd	r22, Y+11	; 0x0b
    2258:	7c 85       	ldd	r23, Y+12	; 0x0c
    225a:	8d 85       	ldd	r24, Y+13	; 0x0d
    225c:	9e 85       	ldd	r25, Y+14	; 0x0e
    225e:	20 e0       	ldi	r18, 0x00	; 0
    2260:	30 e0       	ldi	r19, 0x00	; 0
    2262:	40 e2       	ldi	r20, 0x20	; 32
    2264:	51 e4       	ldi	r21, 0x41	; 65
    2266:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    226a:	dc 01       	movw	r26, r24
    226c:	cb 01       	movw	r24, r22
    226e:	bc 01       	movw	r22, r24
    2270:	cd 01       	movw	r24, r26
    2272:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2276:	dc 01       	movw	r26, r24
    2278:	cb 01       	movw	r24, r22
    227a:	9e 83       	std	Y+6, r25	; 0x06
    227c:	8d 83       	std	Y+5, r24	; 0x05
    227e:	0f c0       	rjmp	.+30     	; 0x229e <keypad_GetVal+0x126>
    2280:	88 ec       	ldi	r24, 0xC8	; 200
    2282:	90 e0       	ldi	r25, 0x00	; 0
    2284:	9c 83       	std	Y+4, r25	; 0x04
    2286:	8b 83       	std	Y+3, r24	; 0x03
    2288:	8b 81       	ldd	r24, Y+3	; 0x03
    228a:	9c 81       	ldd	r25, Y+4	; 0x04
    228c:	01 97       	sbiw	r24, 0x01	; 1
    228e:	f1 f7       	brne	.-4      	; 0x228c <keypad_GetVal+0x114>
    2290:	9c 83       	std	Y+4, r25	; 0x04
    2292:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2294:	8d 81       	ldd	r24, Y+5	; 0x05
    2296:	9e 81       	ldd	r25, Y+6	; 0x06
    2298:	01 97       	sbiw	r24, 0x01	; 1
    229a:	9e 83       	std	Y+6, r25	; 0x06
    229c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    229e:	8d 81       	ldd	r24, Y+5	; 0x05
    22a0:	9e 81       	ldd	r25, Y+6	; 0x06
    22a2:	00 97       	sbiw	r24, 0x00	; 0
    22a4:	69 f7       	brne	.-38     	; 0x2280 <keypad_GetVal+0x108>
    22a6:	14 c0       	rjmp	.+40     	; 0x22d0 <keypad_GetVal+0x158>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22a8:	6f 81       	ldd	r22, Y+7	; 0x07
    22aa:	78 85       	ldd	r23, Y+8	; 0x08
    22ac:	89 85       	ldd	r24, Y+9	; 0x09
    22ae:	9a 85       	ldd	r25, Y+10	; 0x0a
    22b0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    22b4:	dc 01       	movw	r26, r24
    22b6:	cb 01       	movw	r24, r22
    22b8:	9e 83       	std	Y+6, r25	; 0x06
    22ba:	8d 83       	std	Y+5, r24	; 0x05
    22bc:	8d 81       	ldd	r24, Y+5	; 0x05
    22be:	9e 81       	ldd	r25, Y+6	; 0x06
    22c0:	9a 83       	std	Y+2, r25	; 0x02
    22c2:	89 83       	std	Y+1, r24	; 0x01
    22c4:	89 81       	ldd	r24, Y+1	; 0x01
    22c6:	9a 81       	ldd	r25, Y+2	; 0x02
    22c8:	01 97       	sbiw	r24, 0x01	; 1
    22ca:	f1 f7       	brne	.-4      	; 0x22c8 <keypad_GetVal+0x150>
    22cc:	9a 83       	std	Y+2, r25	; 0x02
    22ce:	89 83       	std	Y+1, r24	; 0x01
{
	u8 val=0;
	for(int i=Keypad_Clmn0;i<=Keypad_Clmn3;i++)
	{
		SetPin_Val(Keypad_port,i, PIN_LOW);
		for(int j=Keypad_Row0;j<=Keypad_Row3;j++)
    22d0:	8f 85       	ldd	r24, Y+15	; 0x0f
    22d2:	98 89       	ldd	r25, Y+16	; 0x10
    22d4:	01 96       	adiw	r24, 0x01	; 1
    22d6:	98 8b       	std	Y+16, r25	; 0x10
    22d8:	8f 87       	std	Y+15, r24	; 0x0f
    22da:	8f 85       	ldd	r24, Y+15	; 0x0f
    22dc:	98 89       	ldd	r25, Y+16	; 0x10
    22de:	84 30       	cpi	r24, 0x04	; 4
    22e0:	91 05       	cpc	r25, r1
    22e2:	0c f4       	brge	.+2      	; 0x22e6 <keypad_GetVal+0x16e>
    22e4:	62 cf       	rjmp	.-316    	; 0x21aa <keypad_GetVal+0x32>
				while(Get_PinVal(Keypad_port, j)==0);
			}
			_delay_ms(10);

		}
		SetPin_Val(Keypad_port,i, PIN_HIGH);
    22e6:	99 89       	ldd	r25, Y+17	; 0x11
    22e8:	81 e0       	ldi	r24, 0x01	; 1
    22ea:	69 2f       	mov	r22, r25
    22ec:	41 e0       	ldi	r20, 0x01	; 1
    22ee:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>

}
u8 keypad_GetVal(void)
{
	u8 val=0;
	for(int i=Keypad_Clmn0;i<=Keypad_Clmn3;i++)
    22f2:	89 89       	ldd	r24, Y+17	; 0x11
    22f4:	9a 89       	ldd	r25, Y+18	; 0x12
    22f6:	01 96       	adiw	r24, 0x01	; 1
    22f8:	9a 8b       	std	Y+18, r25	; 0x12
    22fa:	89 8b       	std	Y+17, r24	; 0x11
    22fc:	89 89       	ldd	r24, Y+17	; 0x11
    22fe:	9a 89       	ldd	r25, Y+18	; 0x12
    2300:	88 30       	cpi	r24, 0x08	; 8
    2302:	91 05       	cpc	r25, r1
    2304:	0c f4       	brge	.+2      	; 0x2308 <keypad_GetVal+0x190>
    2306:	48 cf       	rjmp	.-368    	; 0x2198 <keypad_GetVal+0x20>
		SetPin_Val(Keypad_port,i, PIN_HIGH);

	}


	return val;
    2308:	8b 89       	ldd	r24, Y+19	; 0x13
}
    230a:	63 96       	adiw	r28, 0x13	; 19
    230c:	0f b6       	in	r0, 0x3f	; 63
    230e:	f8 94       	cli
    2310:	de bf       	out	0x3e, r29	; 62
    2312:	0f be       	out	0x3f, r0	; 63
    2314:	cd bf       	out	0x3d, r28	; 61
    2316:	cf 91       	pop	r28
    2318:	df 91       	pop	r29
    231a:	08 95       	ret

0000231c <Set_hour>:
#include "../LIB/Types.h"
#include "../MCAL/DIO/Intr.h"
#include "../HAL/LCD/Intr.h"
#include "../HAL/KEYBAD/Intr.h"
u8 Set_hour(void)
{u8 hour_1=0;
    231c:	df 93       	push	r29
    231e:	cf 93       	push	r28
    2320:	cd b7       	in	r28, 0x3d	; 61
    2322:	de b7       	in	r29, 0x3e	; 62
    2324:	6e 97       	sbiw	r28, 0x1e	; 30
    2326:	0f b6       	in	r0, 0x3f	; 63
    2328:	f8 94       	cli
    232a:	de bf       	out	0x3e, r29	; 62
    232c:	0f be       	out	0x3f, r0	; 63
    232e:	cd bf       	out	0x3d, r28	; 61
    2330:	1e 8e       	std	Y+30, r1	; 0x1e
	LCD_SendString("hour....");
    2332:	80 e6       	ldi	r24, 0x60	; 96
    2334:	90 e0       	ldi	r25, 0x00	; 0
    2336:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
		LCD_GoTO(2, 14);
    233a:	82 e0       	ldi	r24, 0x02	; 2
    233c:	6e e0       	ldi	r22, 0x0E	; 14
    233e:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <LCD_GoTO>
		while(1)
		{
			u8 tmp =keypad_GetVal();
    2342:	0e 94 bc 10 	call	0x2178	; 0x2178 <keypad_GetVal>
    2346:	8d 8f       	std	Y+29, r24	; 0x1d
				if(tmp!=0)
    2348:	8d 8d       	ldd	r24, Y+29	; 0x1d
    234a:	88 23       	and	r24, r24
    234c:	d1 f3       	breq	.-12     	; 0x2342 <Set_hour+0x26>
				{
					if(tmp>='0'&&tmp<='9')
    234e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2350:	80 33       	cpi	r24, 0x30	; 48
    2352:	08 f4       	brcc	.+2      	; 0x2356 <Set_hour+0x3a>
    2354:	a3 c0       	rjmp	.+326    	; 0x249c <Set_hour+0x180>
    2356:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2358:	8a 33       	cpi	r24, 0x3A	; 58
    235a:	08 f0       	brcs	.+2      	; 0x235e <Set_hour+0x42>
    235c:	9f c0       	rjmp	.+318    	; 0x249c <Set_hour+0x180>
					{
						LCD_SendChar(tmp);
    235e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2360:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <LCD_SendChar>
						hour_1=hour_1*10;
    2364:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2366:	88 2f       	mov	r24, r24
    2368:	90 e0       	ldi	r25, 0x00	; 0
    236a:	9c 01       	movw	r18, r24
    236c:	22 0f       	add	r18, r18
    236e:	33 1f       	adc	r19, r19
    2370:	c9 01       	movw	r24, r18
    2372:	88 0f       	add	r24, r24
    2374:	99 1f       	adc	r25, r25
    2376:	88 0f       	add	r24, r24
    2378:	99 1f       	adc	r25, r25
    237a:	82 0f       	add	r24, r18
    237c:	93 1f       	adc	r25, r19
    237e:	8e 8f       	std	Y+30, r24	; 0x1e
						hour_1=hour_1+(tmp-'0');
    2380:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2382:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2384:	89 0f       	add	r24, r25
    2386:	80 53       	subi	r24, 0x30	; 48
    2388:	8e 8f       	std	Y+30, r24	; 0x1e
						tmp=0;
    238a:	1d 8e       	std	Y+29, r1	; 0x1d
						if(hour_1>12)
    238c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    238e:	8d 30       	cpi	r24, 0x0D	; 13
    2390:	c0 f2       	brcs	.-80     	; 0x2342 <Set_hour+0x26>
						{
							LCD_Clear();
    2392:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
							LCD_SendString("wrong");
    2396:	89 e6       	ldi	r24, 0x69	; 105
    2398:	90 e0       	ldi	r25, 0x00	; 0
    239a:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
    239e:	80 e0       	ldi	r24, 0x00	; 0
    23a0:	90 e0       	ldi	r25, 0x00	; 0
    23a2:	aa e7       	ldi	r26, 0x7A	; 122
    23a4:	b4 e4       	ldi	r27, 0x44	; 68
    23a6:	89 8f       	std	Y+25, r24	; 0x19
    23a8:	9a 8f       	std	Y+26, r25	; 0x1a
    23aa:	ab 8f       	std	Y+27, r26	; 0x1b
    23ac:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23ae:	69 8d       	ldd	r22, Y+25	; 0x19
    23b0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    23b2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    23b4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    23b6:	20 e0       	ldi	r18, 0x00	; 0
    23b8:	30 e0       	ldi	r19, 0x00	; 0
    23ba:	4a ef       	ldi	r20, 0xFA	; 250
    23bc:	54 e4       	ldi	r21, 0x44	; 68
    23be:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    23c2:	dc 01       	movw	r26, r24
    23c4:	cb 01       	movw	r24, r22
    23c6:	8d 8b       	std	Y+21, r24	; 0x15
    23c8:	9e 8b       	std	Y+22, r25	; 0x16
    23ca:	af 8b       	std	Y+23, r26	; 0x17
    23cc:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    23ce:	6d 89       	ldd	r22, Y+21	; 0x15
    23d0:	7e 89       	ldd	r23, Y+22	; 0x16
    23d2:	8f 89       	ldd	r24, Y+23	; 0x17
    23d4:	98 8d       	ldd	r25, Y+24	; 0x18
    23d6:	20 e0       	ldi	r18, 0x00	; 0
    23d8:	30 e0       	ldi	r19, 0x00	; 0
    23da:	40 e8       	ldi	r20, 0x80	; 128
    23dc:	5f e3       	ldi	r21, 0x3F	; 63
    23de:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    23e2:	88 23       	and	r24, r24
    23e4:	2c f4       	brge	.+10     	; 0x23f0 <Set_hour+0xd4>
		__ticks = 1;
    23e6:	81 e0       	ldi	r24, 0x01	; 1
    23e8:	90 e0       	ldi	r25, 0x00	; 0
    23ea:	9c 8b       	std	Y+20, r25	; 0x14
    23ec:	8b 8b       	std	Y+19, r24	; 0x13
    23ee:	3f c0       	rjmp	.+126    	; 0x246e <Set_hour+0x152>
	else if (__tmp > 65535)
    23f0:	6d 89       	ldd	r22, Y+21	; 0x15
    23f2:	7e 89       	ldd	r23, Y+22	; 0x16
    23f4:	8f 89       	ldd	r24, Y+23	; 0x17
    23f6:	98 8d       	ldd	r25, Y+24	; 0x18
    23f8:	20 e0       	ldi	r18, 0x00	; 0
    23fa:	3f ef       	ldi	r19, 0xFF	; 255
    23fc:	4f e7       	ldi	r20, 0x7F	; 127
    23fe:	57 e4       	ldi	r21, 0x47	; 71
    2400:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2404:	18 16       	cp	r1, r24
    2406:	4c f5       	brge	.+82     	; 0x245a <Set_hour+0x13e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2408:	69 8d       	ldd	r22, Y+25	; 0x19
    240a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    240c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    240e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2410:	20 e0       	ldi	r18, 0x00	; 0
    2412:	30 e0       	ldi	r19, 0x00	; 0
    2414:	40 e2       	ldi	r20, 0x20	; 32
    2416:	51 e4       	ldi	r21, 0x41	; 65
    2418:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    241c:	dc 01       	movw	r26, r24
    241e:	cb 01       	movw	r24, r22
    2420:	bc 01       	movw	r22, r24
    2422:	cd 01       	movw	r24, r26
    2424:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2428:	dc 01       	movw	r26, r24
    242a:	cb 01       	movw	r24, r22
    242c:	9c 8b       	std	Y+20, r25	; 0x14
    242e:	8b 8b       	std	Y+19, r24	; 0x13
    2430:	0f c0       	rjmp	.+30     	; 0x2450 <Set_hour+0x134>
    2432:	88 ec       	ldi	r24, 0xC8	; 200
    2434:	90 e0       	ldi	r25, 0x00	; 0
    2436:	9a 8b       	std	Y+18, r25	; 0x12
    2438:	89 8b       	std	Y+17, r24	; 0x11
    243a:	89 89       	ldd	r24, Y+17	; 0x11
    243c:	9a 89       	ldd	r25, Y+18	; 0x12
    243e:	01 97       	sbiw	r24, 0x01	; 1
    2440:	f1 f7       	brne	.-4      	; 0x243e <Set_hour+0x122>
    2442:	9a 8b       	std	Y+18, r25	; 0x12
    2444:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2446:	8b 89       	ldd	r24, Y+19	; 0x13
    2448:	9c 89       	ldd	r25, Y+20	; 0x14
    244a:	01 97       	sbiw	r24, 0x01	; 1
    244c:	9c 8b       	std	Y+20, r25	; 0x14
    244e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2450:	8b 89       	ldd	r24, Y+19	; 0x13
    2452:	9c 89       	ldd	r25, Y+20	; 0x14
    2454:	00 97       	sbiw	r24, 0x00	; 0
    2456:	69 f7       	brne	.-38     	; 0x2432 <Set_hour+0x116>
    2458:	14 c0       	rjmp	.+40     	; 0x2482 <Set_hour+0x166>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    245a:	6d 89       	ldd	r22, Y+21	; 0x15
    245c:	7e 89       	ldd	r23, Y+22	; 0x16
    245e:	8f 89       	ldd	r24, Y+23	; 0x17
    2460:	98 8d       	ldd	r25, Y+24	; 0x18
    2462:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2466:	dc 01       	movw	r26, r24
    2468:	cb 01       	movw	r24, r22
    246a:	9c 8b       	std	Y+20, r25	; 0x14
    246c:	8b 8b       	std	Y+19, r24	; 0x13
    246e:	8b 89       	ldd	r24, Y+19	; 0x13
    2470:	9c 89       	ldd	r25, Y+20	; 0x14
    2472:	98 8b       	std	Y+16, r25	; 0x10
    2474:	8f 87       	std	Y+15, r24	; 0x0f
    2476:	8f 85       	ldd	r24, Y+15	; 0x0f
    2478:	98 89       	ldd	r25, Y+16	; 0x10
    247a:	01 97       	sbiw	r24, 0x01	; 1
    247c:	f1 f7       	brne	.-4      	; 0x247a <Set_hour+0x15e>
    247e:	98 8b       	std	Y+16, r25	; 0x10
    2480:	8f 87       	std	Y+15, r24	; 0x0f
							_delay_ms(1000);
							LCD_Clear();
    2482:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
							LCD_SendString("hour....");
    2486:	80 e6       	ldi	r24, 0x60	; 96
    2488:	90 e0       	ldi	r25, 0x00	; 0
    248a:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
							LCD_GoTO(2, 14);
    248e:	82 e0       	ldi	r24, 0x02	; 2
    2490:	6e e0       	ldi	r22, 0x0E	; 14
    2492:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <LCD_GoTO>
							tmp=0;
    2496:	1d 8e       	std	Y+29, r1	; 0x1d
							hour_1=0;
    2498:	1e 8e       	std	Y+30, r1	; 0x1e
    249a:	53 cf       	rjmp	.-346    	; 0x2342 <Set_hour+0x26>
						}


					}
					else if(tmp=='='&&hour_1!=0)
    249c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    249e:	8d 33       	cpi	r24, 0x3D	; 61
    24a0:	79 f4       	brne	.+30     	; 0x24c0 <Set_hour+0x1a4>
    24a2:	8e 8d       	ldd	r24, Y+30	; 0x1e
    24a4:	88 23       	and	r24, r24
    24a6:	61 f0       	breq	.+24     	; 0x24c0 <Set_hour+0x1a4>
					{
						LCD_Clear();
    24a8:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>

					}
				}
		}

	return hour_1;
    24ac:	8e 8d       	ldd	r24, Y+30	; 0x1e

}
    24ae:	6e 96       	adiw	r28, 0x1e	; 30
    24b0:	0f b6       	in	r0, 0x3f	; 63
    24b2:	f8 94       	cli
    24b4:	de bf       	out	0x3e, r29	; 62
    24b6:	0f be       	out	0x3f, r0	; 63
    24b8:	cd bf       	out	0x3d, r28	; 61
    24ba:	cf 91       	pop	r28
    24bc:	df 91       	pop	r29
    24be:	08 95       	ret
						break;

					}
					else
					{
						LCD_Clear();
    24c0:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
						LCD_SendString("wrong");
    24c4:	89 e6       	ldi	r24, 0x69	; 105
    24c6:	90 e0       	ldi	r25, 0x00	; 0
    24c8:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
    24cc:	80 e0       	ldi	r24, 0x00	; 0
    24ce:	90 e0       	ldi	r25, 0x00	; 0
    24d0:	aa e7       	ldi	r26, 0x7A	; 122
    24d2:	b4 e4       	ldi	r27, 0x44	; 68
    24d4:	8b 87       	std	Y+11, r24	; 0x0b
    24d6:	9c 87       	std	Y+12, r25	; 0x0c
    24d8:	ad 87       	std	Y+13, r26	; 0x0d
    24da:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    24dc:	6b 85       	ldd	r22, Y+11	; 0x0b
    24de:	7c 85       	ldd	r23, Y+12	; 0x0c
    24e0:	8d 85       	ldd	r24, Y+13	; 0x0d
    24e2:	9e 85       	ldd	r25, Y+14	; 0x0e
    24e4:	20 e0       	ldi	r18, 0x00	; 0
    24e6:	30 e0       	ldi	r19, 0x00	; 0
    24e8:	4a ef       	ldi	r20, 0xFA	; 250
    24ea:	54 e4       	ldi	r21, 0x44	; 68
    24ec:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    24f0:	dc 01       	movw	r26, r24
    24f2:	cb 01       	movw	r24, r22
    24f4:	8f 83       	std	Y+7, r24	; 0x07
    24f6:	98 87       	std	Y+8, r25	; 0x08
    24f8:	a9 87       	std	Y+9, r26	; 0x09
    24fa:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    24fc:	6f 81       	ldd	r22, Y+7	; 0x07
    24fe:	78 85       	ldd	r23, Y+8	; 0x08
    2500:	89 85       	ldd	r24, Y+9	; 0x09
    2502:	9a 85       	ldd	r25, Y+10	; 0x0a
    2504:	20 e0       	ldi	r18, 0x00	; 0
    2506:	30 e0       	ldi	r19, 0x00	; 0
    2508:	40 e8       	ldi	r20, 0x80	; 128
    250a:	5f e3       	ldi	r21, 0x3F	; 63
    250c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2510:	88 23       	and	r24, r24
    2512:	2c f4       	brge	.+10     	; 0x251e <Set_hour+0x202>
		__ticks = 1;
    2514:	81 e0       	ldi	r24, 0x01	; 1
    2516:	90 e0       	ldi	r25, 0x00	; 0
    2518:	9e 83       	std	Y+6, r25	; 0x06
    251a:	8d 83       	std	Y+5, r24	; 0x05
    251c:	3f c0       	rjmp	.+126    	; 0x259c <Set_hour+0x280>
	else if (__tmp > 65535)
    251e:	6f 81       	ldd	r22, Y+7	; 0x07
    2520:	78 85       	ldd	r23, Y+8	; 0x08
    2522:	89 85       	ldd	r24, Y+9	; 0x09
    2524:	9a 85       	ldd	r25, Y+10	; 0x0a
    2526:	20 e0       	ldi	r18, 0x00	; 0
    2528:	3f ef       	ldi	r19, 0xFF	; 255
    252a:	4f e7       	ldi	r20, 0x7F	; 127
    252c:	57 e4       	ldi	r21, 0x47	; 71
    252e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2532:	18 16       	cp	r1, r24
    2534:	4c f5       	brge	.+82     	; 0x2588 <Set_hour+0x26c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2536:	6b 85       	ldd	r22, Y+11	; 0x0b
    2538:	7c 85       	ldd	r23, Y+12	; 0x0c
    253a:	8d 85       	ldd	r24, Y+13	; 0x0d
    253c:	9e 85       	ldd	r25, Y+14	; 0x0e
    253e:	20 e0       	ldi	r18, 0x00	; 0
    2540:	30 e0       	ldi	r19, 0x00	; 0
    2542:	40 e2       	ldi	r20, 0x20	; 32
    2544:	51 e4       	ldi	r21, 0x41	; 65
    2546:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    254a:	dc 01       	movw	r26, r24
    254c:	cb 01       	movw	r24, r22
    254e:	bc 01       	movw	r22, r24
    2550:	cd 01       	movw	r24, r26
    2552:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2556:	dc 01       	movw	r26, r24
    2558:	cb 01       	movw	r24, r22
    255a:	9e 83       	std	Y+6, r25	; 0x06
    255c:	8d 83       	std	Y+5, r24	; 0x05
    255e:	0f c0       	rjmp	.+30     	; 0x257e <Set_hour+0x262>
    2560:	88 ec       	ldi	r24, 0xC8	; 200
    2562:	90 e0       	ldi	r25, 0x00	; 0
    2564:	9c 83       	std	Y+4, r25	; 0x04
    2566:	8b 83       	std	Y+3, r24	; 0x03
    2568:	8b 81       	ldd	r24, Y+3	; 0x03
    256a:	9c 81       	ldd	r25, Y+4	; 0x04
    256c:	01 97       	sbiw	r24, 0x01	; 1
    256e:	f1 f7       	brne	.-4      	; 0x256c <Set_hour+0x250>
    2570:	9c 83       	std	Y+4, r25	; 0x04
    2572:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2574:	8d 81       	ldd	r24, Y+5	; 0x05
    2576:	9e 81       	ldd	r25, Y+6	; 0x06
    2578:	01 97       	sbiw	r24, 0x01	; 1
    257a:	9e 83       	std	Y+6, r25	; 0x06
    257c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    257e:	8d 81       	ldd	r24, Y+5	; 0x05
    2580:	9e 81       	ldd	r25, Y+6	; 0x06
    2582:	00 97       	sbiw	r24, 0x00	; 0
    2584:	69 f7       	brne	.-38     	; 0x2560 <Set_hour+0x244>
    2586:	14 c0       	rjmp	.+40     	; 0x25b0 <Set_hour+0x294>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2588:	6f 81       	ldd	r22, Y+7	; 0x07
    258a:	78 85       	ldd	r23, Y+8	; 0x08
    258c:	89 85       	ldd	r24, Y+9	; 0x09
    258e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2590:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2594:	dc 01       	movw	r26, r24
    2596:	cb 01       	movw	r24, r22
    2598:	9e 83       	std	Y+6, r25	; 0x06
    259a:	8d 83       	std	Y+5, r24	; 0x05
    259c:	8d 81       	ldd	r24, Y+5	; 0x05
    259e:	9e 81       	ldd	r25, Y+6	; 0x06
    25a0:	9a 83       	std	Y+2, r25	; 0x02
    25a2:	89 83       	std	Y+1, r24	; 0x01
    25a4:	89 81       	ldd	r24, Y+1	; 0x01
    25a6:	9a 81       	ldd	r25, Y+2	; 0x02
    25a8:	01 97       	sbiw	r24, 0x01	; 1
    25aa:	f1 f7       	brne	.-4      	; 0x25a8 <Set_hour+0x28c>
    25ac:	9a 83       	std	Y+2, r25	; 0x02
    25ae:	89 83       	std	Y+1, r24	; 0x01
						_delay_ms(1000);
						LCD_Clear();
    25b0:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
						LCD_SendString("hour....");
    25b4:	80 e6       	ldi	r24, 0x60	; 96
    25b6:	90 e0       	ldi	r25, 0x00	; 0
    25b8:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
						LCD_GoTO(2, 14);
    25bc:	82 e0       	ldi	r24, 0x02	; 2
    25be:	6e e0       	ldi	r22, 0x0E	; 14
    25c0:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <LCD_GoTO>
						tmp=0;
    25c4:	1d 8e       	std	Y+29, r1	; 0x1d
						hour_1=0;
    25c6:	1e 8e       	std	Y+30, r1	; 0x1e
    25c8:	bc ce       	rjmp	.-648    	; 0x2342 <Set_hour+0x26>

000025ca <Set_minute>:
	return hour_1;

}

u8 Set_minute(void)
{
    25ca:	df 93       	push	r29
    25cc:	cf 93       	push	r28
    25ce:	cd b7       	in	r28, 0x3d	; 61
    25d0:	de b7       	in	r29, 0x3e	; 62
    25d2:	6e 97       	sbiw	r28, 0x1e	; 30
    25d4:	0f b6       	in	r0, 0x3f	; 63
    25d6:	f8 94       	cli
    25d8:	de bf       	out	0x3e, r29	; 62
    25da:	0f be       	out	0x3f, r0	; 63
    25dc:	cd bf       	out	0x3d, r28	; 61
	u8 minute_1=0;
    25de:	1e 8e       	std	Y+30, r1	; 0x1e

	LCD_SendString("minute....");
    25e0:	8f e6       	ldi	r24, 0x6F	; 111
    25e2:	90 e0       	ldi	r25, 0x00	; 0
    25e4:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
	LCD_GoTO(2, 14);
    25e8:	82 e0       	ldi	r24, 0x02	; 2
    25ea:	6e e0       	ldi	r22, 0x0E	; 14
    25ec:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <LCD_GoTO>
	while(1)
		{
			u8 tmp =keypad_GetVal();
    25f0:	0e 94 bc 10 	call	0x2178	; 0x2178 <keypad_GetVal>
    25f4:	8d 8f       	std	Y+29, r24	; 0x1d
				if(tmp!=0)
    25f6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    25f8:	88 23       	and	r24, r24
    25fa:	d1 f3       	breq	.-12     	; 0x25f0 <Set_minute+0x26>
				{
					if(tmp>='0'&&tmp<='9')
    25fc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    25fe:	80 33       	cpi	r24, 0x30	; 48
    2600:	08 f4       	brcc	.+2      	; 0x2604 <Set_minute+0x3a>
    2602:	a3 c0       	rjmp	.+326    	; 0x274a <Set_minute+0x180>
    2604:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2606:	8a 33       	cpi	r24, 0x3A	; 58
    2608:	08 f0       	brcs	.+2      	; 0x260c <Set_minute+0x42>
    260a:	9f c0       	rjmp	.+318    	; 0x274a <Set_minute+0x180>
					{
						LCD_SendChar(tmp);
    260c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    260e:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <LCD_SendChar>
						minute_1=minute_1*10;
    2612:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2614:	88 2f       	mov	r24, r24
    2616:	90 e0       	ldi	r25, 0x00	; 0
    2618:	9c 01       	movw	r18, r24
    261a:	22 0f       	add	r18, r18
    261c:	33 1f       	adc	r19, r19
    261e:	c9 01       	movw	r24, r18
    2620:	88 0f       	add	r24, r24
    2622:	99 1f       	adc	r25, r25
    2624:	88 0f       	add	r24, r24
    2626:	99 1f       	adc	r25, r25
    2628:	82 0f       	add	r24, r18
    262a:	93 1f       	adc	r25, r19
    262c:	8e 8f       	std	Y+30, r24	; 0x1e
						minute_1=minute_1+(tmp-'0');
    262e:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2630:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2632:	89 0f       	add	r24, r25
    2634:	80 53       	subi	r24, 0x30	; 48
    2636:	8e 8f       	std	Y+30, r24	; 0x1e
						tmp=0;
    2638:	1d 8e       	std	Y+29, r1	; 0x1d
						if(minute_1>59)
    263a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    263c:	8c 33       	cpi	r24, 0x3C	; 60
    263e:	c0 f2       	brcs	.-80     	; 0x25f0 <Set_minute+0x26>
						{
							LCD_Clear();
    2640:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
							LCD_SendString("wrong");
    2644:	89 e6       	ldi	r24, 0x69	; 105
    2646:	90 e0       	ldi	r25, 0x00	; 0
    2648:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
    264c:	80 e0       	ldi	r24, 0x00	; 0
    264e:	90 e0       	ldi	r25, 0x00	; 0
    2650:	aa e7       	ldi	r26, 0x7A	; 122
    2652:	b4 e4       	ldi	r27, 0x44	; 68
    2654:	89 8f       	std	Y+25, r24	; 0x19
    2656:	9a 8f       	std	Y+26, r25	; 0x1a
    2658:	ab 8f       	std	Y+27, r26	; 0x1b
    265a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    265c:	69 8d       	ldd	r22, Y+25	; 0x19
    265e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2660:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2662:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2664:	20 e0       	ldi	r18, 0x00	; 0
    2666:	30 e0       	ldi	r19, 0x00	; 0
    2668:	4a ef       	ldi	r20, 0xFA	; 250
    266a:	54 e4       	ldi	r21, 0x44	; 68
    266c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2670:	dc 01       	movw	r26, r24
    2672:	cb 01       	movw	r24, r22
    2674:	8d 8b       	std	Y+21, r24	; 0x15
    2676:	9e 8b       	std	Y+22, r25	; 0x16
    2678:	af 8b       	std	Y+23, r26	; 0x17
    267a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    267c:	6d 89       	ldd	r22, Y+21	; 0x15
    267e:	7e 89       	ldd	r23, Y+22	; 0x16
    2680:	8f 89       	ldd	r24, Y+23	; 0x17
    2682:	98 8d       	ldd	r25, Y+24	; 0x18
    2684:	20 e0       	ldi	r18, 0x00	; 0
    2686:	30 e0       	ldi	r19, 0x00	; 0
    2688:	40 e8       	ldi	r20, 0x80	; 128
    268a:	5f e3       	ldi	r21, 0x3F	; 63
    268c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2690:	88 23       	and	r24, r24
    2692:	2c f4       	brge	.+10     	; 0x269e <Set_minute+0xd4>
		__ticks = 1;
    2694:	81 e0       	ldi	r24, 0x01	; 1
    2696:	90 e0       	ldi	r25, 0x00	; 0
    2698:	9c 8b       	std	Y+20, r25	; 0x14
    269a:	8b 8b       	std	Y+19, r24	; 0x13
    269c:	3f c0       	rjmp	.+126    	; 0x271c <Set_minute+0x152>
	else if (__tmp > 65535)
    269e:	6d 89       	ldd	r22, Y+21	; 0x15
    26a0:	7e 89       	ldd	r23, Y+22	; 0x16
    26a2:	8f 89       	ldd	r24, Y+23	; 0x17
    26a4:	98 8d       	ldd	r25, Y+24	; 0x18
    26a6:	20 e0       	ldi	r18, 0x00	; 0
    26a8:	3f ef       	ldi	r19, 0xFF	; 255
    26aa:	4f e7       	ldi	r20, 0x7F	; 127
    26ac:	57 e4       	ldi	r21, 0x47	; 71
    26ae:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    26b2:	18 16       	cp	r1, r24
    26b4:	4c f5       	brge	.+82     	; 0x2708 <Set_minute+0x13e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26b6:	69 8d       	ldd	r22, Y+25	; 0x19
    26b8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    26ba:	8b 8d       	ldd	r24, Y+27	; 0x1b
    26bc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    26be:	20 e0       	ldi	r18, 0x00	; 0
    26c0:	30 e0       	ldi	r19, 0x00	; 0
    26c2:	40 e2       	ldi	r20, 0x20	; 32
    26c4:	51 e4       	ldi	r21, 0x41	; 65
    26c6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    26ca:	dc 01       	movw	r26, r24
    26cc:	cb 01       	movw	r24, r22
    26ce:	bc 01       	movw	r22, r24
    26d0:	cd 01       	movw	r24, r26
    26d2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    26d6:	dc 01       	movw	r26, r24
    26d8:	cb 01       	movw	r24, r22
    26da:	9c 8b       	std	Y+20, r25	; 0x14
    26dc:	8b 8b       	std	Y+19, r24	; 0x13
    26de:	0f c0       	rjmp	.+30     	; 0x26fe <Set_minute+0x134>
    26e0:	88 ec       	ldi	r24, 0xC8	; 200
    26e2:	90 e0       	ldi	r25, 0x00	; 0
    26e4:	9a 8b       	std	Y+18, r25	; 0x12
    26e6:	89 8b       	std	Y+17, r24	; 0x11
    26e8:	89 89       	ldd	r24, Y+17	; 0x11
    26ea:	9a 89       	ldd	r25, Y+18	; 0x12
    26ec:	01 97       	sbiw	r24, 0x01	; 1
    26ee:	f1 f7       	brne	.-4      	; 0x26ec <Set_minute+0x122>
    26f0:	9a 8b       	std	Y+18, r25	; 0x12
    26f2:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26f4:	8b 89       	ldd	r24, Y+19	; 0x13
    26f6:	9c 89       	ldd	r25, Y+20	; 0x14
    26f8:	01 97       	sbiw	r24, 0x01	; 1
    26fa:	9c 8b       	std	Y+20, r25	; 0x14
    26fc:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26fe:	8b 89       	ldd	r24, Y+19	; 0x13
    2700:	9c 89       	ldd	r25, Y+20	; 0x14
    2702:	00 97       	sbiw	r24, 0x00	; 0
    2704:	69 f7       	brne	.-38     	; 0x26e0 <Set_minute+0x116>
    2706:	14 c0       	rjmp	.+40     	; 0x2730 <Set_minute+0x166>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2708:	6d 89       	ldd	r22, Y+21	; 0x15
    270a:	7e 89       	ldd	r23, Y+22	; 0x16
    270c:	8f 89       	ldd	r24, Y+23	; 0x17
    270e:	98 8d       	ldd	r25, Y+24	; 0x18
    2710:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2714:	dc 01       	movw	r26, r24
    2716:	cb 01       	movw	r24, r22
    2718:	9c 8b       	std	Y+20, r25	; 0x14
    271a:	8b 8b       	std	Y+19, r24	; 0x13
    271c:	8b 89       	ldd	r24, Y+19	; 0x13
    271e:	9c 89       	ldd	r25, Y+20	; 0x14
    2720:	98 8b       	std	Y+16, r25	; 0x10
    2722:	8f 87       	std	Y+15, r24	; 0x0f
    2724:	8f 85       	ldd	r24, Y+15	; 0x0f
    2726:	98 89       	ldd	r25, Y+16	; 0x10
    2728:	01 97       	sbiw	r24, 0x01	; 1
    272a:	f1 f7       	brne	.-4      	; 0x2728 <Set_minute+0x15e>
    272c:	98 8b       	std	Y+16, r25	; 0x10
    272e:	8f 87       	std	Y+15, r24	; 0x0f
							_delay_ms(1000);
							LCD_Clear();
    2730:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
							LCD_SendString("minute....");
    2734:	8f e6       	ldi	r24, 0x6F	; 111
    2736:	90 e0       	ldi	r25, 0x00	; 0
    2738:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
							LCD_GoTO(2, 14);
    273c:	82 e0       	ldi	r24, 0x02	; 2
    273e:	6e e0       	ldi	r22, 0x0E	; 14
    2740:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <LCD_GoTO>
							tmp=0;
    2744:	1d 8e       	std	Y+29, r1	; 0x1d
							minute_1=0;
    2746:	1e 8e       	std	Y+30, r1	; 0x1e
    2748:	53 cf       	rjmp	.-346    	; 0x25f0 <Set_minute+0x26>
						}


					}
					else if(tmp=='=')
    274a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    274c:	8d 33       	cpi	r24, 0x3D	; 61
    274e:	61 f4       	brne	.+24     	; 0x2768 <Set_minute+0x19e>
					{
						LCD_Clear();
    2750:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
						minute_1=0;

					}
				}
		}
	return minute_1;
    2754:	8e 8d       	ldd	r24, Y+30	; 0x1e

}
    2756:	6e 96       	adiw	r28, 0x1e	; 30
    2758:	0f b6       	in	r0, 0x3f	; 63
    275a:	f8 94       	cli
    275c:	de bf       	out	0x3e, r29	; 62
    275e:	0f be       	out	0x3f, r0	; 63
    2760:	cd bf       	out	0x3d, r28	; 61
    2762:	cf 91       	pop	r28
    2764:	df 91       	pop	r29
    2766:	08 95       	ret
						break;

					}
					else
					{
						LCD_Clear();
    2768:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
						LCD_SendString("wrong");
    276c:	89 e6       	ldi	r24, 0x69	; 105
    276e:	90 e0       	ldi	r25, 0x00	; 0
    2770:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
    2774:	80 e0       	ldi	r24, 0x00	; 0
    2776:	90 e0       	ldi	r25, 0x00	; 0
    2778:	aa e7       	ldi	r26, 0x7A	; 122
    277a:	b4 e4       	ldi	r27, 0x44	; 68
    277c:	8b 87       	std	Y+11, r24	; 0x0b
    277e:	9c 87       	std	Y+12, r25	; 0x0c
    2780:	ad 87       	std	Y+13, r26	; 0x0d
    2782:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2784:	6b 85       	ldd	r22, Y+11	; 0x0b
    2786:	7c 85       	ldd	r23, Y+12	; 0x0c
    2788:	8d 85       	ldd	r24, Y+13	; 0x0d
    278a:	9e 85       	ldd	r25, Y+14	; 0x0e
    278c:	20 e0       	ldi	r18, 0x00	; 0
    278e:	30 e0       	ldi	r19, 0x00	; 0
    2790:	4a ef       	ldi	r20, 0xFA	; 250
    2792:	54 e4       	ldi	r21, 0x44	; 68
    2794:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2798:	dc 01       	movw	r26, r24
    279a:	cb 01       	movw	r24, r22
    279c:	8f 83       	std	Y+7, r24	; 0x07
    279e:	98 87       	std	Y+8, r25	; 0x08
    27a0:	a9 87       	std	Y+9, r26	; 0x09
    27a2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    27a4:	6f 81       	ldd	r22, Y+7	; 0x07
    27a6:	78 85       	ldd	r23, Y+8	; 0x08
    27a8:	89 85       	ldd	r24, Y+9	; 0x09
    27aa:	9a 85       	ldd	r25, Y+10	; 0x0a
    27ac:	20 e0       	ldi	r18, 0x00	; 0
    27ae:	30 e0       	ldi	r19, 0x00	; 0
    27b0:	40 e8       	ldi	r20, 0x80	; 128
    27b2:	5f e3       	ldi	r21, 0x3F	; 63
    27b4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    27b8:	88 23       	and	r24, r24
    27ba:	2c f4       	brge	.+10     	; 0x27c6 <Set_minute+0x1fc>
		__ticks = 1;
    27bc:	81 e0       	ldi	r24, 0x01	; 1
    27be:	90 e0       	ldi	r25, 0x00	; 0
    27c0:	9e 83       	std	Y+6, r25	; 0x06
    27c2:	8d 83       	std	Y+5, r24	; 0x05
    27c4:	3f c0       	rjmp	.+126    	; 0x2844 <Set_minute+0x27a>
	else if (__tmp > 65535)
    27c6:	6f 81       	ldd	r22, Y+7	; 0x07
    27c8:	78 85       	ldd	r23, Y+8	; 0x08
    27ca:	89 85       	ldd	r24, Y+9	; 0x09
    27cc:	9a 85       	ldd	r25, Y+10	; 0x0a
    27ce:	20 e0       	ldi	r18, 0x00	; 0
    27d0:	3f ef       	ldi	r19, 0xFF	; 255
    27d2:	4f e7       	ldi	r20, 0x7F	; 127
    27d4:	57 e4       	ldi	r21, 0x47	; 71
    27d6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    27da:	18 16       	cp	r1, r24
    27dc:	4c f5       	brge	.+82     	; 0x2830 <Set_minute+0x266>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    27de:	6b 85       	ldd	r22, Y+11	; 0x0b
    27e0:	7c 85       	ldd	r23, Y+12	; 0x0c
    27e2:	8d 85       	ldd	r24, Y+13	; 0x0d
    27e4:	9e 85       	ldd	r25, Y+14	; 0x0e
    27e6:	20 e0       	ldi	r18, 0x00	; 0
    27e8:	30 e0       	ldi	r19, 0x00	; 0
    27ea:	40 e2       	ldi	r20, 0x20	; 32
    27ec:	51 e4       	ldi	r21, 0x41	; 65
    27ee:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    27f2:	dc 01       	movw	r26, r24
    27f4:	cb 01       	movw	r24, r22
    27f6:	bc 01       	movw	r22, r24
    27f8:	cd 01       	movw	r24, r26
    27fa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    27fe:	dc 01       	movw	r26, r24
    2800:	cb 01       	movw	r24, r22
    2802:	9e 83       	std	Y+6, r25	; 0x06
    2804:	8d 83       	std	Y+5, r24	; 0x05
    2806:	0f c0       	rjmp	.+30     	; 0x2826 <Set_minute+0x25c>
    2808:	88 ec       	ldi	r24, 0xC8	; 200
    280a:	90 e0       	ldi	r25, 0x00	; 0
    280c:	9c 83       	std	Y+4, r25	; 0x04
    280e:	8b 83       	std	Y+3, r24	; 0x03
    2810:	8b 81       	ldd	r24, Y+3	; 0x03
    2812:	9c 81       	ldd	r25, Y+4	; 0x04
    2814:	01 97       	sbiw	r24, 0x01	; 1
    2816:	f1 f7       	brne	.-4      	; 0x2814 <Set_minute+0x24a>
    2818:	9c 83       	std	Y+4, r25	; 0x04
    281a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    281c:	8d 81       	ldd	r24, Y+5	; 0x05
    281e:	9e 81       	ldd	r25, Y+6	; 0x06
    2820:	01 97       	sbiw	r24, 0x01	; 1
    2822:	9e 83       	std	Y+6, r25	; 0x06
    2824:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2826:	8d 81       	ldd	r24, Y+5	; 0x05
    2828:	9e 81       	ldd	r25, Y+6	; 0x06
    282a:	00 97       	sbiw	r24, 0x00	; 0
    282c:	69 f7       	brne	.-38     	; 0x2808 <Set_minute+0x23e>
    282e:	14 c0       	rjmp	.+40     	; 0x2858 <Set_minute+0x28e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2830:	6f 81       	ldd	r22, Y+7	; 0x07
    2832:	78 85       	ldd	r23, Y+8	; 0x08
    2834:	89 85       	ldd	r24, Y+9	; 0x09
    2836:	9a 85       	ldd	r25, Y+10	; 0x0a
    2838:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    283c:	dc 01       	movw	r26, r24
    283e:	cb 01       	movw	r24, r22
    2840:	9e 83       	std	Y+6, r25	; 0x06
    2842:	8d 83       	std	Y+5, r24	; 0x05
    2844:	8d 81       	ldd	r24, Y+5	; 0x05
    2846:	9e 81       	ldd	r25, Y+6	; 0x06
    2848:	9a 83       	std	Y+2, r25	; 0x02
    284a:	89 83       	std	Y+1, r24	; 0x01
    284c:	89 81       	ldd	r24, Y+1	; 0x01
    284e:	9a 81       	ldd	r25, Y+2	; 0x02
    2850:	01 97       	sbiw	r24, 0x01	; 1
    2852:	f1 f7       	brne	.-4      	; 0x2850 <Set_minute+0x286>
    2854:	9a 83       	std	Y+2, r25	; 0x02
    2856:	89 83       	std	Y+1, r24	; 0x01
						_delay_ms(1000);
						LCD_Clear();
    2858:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
						LCD_SendString("minute....");
    285c:	8f e6       	ldi	r24, 0x6F	; 111
    285e:	90 e0       	ldi	r25, 0x00	; 0
    2860:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
						LCD_GoTO(2, 14);
    2864:	82 e0       	ldi	r24, 0x02	; 2
    2866:	6e e0       	ldi	r22, 0x0E	; 14
    2868:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <LCD_GoTO>
						tmp=0;
    286c:	1d 8e       	std	Y+29, r1	; 0x1d
						minute_1=0;
    286e:	1e 8e       	std	Y+30, r1	; 0x1e
    2870:	bf ce       	rjmp	.-642    	; 0x25f0 <Set_minute+0x26>

00002872 <Set_second>:
		}
	return minute_1;

}
u8 Set_second(void)
{
    2872:	df 93       	push	r29
    2874:	cf 93       	push	r28
    2876:	cd b7       	in	r28, 0x3d	; 61
    2878:	de b7       	in	r29, 0x3e	; 62
    287a:	6e 97       	sbiw	r28, 0x1e	; 30
    287c:	0f b6       	in	r0, 0x3f	; 63
    287e:	f8 94       	cli
    2880:	de bf       	out	0x3e, r29	; 62
    2882:	0f be       	out	0x3f, r0	; 63
    2884:	cd bf       	out	0x3d, r28	; 61
	u8 second_1=0;
    2886:	1e 8e       	std	Y+30, r1	; 0x1e
	LCD_SendString("second....");
    2888:	8a e7       	ldi	r24, 0x7A	; 122
    288a:	90 e0       	ldi	r25, 0x00	; 0
    288c:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
		LCD_GoTO(2, 14);
    2890:	82 e0       	ldi	r24, 0x02	; 2
    2892:	6e e0       	ldi	r22, 0x0E	; 14
    2894:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <LCD_GoTO>
		while(1)
				{
					u8 tmp =keypad_GetVal();
    2898:	0e 94 bc 10 	call	0x2178	; 0x2178 <keypad_GetVal>
    289c:	8d 8f       	std	Y+29, r24	; 0x1d
						if(tmp!=0)
    289e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    28a0:	88 23       	and	r24, r24
    28a2:	d1 f3       	breq	.-12     	; 0x2898 <Set_second+0x26>
						{
							if(tmp>='0'&&tmp<='9')
    28a4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    28a6:	80 33       	cpi	r24, 0x30	; 48
    28a8:	08 f4       	brcc	.+2      	; 0x28ac <Set_second+0x3a>
    28aa:	a3 c0       	rjmp	.+326    	; 0x29f2 <Set_second+0x180>
    28ac:	8d 8d       	ldd	r24, Y+29	; 0x1d
    28ae:	8a 33       	cpi	r24, 0x3A	; 58
    28b0:	08 f0       	brcs	.+2      	; 0x28b4 <Set_second+0x42>
    28b2:	9f c0       	rjmp	.+318    	; 0x29f2 <Set_second+0x180>
							{
								LCD_SendChar(tmp);
    28b4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    28b6:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <LCD_SendChar>
								second_1=second_1*10;
    28ba:	8e 8d       	ldd	r24, Y+30	; 0x1e
    28bc:	88 2f       	mov	r24, r24
    28be:	90 e0       	ldi	r25, 0x00	; 0
    28c0:	9c 01       	movw	r18, r24
    28c2:	22 0f       	add	r18, r18
    28c4:	33 1f       	adc	r19, r19
    28c6:	c9 01       	movw	r24, r18
    28c8:	88 0f       	add	r24, r24
    28ca:	99 1f       	adc	r25, r25
    28cc:	88 0f       	add	r24, r24
    28ce:	99 1f       	adc	r25, r25
    28d0:	82 0f       	add	r24, r18
    28d2:	93 1f       	adc	r25, r19
    28d4:	8e 8f       	std	Y+30, r24	; 0x1e
								second_1=second_1+(tmp-'0');
    28d6:	9d 8d       	ldd	r25, Y+29	; 0x1d
    28d8:	8e 8d       	ldd	r24, Y+30	; 0x1e
    28da:	89 0f       	add	r24, r25
    28dc:	80 53       	subi	r24, 0x30	; 48
    28de:	8e 8f       	std	Y+30, r24	; 0x1e
								tmp=0;
    28e0:	1d 8e       	std	Y+29, r1	; 0x1d
								if(second_1>59)
    28e2:	8e 8d       	ldd	r24, Y+30	; 0x1e
    28e4:	8c 33       	cpi	r24, 0x3C	; 60
    28e6:	c0 f2       	brcs	.-80     	; 0x2898 <Set_second+0x26>
								{
									LCD_Clear();
    28e8:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
									LCD_SendString("wrong");
    28ec:	89 e6       	ldi	r24, 0x69	; 105
    28ee:	90 e0       	ldi	r25, 0x00	; 0
    28f0:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
    28f4:	80 e0       	ldi	r24, 0x00	; 0
    28f6:	90 e0       	ldi	r25, 0x00	; 0
    28f8:	aa e7       	ldi	r26, 0x7A	; 122
    28fa:	b4 e4       	ldi	r27, 0x44	; 68
    28fc:	89 8f       	std	Y+25, r24	; 0x19
    28fe:	9a 8f       	std	Y+26, r25	; 0x1a
    2900:	ab 8f       	std	Y+27, r26	; 0x1b
    2902:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2904:	69 8d       	ldd	r22, Y+25	; 0x19
    2906:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2908:	8b 8d       	ldd	r24, Y+27	; 0x1b
    290a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    290c:	20 e0       	ldi	r18, 0x00	; 0
    290e:	30 e0       	ldi	r19, 0x00	; 0
    2910:	4a ef       	ldi	r20, 0xFA	; 250
    2912:	54 e4       	ldi	r21, 0x44	; 68
    2914:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2918:	dc 01       	movw	r26, r24
    291a:	cb 01       	movw	r24, r22
    291c:	8d 8b       	std	Y+21, r24	; 0x15
    291e:	9e 8b       	std	Y+22, r25	; 0x16
    2920:	af 8b       	std	Y+23, r26	; 0x17
    2922:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2924:	6d 89       	ldd	r22, Y+21	; 0x15
    2926:	7e 89       	ldd	r23, Y+22	; 0x16
    2928:	8f 89       	ldd	r24, Y+23	; 0x17
    292a:	98 8d       	ldd	r25, Y+24	; 0x18
    292c:	20 e0       	ldi	r18, 0x00	; 0
    292e:	30 e0       	ldi	r19, 0x00	; 0
    2930:	40 e8       	ldi	r20, 0x80	; 128
    2932:	5f e3       	ldi	r21, 0x3F	; 63
    2934:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2938:	88 23       	and	r24, r24
    293a:	2c f4       	brge	.+10     	; 0x2946 <Set_second+0xd4>
		__ticks = 1;
    293c:	81 e0       	ldi	r24, 0x01	; 1
    293e:	90 e0       	ldi	r25, 0x00	; 0
    2940:	9c 8b       	std	Y+20, r25	; 0x14
    2942:	8b 8b       	std	Y+19, r24	; 0x13
    2944:	3f c0       	rjmp	.+126    	; 0x29c4 <Set_second+0x152>
	else if (__tmp > 65535)
    2946:	6d 89       	ldd	r22, Y+21	; 0x15
    2948:	7e 89       	ldd	r23, Y+22	; 0x16
    294a:	8f 89       	ldd	r24, Y+23	; 0x17
    294c:	98 8d       	ldd	r25, Y+24	; 0x18
    294e:	20 e0       	ldi	r18, 0x00	; 0
    2950:	3f ef       	ldi	r19, 0xFF	; 255
    2952:	4f e7       	ldi	r20, 0x7F	; 127
    2954:	57 e4       	ldi	r21, 0x47	; 71
    2956:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    295a:	18 16       	cp	r1, r24
    295c:	4c f5       	brge	.+82     	; 0x29b0 <Set_second+0x13e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    295e:	69 8d       	ldd	r22, Y+25	; 0x19
    2960:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2962:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2964:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2966:	20 e0       	ldi	r18, 0x00	; 0
    2968:	30 e0       	ldi	r19, 0x00	; 0
    296a:	40 e2       	ldi	r20, 0x20	; 32
    296c:	51 e4       	ldi	r21, 0x41	; 65
    296e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2972:	dc 01       	movw	r26, r24
    2974:	cb 01       	movw	r24, r22
    2976:	bc 01       	movw	r22, r24
    2978:	cd 01       	movw	r24, r26
    297a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    297e:	dc 01       	movw	r26, r24
    2980:	cb 01       	movw	r24, r22
    2982:	9c 8b       	std	Y+20, r25	; 0x14
    2984:	8b 8b       	std	Y+19, r24	; 0x13
    2986:	0f c0       	rjmp	.+30     	; 0x29a6 <Set_second+0x134>
    2988:	88 ec       	ldi	r24, 0xC8	; 200
    298a:	90 e0       	ldi	r25, 0x00	; 0
    298c:	9a 8b       	std	Y+18, r25	; 0x12
    298e:	89 8b       	std	Y+17, r24	; 0x11
    2990:	89 89       	ldd	r24, Y+17	; 0x11
    2992:	9a 89       	ldd	r25, Y+18	; 0x12
    2994:	01 97       	sbiw	r24, 0x01	; 1
    2996:	f1 f7       	brne	.-4      	; 0x2994 <Set_second+0x122>
    2998:	9a 8b       	std	Y+18, r25	; 0x12
    299a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    299c:	8b 89       	ldd	r24, Y+19	; 0x13
    299e:	9c 89       	ldd	r25, Y+20	; 0x14
    29a0:	01 97       	sbiw	r24, 0x01	; 1
    29a2:	9c 8b       	std	Y+20, r25	; 0x14
    29a4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    29a6:	8b 89       	ldd	r24, Y+19	; 0x13
    29a8:	9c 89       	ldd	r25, Y+20	; 0x14
    29aa:	00 97       	sbiw	r24, 0x00	; 0
    29ac:	69 f7       	brne	.-38     	; 0x2988 <Set_second+0x116>
    29ae:	14 c0       	rjmp	.+40     	; 0x29d8 <Set_second+0x166>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    29b0:	6d 89       	ldd	r22, Y+21	; 0x15
    29b2:	7e 89       	ldd	r23, Y+22	; 0x16
    29b4:	8f 89       	ldd	r24, Y+23	; 0x17
    29b6:	98 8d       	ldd	r25, Y+24	; 0x18
    29b8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    29bc:	dc 01       	movw	r26, r24
    29be:	cb 01       	movw	r24, r22
    29c0:	9c 8b       	std	Y+20, r25	; 0x14
    29c2:	8b 8b       	std	Y+19, r24	; 0x13
    29c4:	8b 89       	ldd	r24, Y+19	; 0x13
    29c6:	9c 89       	ldd	r25, Y+20	; 0x14
    29c8:	98 8b       	std	Y+16, r25	; 0x10
    29ca:	8f 87       	std	Y+15, r24	; 0x0f
    29cc:	8f 85       	ldd	r24, Y+15	; 0x0f
    29ce:	98 89       	ldd	r25, Y+16	; 0x10
    29d0:	01 97       	sbiw	r24, 0x01	; 1
    29d2:	f1 f7       	brne	.-4      	; 0x29d0 <Set_second+0x15e>
    29d4:	98 8b       	std	Y+16, r25	; 0x10
    29d6:	8f 87       	std	Y+15, r24	; 0x0f
									_delay_ms(1000);
									LCD_Clear();
    29d8:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
									LCD_SendString("second....");
    29dc:	8a e7       	ldi	r24, 0x7A	; 122
    29de:	90 e0       	ldi	r25, 0x00	; 0
    29e0:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
									LCD_GoTO(2, 14);
    29e4:	82 e0       	ldi	r24, 0x02	; 2
    29e6:	6e e0       	ldi	r22, 0x0E	; 14
    29e8:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <LCD_GoTO>
									tmp=0;
    29ec:	1d 8e       	std	Y+29, r1	; 0x1d
									second_1=0;
    29ee:	1e 8e       	std	Y+30, r1	; 0x1e
    29f0:	53 cf       	rjmp	.-346    	; 0x2898 <Set_second+0x26>
								}


							}
							else if(tmp=='=')
    29f2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    29f4:	8d 33       	cpi	r24, 0x3D	; 61
    29f6:	61 f4       	brne	.+24     	; 0x2a10 <Set_second+0x19e>
							{
								LCD_Clear();
    29f8:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
								second_1=0;

							}
						}
				}
		return second_1;
    29fc:	8e 8d       	ldd	r24, Y+30	; 0x1e


}
    29fe:	6e 96       	adiw	r28, 0x1e	; 30
    2a00:	0f b6       	in	r0, 0x3f	; 63
    2a02:	f8 94       	cli
    2a04:	de bf       	out	0x3e, r29	; 62
    2a06:	0f be       	out	0x3f, r0	; 63
    2a08:	cd bf       	out	0x3d, r28	; 61
    2a0a:	cf 91       	pop	r28
    2a0c:	df 91       	pop	r29
    2a0e:	08 95       	ret
								break;

							}
							else
							{
								LCD_Clear();
    2a10:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
								LCD_SendString("wrong");
    2a14:	89 e6       	ldi	r24, 0x69	; 105
    2a16:	90 e0       	ldi	r25, 0x00	; 0
    2a18:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
    2a1c:	80 e0       	ldi	r24, 0x00	; 0
    2a1e:	90 e0       	ldi	r25, 0x00	; 0
    2a20:	aa e7       	ldi	r26, 0x7A	; 122
    2a22:	b4 e4       	ldi	r27, 0x44	; 68
    2a24:	8b 87       	std	Y+11, r24	; 0x0b
    2a26:	9c 87       	std	Y+12, r25	; 0x0c
    2a28:	ad 87       	std	Y+13, r26	; 0x0d
    2a2a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a2c:	6b 85       	ldd	r22, Y+11	; 0x0b
    2a2e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2a30:	8d 85       	ldd	r24, Y+13	; 0x0d
    2a32:	9e 85       	ldd	r25, Y+14	; 0x0e
    2a34:	20 e0       	ldi	r18, 0x00	; 0
    2a36:	30 e0       	ldi	r19, 0x00	; 0
    2a38:	4a ef       	ldi	r20, 0xFA	; 250
    2a3a:	54 e4       	ldi	r21, 0x44	; 68
    2a3c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2a40:	dc 01       	movw	r26, r24
    2a42:	cb 01       	movw	r24, r22
    2a44:	8f 83       	std	Y+7, r24	; 0x07
    2a46:	98 87       	std	Y+8, r25	; 0x08
    2a48:	a9 87       	std	Y+9, r26	; 0x09
    2a4a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2a4c:	6f 81       	ldd	r22, Y+7	; 0x07
    2a4e:	78 85       	ldd	r23, Y+8	; 0x08
    2a50:	89 85       	ldd	r24, Y+9	; 0x09
    2a52:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a54:	20 e0       	ldi	r18, 0x00	; 0
    2a56:	30 e0       	ldi	r19, 0x00	; 0
    2a58:	40 e8       	ldi	r20, 0x80	; 128
    2a5a:	5f e3       	ldi	r21, 0x3F	; 63
    2a5c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2a60:	88 23       	and	r24, r24
    2a62:	2c f4       	brge	.+10     	; 0x2a6e <Set_second+0x1fc>
		__ticks = 1;
    2a64:	81 e0       	ldi	r24, 0x01	; 1
    2a66:	90 e0       	ldi	r25, 0x00	; 0
    2a68:	9e 83       	std	Y+6, r25	; 0x06
    2a6a:	8d 83       	std	Y+5, r24	; 0x05
    2a6c:	3f c0       	rjmp	.+126    	; 0x2aec <Set_second+0x27a>
	else if (__tmp > 65535)
    2a6e:	6f 81       	ldd	r22, Y+7	; 0x07
    2a70:	78 85       	ldd	r23, Y+8	; 0x08
    2a72:	89 85       	ldd	r24, Y+9	; 0x09
    2a74:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a76:	20 e0       	ldi	r18, 0x00	; 0
    2a78:	3f ef       	ldi	r19, 0xFF	; 255
    2a7a:	4f e7       	ldi	r20, 0x7F	; 127
    2a7c:	57 e4       	ldi	r21, 0x47	; 71
    2a7e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2a82:	18 16       	cp	r1, r24
    2a84:	4c f5       	brge	.+82     	; 0x2ad8 <Set_second+0x266>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a86:	6b 85       	ldd	r22, Y+11	; 0x0b
    2a88:	7c 85       	ldd	r23, Y+12	; 0x0c
    2a8a:	8d 85       	ldd	r24, Y+13	; 0x0d
    2a8c:	9e 85       	ldd	r25, Y+14	; 0x0e
    2a8e:	20 e0       	ldi	r18, 0x00	; 0
    2a90:	30 e0       	ldi	r19, 0x00	; 0
    2a92:	40 e2       	ldi	r20, 0x20	; 32
    2a94:	51 e4       	ldi	r21, 0x41	; 65
    2a96:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2a9a:	dc 01       	movw	r26, r24
    2a9c:	cb 01       	movw	r24, r22
    2a9e:	bc 01       	movw	r22, r24
    2aa0:	cd 01       	movw	r24, r26
    2aa2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2aa6:	dc 01       	movw	r26, r24
    2aa8:	cb 01       	movw	r24, r22
    2aaa:	9e 83       	std	Y+6, r25	; 0x06
    2aac:	8d 83       	std	Y+5, r24	; 0x05
    2aae:	0f c0       	rjmp	.+30     	; 0x2ace <Set_second+0x25c>
    2ab0:	88 ec       	ldi	r24, 0xC8	; 200
    2ab2:	90 e0       	ldi	r25, 0x00	; 0
    2ab4:	9c 83       	std	Y+4, r25	; 0x04
    2ab6:	8b 83       	std	Y+3, r24	; 0x03
    2ab8:	8b 81       	ldd	r24, Y+3	; 0x03
    2aba:	9c 81       	ldd	r25, Y+4	; 0x04
    2abc:	01 97       	sbiw	r24, 0x01	; 1
    2abe:	f1 f7       	brne	.-4      	; 0x2abc <Set_second+0x24a>
    2ac0:	9c 83       	std	Y+4, r25	; 0x04
    2ac2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ac4:	8d 81       	ldd	r24, Y+5	; 0x05
    2ac6:	9e 81       	ldd	r25, Y+6	; 0x06
    2ac8:	01 97       	sbiw	r24, 0x01	; 1
    2aca:	9e 83       	std	Y+6, r25	; 0x06
    2acc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ace:	8d 81       	ldd	r24, Y+5	; 0x05
    2ad0:	9e 81       	ldd	r25, Y+6	; 0x06
    2ad2:	00 97       	sbiw	r24, 0x00	; 0
    2ad4:	69 f7       	brne	.-38     	; 0x2ab0 <Set_second+0x23e>
    2ad6:	14 c0       	rjmp	.+40     	; 0x2b00 <Set_second+0x28e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ad8:	6f 81       	ldd	r22, Y+7	; 0x07
    2ada:	78 85       	ldd	r23, Y+8	; 0x08
    2adc:	89 85       	ldd	r24, Y+9	; 0x09
    2ade:	9a 85       	ldd	r25, Y+10	; 0x0a
    2ae0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2ae4:	dc 01       	movw	r26, r24
    2ae6:	cb 01       	movw	r24, r22
    2ae8:	9e 83       	std	Y+6, r25	; 0x06
    2aea:	8d 83       	std	Y+5, r24	; 0x05
    2aec:	8d 81       	ldd	r24, Y+5	; 0x05
    2aee:	9e 81       	ldd	r25, Y+6	; 0x06
    2af0:	9a 83       	std	Y+2, r25	; 0x02
    2af2:	89 83       	std	Y+1, r24	; 0x01
    2af4:	89 81       	ldd	r24, Y+1	; 0x01
    2af6:	9a 81       	ldd	r25, Y+2	; 0x02
    2af8:	01 97       	sbiw	r24, 0x01	; 1
    2afa:	f1 f7       	brne	.-4      	; 0x2af8 <Set_second+0x286>
    2afc:	9a 83       	std	Y+2, r25	; 0x02
    2afe:	89 83       	std	Y+1, r24	; 0x01
								_delay_ms(1000);
								LCD_Clear();
    2b00:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
								LCD_SendString("second....");
    2b04:	8a e7       	ldi	r24, 0x7A	; 122
    2b06:	90 e0       	ldi	r25, 0x00	; 0
    2b08:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
								LCD_GoTO(2, 14);
    2b0c:	82 e0       	ldi	r24, 0x02	; 2
    2b0e:	6e e0       	ldi	r22, 0x0E	; 14
    2b10:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <LCD_GoTO>
								tmp=0;
    2b14:	1d 8e       	std	Y+29, r1	; 0x1d
								second_1=0;
    2b16:	1e 8e       	std	Y+30, r1	; 0x1e
    2b18:	bf ce       	rjmp	.-642    	; 0x2898 <Set_second+0x26>

00002b1a <main>:
#include "HAL/KEYBAD/Intr.h"
#include "Clock/Intr.h"


void main (void)
{
    2b1a:	ef 92       	push	r14
    2b1c:	ff 92       	push	r15
    2b1e:	0f 93       	push	r16
    2b20:	1f 93       	push	r17
    2b22:	df 93       	push	r29
    2b24:	cf 93       	push	r28
    2b26:	cd b7       	in	r28, 0x3d	; 61
    2b28:	de b7       	in	r29, 0x3e	; 62
    2b2a:	c5 5d       	subi	r28, 0xD5	; 213
    2b2c:	d1 40       	sbci	r29, 0x01	; 1
    2b2e:	0f b6       	in	r0, 0x3f	; 63
    2b30:	f8 94       	cli
    2b32:	de bf       	out	0x3e, r29	; 62
    2b34:	0f be       	out	0x3f, r0	; 63
    2b36:	cd bf       	out	0x3d, r28	; 61

Keypad_Inti();
    2b38:	0e 94 69 10 	call	0x20d2	; 0x20d2 <Keypad_Inti>
LCD_INTI();
    2b3c:	0e 94 0a 0b 	call	0x1614	; 0x1614 <LCD_INTI>
u32 password=1;
    2b40:	fe 01       	movw	r30, r28
    2b42:	e5 53       	subi	r30, 0x35	; 53
    2b44:	fe 4f       	sbci	r31, 0xFE	; 254
    2b46:	81 e0       	ldi	r24, 0x01	; 1
    2b48:	90 e0       	ldi	r25, 0x00	; 0
    2b4a:	a0 e0       	ldi	r26, 0x00	; 0
    2b4c:	b0 e0       	ldi	r27, 0x00	; 0
    2b4e:	80 83       	st	Z, r24
    2b50:	91 83       	std	Z+1, r25	; 0x01
    2b52:	a2 83       	std	Z+2, r26	; 0x02
    2b54:	b3 83       	std	Z+3, r27	; 0x03
*************************************************************************************************
*************************************************************************************************
*************************************************************************************************/


LCD_SendString("Enter password");
    2b56:	85 e8       	ldi	r24, 0x85	; 133
    2b58:	90 e0       	ldi	r25, 0x00	; 0
    2b5a:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
	LCD_GoTO(2, 0);
    2b5e:	82 e0       	ldi	r24, 0x02	; 2
    2b60:	60 e0       	ldi	r22, 0x00	; 0
    2b62:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <LCD_GoTO>
	while(1)
		{
			u8 tmp =keypad_GetVal();
    2b66:	0e 94 bc 10 	call	0x2178	; 0x2178 <keypad_GetVal>
    2b6a:	fe 01       	movw	r30, r28
    2b6c:	e8 53       	subi	r30, 0x38	; 56
    2b6e:	fe 4f       	sbci	r31, 0xFE	; 254
    2b70:	80 83       	st	Z, r24
				if(tmp!=0)
    2b72:	fe 01       	movw	r30, r28
    2b74:	e8 53       	subi	r30, 0x38	; 56
    2b76:	fe 4f       	sbci	r31, 0xFE	; 254
    2b78:	80 81       	ld	r24, Z
    2b7a:	88 23       	and	r24, r24
    2b7c:	a1 f3       	breq	.-24     	; 0x2b66 <main+0x4c>
				{
					if(tmp>='0'&&tmp<='9')
    2b7e:	fe 01       	movw	r30, r28
    2b80:	e8 53       	subi	r30, 0x38	; 56
    2b82:	fe 4f       	sbci	r31, 0xFE	; 254
    2b84:	80 81       	ld	r24, Z
    2b86:	80 33       	cpi	r24, 0x30	; 48
    2b88:	08 f4       	brcc	.+2      	; 0x2b8c <main+0x72>
    2b8a:	47 c0       	rjmp	.+142    	; 0x2c1a <main+0x100>
    2b8c:	fe 01       	movw	r30, r28
    2b8e:	e8 53       	subi	r30, 0x38	; 56
    2b90:	fe 4f       	sbci	r31, 0xFE	; 254
    2b92:	80 81       	ld	r24, Z
    2b94:	8a 33       	cpi	r24, 0x3A	; 58
    2b96:	08 f0       	brcs	.+2      	; 0x2b9a <main+0x80>
    2b98:	40 c0       	rjmp	.+128    	; 0x2c1a <main+0x100>
					{
						LCD_SendChar('*');
    2b9a:	8a e2       	ldi	r24, 0x2A	; 42
    2b9c:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <LCD_SendChar>
						password=password*10;
    2ba0:	8e 01       	movw	r16, r28
    2ba2:	05 53       	subi	r16, 0x35	; 53
    2ba4:	1e 4f       	sbci	r17, 0xFE	; 254
    2ba6:	fe 01       	movw	r30, r28
    2ba8:	e5 53       	subi	r30, 0x35	; 53
    2baa:	fe 4f       	sbci	r31, 0xFE	; 254
    2bac:	80 81       	ld	r24, Z
    2bae:	91 81       	ldd	r25, Z+1	; 0x01
    2bb0:	a2 81       	ldd	r26, Z+2	; 0x02
    2bb2:	b3 81       	ldd	r27, Z+3	; 0x03
    2bb4:	2a e0       	ldi	r18, 0x0A	; 10
    2bb6:	30 e0       	ldi	r19, 0x00	; 0
    2bb8:	40 e0       	ldi	r20, 0x00	; 0
    2bba:	50 e0       	ldi	r21, 0x00	; 0
    2bbc:	bc 01       	movw	r22, r24
    2bbe:	cd 01       	movw	r24, r26
    2bc0:	0e 94 68 33 	call	0x66d0	; 0x66d0 <__mulsi3>
    2bc4:	dc 01       	movw	r26, r24
    2bc6:	cb 01       	movw	r24, r22
    2bc8:	f8 01       	movw	r30, r16
    2bca:	80 83       	st	Z, r24
    2bcc:	91 83       	std	Z+1, r25	; 0x01
    2bce:	a2 83       	std	Z+2, r26	; 0x02
    2bd0:	b3 83       	std	Z+3, r27	; 0x03
						password=password+(tmp-'0');
    2bd2:	fe 01       	movw	r30, r28
    2bd4:	e8 53       	subi	r30, 0x38	; 56
    2bd6:	fe 4f       	sbci	r31, 0xFE	; 254
    2bd8:	80 81       	ld	r24, Z
    2bda:	88 2f       	mov	r24, r24
    2bdc:	90 e0       	ldi	r25, 0x00	; 0
    2bde:	c0 97       	sbiw	r24, 0x30	; 48
    2be0:	9c 01       	movw	r18, r24
    2be2:	44 27       	eor	r20, r20
    2be4:	37 fd       	sbrc	r19, 7
    2be6:	40 95       	com	r20
    2be8:	54 2f       	mov	r21, r20
    2bea:	be 01       	movw	r22, r28
    2bec:	65 53       	subi	r22, 0x35	; 53
    2bee:	7e 4f       	sbci	r23, 0xFE	; 254
    2bf0:	fe 01       	movw	r30, r28
    2bf2:	e5 53       	subi	r30, 0x35	; 53
    2bf4:	fe 4f       	sbci	r31, 0xFE	; 254
    2bf6:	80 81       	ld	r24, Z
    2bf8:	91 81       	ldd	r25, Z+1	; 0x01
    2bfa:	a2 81       	ldd	r26, Z+2	; 0x02
    2bfc:	b3 81       	ldd	r27, Z+3	; 0x03
    2bfe:	82 0f       	add	r24, r18
    2c00:	93 1f       	adc	r25, r19
    2c02:	a4 1f       	adc	r26, r20
    2c04:	b5 1f       	adc	r27, r21
    2c06:	fb 01       	movw	r30, r22
    2c08:	80 83       	st	Z, r24
    2c0a:	91 83       	std	Z+1, r25	; 0x01
    2c0c:	a2 83       	std	Z+2, r26	; 0x02
    2c0e:	b3 83       	std	Z+3, r27	; 0x03
						tmp=0;
    2c10:	fe 01       	movw	r30, r28
    2c12:	e8 53       	subi	r30, 0x38	; 56
    2c14:	fe 4f       	sbci	r31, 0xFE	; 254
    2c16:	10 82       	st	Z, r1
    2c18:	a6 cf       	rjmp	.-180    	; 0x2b66 <main+0x4c>

					}
					else if(tmp=='=')
    2c1a:	fe 01       	movw	r30, r28
    2c1c:	e8 53       	subi	r30, 0x38	; 56
    2c1e:	fe 4f       	sbci	r31, 0xFE	; 254
    2c20:	80 81       	ld	r24, Z
    2c22:	8d 33       	cpi	r24, 0x3D	; 61
    2c24:	09 f0       	breq	.+2      	; 0x2c28 <main+0x10e>
    2c26:	f5 c0       	rjmp	.+490    	; 0x2e12 <main+0x2f8>
					{
						if(password==10123456)
    2c28:	fe 01       	movw	r30, r28
    2c2a:	e5 53       	subi	r30, 0x35	; 53
    2c2c:	fe 4f       	sbci	r31, 0xFE	; 254
    2c2e:	80 81       	ld	r24, Z
    2c30:	91 81       	ldd	r25, Z+1	; 0x01
    2c32:	a2 81       	ldd	r26, Z+2	; 0x02
    2c34:	b3 81       	ldd	r27, Z+3	; 0x03
    2c36:	80 3c       	cpi	r24, 0xC0	; 192
    2c38:	f8 e7       	ldi	r31, 0x78	; 120
    2c3a:	9f 07       	cpc	r25, r31
    2c3c:	fa e9       	ldi	r31, 0x9A	; 154
    2c3e:	af 07       	cpc	r26, r31
    2c40:	f0 e0       	ldi	r31, 0x00	; 0
    2c42:	bf 07       	cpc	r27, r31
    2c44:	99 f4       	brne	.+38     	; 0x2c6c <main+0x152>
						{
						LCD_Clear();
    2c46:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
	**************************************------(SELECT_MODE)-----***********************************
	*************************************************************************************************
	*************************************************************************************************
	*************************************************************************************************/

LCD_SendString("1-clock 2-stop w");
    2c4a:	84 e9       	ldi	r24, 0x94	; 148
    2c4c:	90 e0       	ldi	r25, 0x00	; 0
    2c4e:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
LCD_GoTO(2, 0);
    2c52:	82 e0       	ldi	r24, 0x02	; 2
    2c54:	60 e0       	ldi	r22, 0x00	; 0
    2c56:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <LCD_GoTO>
LCD_SendString("3-timer 4-calc");
    2c5a:	85 ea       	ldi	r24, 0xA5	; 165
    2c5c:	90 e0       	ldi	r25, 0x00	; 0
    2c5e:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
LCD_GoTO(2, 14);
    2c62:	82 e0       	ldi	r24, 0x02	; 2
    2c64:	6e e0       	ldi	r22, 0x0E	; 14
    2c66:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <LCD_GoTO>
    2c6a:	a6 c1       	rjmp	.+844    	; 0x2fb8 <main+0x49e>
						break;
						}

						else
						{
							LCD_Clear();
    2c6c:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
							LCD_SendString("wrong password");
    2c70:	84 eb       	ldi	r24, 0xB4	; 180
    2c72:	90 e0       	ldi	r25, 0x00	; 0
    2c74:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
    2c78:	fe 01       	movw	r30, r28
    2c7a:	ef 55       	subi	r30, 0x5F	; 95
    2c7c:	fe 4f       	sbci	r31, 0xFE	; 254
    2c7e:	80 e0       	ldi	r24, 0x00	; 0
    2c80:	90 e0       	ldi	r25, 0x00	; 0
    2c82:	aa e7       	ldi	r26, 0x7A	; 122
    2c84:	b4 e4       	ldi	r27, 0x44	; 68
    2c86:	80 83       	st	Z, r24
    2c88:	91 83       	std	Z+1, r25	; 0x01
    2c8a:	a2 83       	std	Z+2, r26	; 0x02
    2c8c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c8e:	8e 01       	movw	r16, r28
    2c90:	03 56       	subi	r16, 0x63	; 99
    2c92:	1e 4f       	sbci	r17, 0xFE	; 254
    2c94:	fe 01       	movw	r30, r28
    2c96:	ef 55       	subi	r30, 0x5F	; 95
    2c98:	fe 4f       	sbci	r31, 0xFE	; 254
    2c9a:	60 81       	ld	r22, Z
    2c9c:	71 81       	ldd	r23, Z+1	; 0x01
    2c9e:	82 81       	ldd	r24, Z+2	; 0x02
    2ca0:	93 81       	ldd	r25, Z+3	; 0x03
    2ca2:	20 e0       	ldi	r18, 0x00	; 0
    2ca4:	30 e0       	ldi	r19, 0x00	; 0
    2ca6:	4a ef       	ldi	r20, 0xFA	; 250
    2ca8:	54 e4       	ldi	r21, 0x44	; 68
    2caa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2cae:	dc 01       	movw	r26, r24
    2cb0:	cb 01       	movw	r24, r22
    2cb2:	f8 01       	movw	r30, r16
    2cb4:	80 83       	st	Z, r24
    2cb6:	91 83       	std	Z+1, r25	; 0x01
    2cb8:	a2 83       	std	Z+2, r26	; 0x02
    2cba:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2cbc:	fe 01       	movw	r30, r28
    2cbe:	e3 56       	subi	r30, 0x63	; 99
    2cc0:	fe 4f       	sbci	r31, 0xFE	; 254
    2cc2:	60 81       	ld	r22, Z
    2cc4:	71 81       	ldd	r23, Z+1	; 0x01
    2cc6:	82 81       	ldd	r24, Z+2	; 0x02
    2cc8:	93 81       	ldd	r25, Z+3	; 0x03
    2cca:	20 e0       	ldi	r18, 0x00	; 0
    2ccc:	30 e0       	ldi	r19, 0x00	; 0
    2cce:	40 e8       	ldi	r20, 0x80	; 128
    2cd0:	5f e3       	ldi	r21, 0x3F	; 63
    2cd2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2cd6:	88 23       	and	r24, r24
    2cd8:	44 f4       	brge	.+16     	; 0x2cea <main+0x1d0>
		__ticks = 1;
    2cda:	fe 01       	movw	r30, r28
    2cdc:	e5 56       	subi	r30, 0x65	; 101
    2cde:	fe 4f       	sbci	r31, 0xFE	; 254
    2ce0:	81 e0       	ldi	r24, 0x01	; 1
    2ce2:	90 e0       	ldi	r25, 0x00	; 0
    2ce4:	91 83       	std	Z+1, r25	; 0x01
    2ce6:	80 83       	st	Z, r24
    2ce8:	64 c0       	rjmp	.+200    	; 0x2db2 <main+0x298>
	else if (__tmp > 65535)
    2cea:	fe 01       	movw	r30, r28
    2cec:	e3 56       	subi	r30, 0x63	; 99
    2cee:	fe 4f       	sbci	r31, 0xFE	; 254
    2cf0:	60 81       	ld	r22, Z
    2cf2:	71 81       	ldd	r23, Z+1	; 0x01
    2cf4:	82 81       	ldd	r24, Z+2	; 0x02
    2cf6:	93 81       	ldd	r25, Z+3	; 0x03
    2cf8:	20 e0       	ldi	r18, 0x00	; 0
    2cfa:	3f ef       	ldi	r19, 0xFF	; 255
    2cfc:	4f e7       	ldi	r20, 0x7F	; 127
    2cfe:	57 e4       	ldi	r21, 0x47	; 71
    2d00:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2d04:	18 16       	cp	r1, r24
    2d06:	0c f0       	brlt	.+2      	; 0x2d0a <main+0x1f0>
    2d08:	43 c0       	rjmp	.+134    	; 0x2d90 <main+0x276>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d0a:	fe 01       	movw	r30, r28
    2d0c:	ef 55       	subi	r30, 0x5F	; 95
    2d0e:	fe 4f       	sbci	r31, 0xFE	; 254
    2d10:	60 81       	ld	r22, Z
    2d12:	71 81       	ldd	r23, Z+1	; 0x01
    2d14:	82 81       	ldd	r24, Z+2	; 0x02
    2d16:	93 81       	ldd	r25, Z+3	; 0x03
    2d18:	20 e0       	ldi	r18, 0x00	; 0
    2d1a:	30 e0       	ldi	r19, 0x00	; 0
    2d1c:	40 e2       	ldi	r20, 0x20	; 32
    2d1e:	51 e4       	ldi	r21, 0x41	; 65
    2d20:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2d24:	dc 01       	movw	r26, r24
    2d26:	cb 01       	movw	r24, r22
    2d28:	8e 01       	movw	r16, r28
    2d2a:	05 56       	subi	r16, 0x65	; 101
    2d2c:	1e 4f       	sbci	r17, 0xFE	; 254
    2d2e:	bc 01       	movw	r22, r24
    2d30:	cd 01       	movw	r24, r26
    2d32:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2d36:	dc 01       	movw	r26, r24
    2d38:	cb 01       	movw	r24, r22
    2d3a:	f8 01       	movw	r30, r16
    2d3c:	91 83       	std	Z+1, r25	; 0x01
    2d3e:	80 83       	st	Z, r24
    2d40:	1f c0       	rjmp	.+62     	; 0x2d80 <main+0x266>
    2d42:	fe 01       	movw	r30, r28
    2d44:	e7 56       	subi	r30, 0x67	; 103
    2d46:	fe 4f       	sbci	r31, 0xFE	; 254
    2d48:	88 ec       	ldi	r24, 0xC8	; 200
    2d4a:	90 e0       	ldi	r25, 0x00	; 0
    2d4c:	91 83       	std	Z+1, r25	; 0x01
    2d4e:	80 83       	st	Z, r24
    2d50:	fe 01       	movw	r30, r28
    2d52:	e7 56       	subi	r30, 0x67	; 103
    2d54:	fe 4f       	sbci	r31, 0xFE	; 254
    2d56:	80 81       	ld	r24, Z
    2d58:	91 81       	ldd	r25, Z+1	; 0x01
    2d5a:	01 97       	sbiw	r24, 0x01	; 1
    2d5c:	f1 f7       	brne	.-4      	; 0x2d5a <main+0x240>
    2d5e:	fe 01       	movw	r30, r28
    2d60:	e7 56       	subi	r30, 0x67	; 103
    2d62:	fe 4f       	sbci	r31, 0xFE	; 254
    2d64:	91 83       	std	Z+1, r25	; 0x01
    2d66:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d68:	de 01       	movw	r26, r28
    2d6a:	a5 56       	subi	r26, 0x65	; 101
    2d6c:	be 4f       	sbci	r27, 0xFE	; 254
    2d6e:	fe 01       	movw	r30, r28
    2d70:	e5 56       	subi	r30, 0x65	; 101
    2d72:	fe 4f       	sbci	r31, 0xFE	; 254
    2d74:	80 81       	ld	r24, Z
    2d76:	91 81       	ldd	r25, Z+1	; 0x01
    2d78:	01 97       	sbiw	r24, 0x01	; 1
    2d7a:	11 96       	adiw	r26, 0x01	; 1
    2d7c:	9c 93       	st	X, r25
    2d7e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d80:	fe 01       	movw	r30, r28
    2d82:	e5 56       	subi	r30, 0x65	; 101
    2d84:	fe 4f       	sbci	r31, 0xFE	; 254
    2d86:	80 81       	ld	r24, Z
    2d88:	91 81       	ldd	r25, Z+1	; 0x01
    2d8a:	00 97       	sbiw	r24, 0x00	; 0
    2d8c:	d1 f6       	brne	.-76     	; 0x2d42 <main+0x228>
    2d8e:	27 c0       	rjmp	.+78     	; 0x2dde <main+0x2c4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d90:	8e 01       	movw	r16, r28
    2d92:	05 56       	subi	r16, 0x65	; 101
    2d94:	1e 4f       	sbci	r17, 0xFE	; 254
    2d96:	fe 01       	movw	r30, r28
    2d98:	e3 56       	subi	r30, 0x63	; 99
    2d9a:	fe 4f       	sbci	r31, 0xFE	; 254
    2d9c:	60 81       	ld	r22, Z
    2d9e:	71 81       	ldd	r23, Z+1	; 0x01
    2da0:	82 81       	ldd	r24, Z+2	; 0x02
    2da2:	93 81       	ldd	r25, Z+3	; 0x03
    2da4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2da8:	dc 01       	movw	r26, r24
    2daa:	cb 01       	movw	r24, r22
    2dac:	f8 01       	movw	r30, r16
    2dae:	91 83       	std	Z+1, r25	; 0x01
    2db0:	80 83       	st	Z, r24
    2db2:	de 01       	movw	r26, r28
    2db4:	a9 56       	subi	r26, 0x69	; 105
    2db6:	be 4f       	sbci	r27, 0xFE	; 254
    2db8:	fe 01       	movw	r30, r28
    2dba:	e5 56       	subi	r30, 0x65	; 101
    2dbc:	fe 4f       	sbci	r31, 0xFE	; 254
    2dbe:	80 81       	ld	r24, Z
    2dc0:	91 81       	ldd	r25, Z+1	; 0x01
    2dc2:	8d 93       	st	X+, r24
    2dc4:	9c 93       	st	X, r25
    2dc6:	fe 01       	movw	r30, r28
    2dc8:	e9 56       	subi	r30, 0x69	; 105
    2dca:	fe 4f       	sbci	r31, 0xFE	; 254
    2dcc:	80 81       	ld	r24, Z
    2dce:	91 81       	ldd	r25, Z+1	; 0x01
    2dd0:	01 97       	sbiw	r24, 0x01	; 1
    2dd2:	f1 f7       	brne	.-4      	; 0x2dd0 <main+0x2b6>
    2dd4:	fe 01       	movw	r30, r28
    2dd6:	e9 56       	subi	r30, 0x69	; 105
    2dd8:	fe 4f       	sbci	r31, 0xFE	; 254
    2dda:	91 83       	std	Z+1, r25	; 0x01
    2ddc:	80 83       	st	Z, r24
							_delay_ms(1000);
							LCD_Clear();
    2dde:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
							LCD_SendString("Enter password");
    2de2:	85 e8       	ldi	r24, 0x85	; 133
    2de4:	90 e0       	ldi	r25, 0x00	; 0
    2de6:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
							LCD_GoTO(2, 0);
    2dea:	82 e0       	ldi	r24, 0x02	; 2
    2dec:	60 e0       	ldi	r22, 0x00	; 0
    2dee:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <LCD_GoTO>
							tmp=0;
    2df2:	fe 01       	movw	r30, r28
    2df4:	e8 53       	subi	r30, 0x38	; 56
    2df6:	fe 4f       	sbci	r31, 0xFE	; 254
    2df8:	10 82       	st	Z, r1
							password=1;
    2dfa:	fe 01       	movw	r30, r28
    2dfc:	e5 53       	subi	r30, 0x35	; 53
    2dfe:	fe 4f       	sbci	r31, 0xFE	; 254
    2e00:	81 e0       	ldi	r24, 0x01	; 1
    2e02:	90 e0       	ldi	r25, 0x00	; 0
    2e04:	a0 e0       	ldi	r26, 0x00	; 0
    2e06:	b0 e0       	ldi	r27, 0x00	; 0
    2e08:	80 83       	st	Z, r24
    2e0a:	91 83       	std	Z+1, r25	; 0x01
    2e0c:	a2 83       	std	Z+2, r26	; 0x02
    2e0e:	b3 83       	std	Z+3, r27	; 0x03
    2e10:	aa ce       	rjmp	.-684    	; 0x2b66 <main+0x4c>
						}

					}
					else
					{
						LCD_Clear();
    2e12:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
						LCD_SendString("wrong ");
    2e16:	83 ec       	ldi	r24, 0xC3	; 195
    2e18:	90 e0       	ldi	r25, 0x00	; 0
    2e1a:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
    2e1e:	fe 01       	movw	r30, r28
    2e20:	ed 56       	subi	r30, 0x6D	; 109
    2e22:	fe 4f       	sbci	r31, 0xFE	; 254
    2e24:	80 e0       	ldi	r24, 0x00	; 0
    2e26:	90 e0       	ldi	r25, 0x00	; 0
    2e28:	aa e7       	ldi	r26, 0x7A	; 122
    2e2a:	b4 e4       	ldi	r27, 0x44	; 68
    2e2c:	80 83       	st	Z, r24
    2e2e:	91 83       	std	Z+1, r25	; 0x01
    2e30:	a2 83       	std	Z+2, r26	; 0x02
    2e32:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e34:	8e 01       	movw	r16, r28
    2e36:	01 57       	subi	r16, 0x71	; 113
    2e38:	1e 4f       	sbci	r17, 0xFE	; 254
    2e3a:	fe 01       	movw	r30, r28
    2e3c:	ed 56       	subi	r30, 0x6D	; 109
    2e3e:	fe 4f       	sbci	r31, 0xFE	; 254
    2e40:	60 81       	ld	r22, Z
    2e42:	71 81       	ldd	r23, Z+1	; 0x01
    2e44:	82 81       	ldd	r24, Z+2	; 0x02
    2e46:	93 81       	ldd	r25, Z+3	; 0x03
    2e48:	20 e0       	ldi	r18, 0x00	; 0
    2e4a:	30 e0       	ldi	r19, 0x00	; 0
    2e4c:	4a ef       	ldi	r20, 0xFA	; 250
    2e4e:	54 e4       	ldi	r21, 0x44	; 68
    2e50:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2e54:	dc 01       	movw	r26, r24
    2e56:	cb 01       	movw	r24, r22
    2e58:	f8 01       	movw	r30, r16
    2e5a:	80 83       	st	Z, r24
    2e5c:	91 83       	std	Z+1, r25	; 0x01
    2e5e:	a2 83       	std	Z+2, r26	; 0x02
    2e60:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2e62:	fe 01       	movw	r30, r28
    2e64:	e1 57       	subi	r30, 0x71	; 113
    2e66:	fe 4f       	sbci	r31, 0xFE	; 254
    2e68:	60 81       	ld	r22, Z
    2e6a:	71 81       	ldd	r23, Z+1	; 0x01
    2e6c:	82 81       	ldd	r24, Z+2	; 0x02
    2e6e:	93 81       	ldd	r25, Z+3	; 0x03
    2e70:	20 e0       	ldi	r18, 0x00	; 0
    2e72:	30 e0       	ldi	r19, 0x00	; 0
    2e74:	40 e8       	ldi	r20, 0x80	; 128
    2e76:	5f e3       	ldi	r21, 0x3F	; 63
    2e78:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2e7c:	88 23       	and	r24, r24
    2e7e:	44 f4       	brge	.+16     	; 0x2e90 <main+0x376>
		__ticks = 1;
    2e80:	fe 01       	movw	r30, r28
    2e82:	e3 57       	subi	r30, 0x73	; 115
    2e84:	fe 4f       	sbci	r31, 0xFE	; 254
    2e86:	81 e0       	ldi	r24, 0x01	; 1
    2e88:	90 e0       	ldi	r25, 0x00	; 0
    2e8a:	91 83       	std	Z+1, r25	; 0x01
    2e8c:	80 83       	st	Z, r24
    2e8e:	64 c0       	rjmp	.+200    	; 0x2f58 <main+0x43e>
	else if (__tmp > 65535)
    2e90:	fe 01       	movw	r30, r28
    2e92:	e1 57       	subi	r30, 0x71	; 113
    2e94:	fe 4f       	sbci	r31, 0xFE	; 254
    2e96:	60 81       	ld	r22, Z
    2e98:	71 81       	ldd	r23, Z+1	; 0x01
    2e9a:	82 81       	ldd	r24, Z+2	; 0x02
    2e9c:	93 81       	ldd	r25, Z+3	; 0x03
    2e9e:	20 e0       	ldi	r18, 0x00	; 0
    2ea0:	3f ef       	ldi	r19, 0xFF	; 255
    2ea2:	4f e7       	ldi	r20, 0x7F	; 127
    2ea4:	57 e4       	ldi	r21, 0x47	; 71
    2ea6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2eaa:	18 16       	cp	r1, r24
    2eac:	0c f0       	brlt	.+2      	; 0x2eb0 <main+0x396>
    2eae:	43 c0       	rjmp	.+134    	; 0x2f36 <main+0x41c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2eb0:	fe 01       	movw	r30, r28
    2eb2:	ed 56       	subi	r30, 0x6D	; 109
    2eb4:	fe 4f       	sbci	r31, 0xFE	; 254
    2eb6:	60 81       	ld	r22, Z
    2eb8:	71 81       	ldd	r23, Z+1	; 0x01
    2eba:	82 81       	ldd	r24, Z+2	; 0x02
    2ebc:	93 81       	ldd	r25, Z+3	; 0x03
    2ebe:	20 e0       	ldi	r18, 0x00	; 0
    2ec0:	30 e0       	ldi	r19, 0x00	; 0
    2ec2:	40 e2       	ldi	r20, 0x20	; 32
    2ec4:	51 e4       	ldi	r21, 0x41	; 65
    2ec6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2eca:	dc 01       	movw	r26, r24
    2ecc:	cb 01       	movw	r24, r22
    2ece:	8e 01       	movw	r16, r28
    2ed0:	03 57       	subi	r16, 0x73	; 115
    2ed2:	1e 4f       	sbci	r17, 0xFE	; 254
    2ed4:	bc 01       	movw	r22, r24
    2ed6:	cd 01       	movw	r24, r26
    2ed8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2edc:	dc 01       	movw	r26, r24
    2ede:	cb 01       	movw	r24, r22
    2ee0:	f8 01       	movw	r30, r16
    2ee2:	91 83       	std	Z+1, r25	; 0x01
    2ee4:	80 83       	st	Z, r24
    2ee6:	1f c0       	rjmp	.+62     	; 0x2f26 <main+0x40c>
    2ee8:	fe 01       	movw	r30, r28
    2eea:	e5 57       	subi	r30, 0x75	; 117
    2eec:	fe 4f       	sbci	r31, 0xFE	; 254
    2eee:	88 ec       	ldi	r24, 0xC8	; 200
    2ef0:	90 e0       	ldi	r25, 0x00	; 0
    2ef2:	91 83       	std	Z+1, r25	; 0x01
    2ef4:	80 83       	st	Z, r24
    2ef6:	fe 01       	movw	r30, r28
    2ef8:	e5 57       	subi	r30, 0x75	; 117
    2efa:	fe 4f       	sbci	r31, 0xFE	; 254
    2efc:	80 81       	ld	r24, Z
    2efe:	91 81       	ldd	r25, Z+1	; 0x01
    2f00:	01 97       	sbiw	r24, 0x01	; 1
    2f02:	f1 f7       	brne	.-4      	; 0x2f00 <main+0x3e6>
    2f04:	fe 01       	movw	r30, r28
    2f06:	e5 57       	subi	r30, 0x75	; 117
    2f08:	fe 4f       	sbci	r31, 0xFE	; 254
    2f0a:	91 83       	std	Z+1, r25	; 0x01
    2f0c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f0e:	de 01       	movw	r26, r28
    2f10:	a3 57       	subi	r26, 0x73	; 115
    2f12:	be 4f       	sbci	r27, 0xFE	; 254
    2f14:	fe 01       	movw	r30, r28
    2f16:	e3 57       	subi	r30, 0x73	; 115
    2f18:	fe 4f       	sbci	r31, 0xFE	; 254
    2f1a:	80 81       	ld	r24, Z
    2f1c:	91 81       	ldd	r25, Z+1	; 0x01
    2f1e:	01 97       	sbiw	r24, 0x01	; 1
    2f20:	11 96       	adiw	r26, 0x01	; 1
    2f22:	9c 93       	st	X, r25
    2f24:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f26:	fe 01       	movw	r30, r28
    2f28:	e3 57       	subi	r30, 0x73	; 115
    2f2a:	fe 4f       	sbci	r31, 0xFE	; 254
    2f2c:	80 81       	ld	r24, Z
    2f2e:	91 81       	ldd	r25, Z+1	; 0x01
    2f30:	00 97       	sbiw	r24, 0x00	; 0
    2f32:	d1 f6       	brne	.-76     	; 0x2ee8 <main+0x3ce>
    2f34:	27 c0       	rjmp	.+78     	; 0x2f84 <main+0x46a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f36:	8e 01       	movw	r16, r28
    2f38:	03 57       	subi	r16, 0x73	; 115
    2f3a:	1e 4f       	sbci	r17, 0xFE	; 254
    2f3c:	fe 01       	movw	r30, r28
    2f3e:	e1 57       	subi	r30, 0x71	; 113
    2f40:	fe 4f       	sbci	r31, 0xFE	; 254
    2f42:	60 81       	ld	r22, Z
    2f44:	71 81       	ldd	r23, Z+1	; 0x01
    2f46:	82 81       	ldd	r24, Z+2	; 0x02
    2f48:	93 81       	ldd	r25, Z+3	; 0x03
    2f4a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2f4e:	dc 01       	movw	r26, r24
    2f50:	cb 01       	movw	r24, r22
    2f52:	f8 01       	movw	r30, r16
    2f54:	91 83       	std	Z+1, r25	; 0x01
    2f56:	80 83       	st	Z, r24
    2f58:	de 01       	movw	r26, r28
    2f5a:	a7 57       	subi	r26, 0x77	; 119
    2f5c:	be 4f       	sbci	r27, 0xFE	; 254
    2f5e:	fe 01       	movw	r30, r28
    2f60:	e3 57       	subi	r30, 0x73	; 115
    2f62:	fe 4f       	sbci	r31, 0xFE	; 254
    2f64:	80 81       	ld	r24, Z
    2f66:	91 81       	ldd	r25, Z+1	; 0x01
    2f68:	8d 93       	st	X+, r24
    2f6a:	9c 93       	st	X, r25
    2f6c:	fe 01       	movw	r30, r28
    2f6e:	e7 57       	subi	r30, 0x77	; 119
    2f70:	fe 4f       	sbci	r31, 0xFE	; 254
    2f72:	80 81       	ld	r24, Z
    2f74:	91 81       	ldd	r25, Z+1	; 0x01
    2f76:	01 97       	sbiw	r24, 0x01	; 1
    2f78:	f1 f7       	brne	.-4      	; 0x2f76 <main+0x45c>
    2f7a:	fe 01       	movw	r30, r28
    2f7c:	e7 57       	subi	r30, 0x77	; 119
    2f7e:	fe 4f       	sbci	r31, 0xFE	; 254
    2f80:	91 83       	std	Z+1, r25	; 0x01
    2f82:	80 83       	st	Z, r24
						_delay_ms(1000);
						LCD_Clear();
    2f84:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
						LCD_SendString("Enter password");
    2f88:	85 e8       	ldi	r24, 0x85	; 133
    2f8a:	90 e0       	ldi	r25, 0x00	; 0
    2f8c:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
						LCD_GoTO(2, 0);
    2f90:	82 e0       	ldi	r24, 0x02	; 2
    2f92:	60 e0       	ldi	r22, 0x00	; 0
    2f94:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <LCD_GoTO>
						tmp=0;
    2f98:	fe 01       	movw	r30, r28
    2f9a:	e8 53       	subi	r30, 0x38	; 56
    2f9c:	fe 4f       	sbci	r31, 0xFE	; 254
    2f9e:	10 82       	st	Z, r1
						password=1;
    2fa0:	fe 01       	movw	r30, r28
    2fa2:	e5 53       	subi	r30, 0x35	; 53
    2fa4:	fe 4f       	sbci	r31, 0xFE	; 254
    2fa6:	81 e0       	ldi	r24, 0x01	; 1
    2fa8:	90 e0       	ldi	r25, 0x00	; 0
    2faa:	a0 e0       	ldi	r26, 0x00	; 0
    2fac:	b0 e0       	ldi	r27, 0x00	; 0
    2fae:	80 83       	st	Z, r24
    2fb0:	91 83       	std	Z+1, r25	; 0x01
    2fb2:	a2 83       	std	Z+2, r26	; 0x02
    2fb4:	b3 83       	std	Z+3, r27	; 0x03
    2fb6:	d7 cd       	rjmp	.-1106   	; 0x2b66 <main+0x4c>
LCD_GoTO(2, 0);
LCD_SendString("3-timer 4-calc");
LCD_GoTO(2, 14);
while (1)
{
	data =keypad_GetVal();
    2fb8:	0e 94 bc 10 	call	0x2178	; 0x2178 <keypad_GetVal>
    2fbc:	fe 01       	movw	r30, r28
    2fbe:	e6 53       	subi	r30, 0x36	; 54
    2fc0:	fe 4f       	sbci	r31, 0xFE	; 254
    2fc2:	80 83       	st	Z, r24
	if (data!=0)
    2fc4:	fe 01       	movw	r30, r28
    2fc6:	e6 53       	subi	r30, 0x36	; 54
    2fc8:	fe 4f       	sbci	r31, 0xFE	; 254
    2fca:	80 81       	ld	r24, Z
    2fcc:	88 23       	and	r24, r24
    2fce:	a1 f3       	breq	.-24     	; 0x2fb8 <main+0x49e>
	{
		LCD_SendChar(data);
    2fd0:	fe 01       	movw	r30, r28
    2fd2:	e6 53       	subi	r30, 0x36	; 54
    2fd4:	fe 4f       	sbci	r31, 0xFE	; 254
    2fd6:	80 81       	ld	r24, Z
    2fd8:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <LCD_SendChar>
		mode=data-'0';
    2fdc:	de 01       	movw	r26, r28
    2fde:	a7 53       	subi	r26, 0x37	; 55
    2fe0:	be 4f       	sbci	r27, 0xFE	; 254
    2fe2:	fe 01       	movw	r30, r28
    2fe4:	e6 53       	subi	r30, 0x36	; 54
    2fe6:	fe 4f       	sbci	r31, 0xFE	; 254
    2fe8:	80 81       	ld	r24, Z
    2fea:	80 53       	subi	r24, 0x30	; 48
    2fec:	8c 93       	st	X, r24
    2fee:	fe 01       	movw	r30, r28
    2ff0:	eb 57       	subi	r30, 0x7B	; 123
    2ff2:	fe 4f       	sbci	r31, 0xFE	; 254
    2ff4:	80 e0       	ldi	r24, 0x00	; 0
    2ff6:	90 e0       	ldi	r25, 0x00	; 0
    2ff8:	aa ef       	ldi	r26, 0xFA	; 250
    2ffa:	b3 e4       	ldi	r27, 0x43	; 67
    2ffc:	80 83       	st	Z, r24
    2ffe:	91 83       	std	Z+1, r25	; 0x01
    3000:	a2 83       	std	Z+2, r26	; 0x02
    3002:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3004:	8e 01       	movw	r16, r28
    3006:	0f 57       	subi	r16, 0x7F	; 127
    3008:	1e 4f       	sbci	r17, 0xFE	; 254
    300a:	fe 01       	movw	r30, r28
    300c:	eb 57       	subi	r30, 0x7B	; 123
    300e:	fe 4f       	sbci	r31, 0xFE	; 254
    3010:	60 81       	ld	r22, Z
    3012:	71 81       	ldd	r23, Z+1	; 0x01
    3014:	82 81       	ldd	r24, Z+2	; 0x02
    3016:	93 81       	ldd	r25, Z+3	; 0x03
    3018:	20 e0       	ldi	r18, 0x00	; 0
    301a:	30 e0       	ldi	r19, 0x00	; 0
    301c:	4a ef       	ldi	r20, 0xFA	; 250
    301e:	54 e4       	ldi	r21, 0x44	; 68
    3020:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3024:	dc 01       	movw	r26, r24
    3026:	cb 01       	movw	r24, r22
    3028:	f8 01       	movw	r30, r16
    302a:	80 83       	st	Z, r24
    302c:	91 83       	std	Z+1, r25	; 0x01
    302e:	a2 83       	std	Z+2, r26	; 0x02
    3030:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3032:	fe 01       	movw	r30, r28
    3034:	ef 57       	subi	r30, 0x7F	; 127
    3036:	fe 4f       	sbci	r31, 0xFE	; 254
    3038:	60 81       	ld	r22, Z
    303a:	71 81       	ldd	r23, Z+1	; 0x01
    303c:	82 81       	ldd	r24, Z+2	; 0x02
    303e:	93 81       	ldd	r25, Z+3	; 0x03
    3040:	20 e0       	ldi	r18, 0x00	; 0
    3042:	30 e0       	ldi	r19, 0x00	; 0
    3044:	40 e8       	ldi	r20, 0x80	; 128
    3046:	5f e3       	ldi	r21, 0x3F	; 63
    3048:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    304c:	88 23       	and	r24, r24
    304e:	44 f4       	brge	.+16     	; 0x3060 <main+0x546>
		__ticks = 1;
    3050:	fe 01       	movw	r30, r28
    3052:	e1 58       	subi	r30, 0x81	; 129
    3054:	fe 4f       	sbci	r31, 0xFE	; 254
    3056:	81 e0       	ldi	r24, 0x01	; 1
    3058:	90 e0       	ldi	r25, 0x00	; 0
    305a:	91 83       	std	Z+1, r25	; 0x01
    305c:	80 83       	st	Z, r24
    305e:	64 c0       	rjmp	.+200    	; 0x3128 <main+0x60e>
	else if (__tmp > 65535)
    3060:	fe 01       	movw	r30, r28
    3062:	ef 57       	subi	r30, 0x7F	; 127
    3064:	fe 4f       	sbci	r31, 0xFE	; 254
    3066:	60 81       	ld	r22, Z
    3068:	71 81       	ldd	r23, Z+1	; 0x01
    306a:	82 81       	ldd	r24, Z+2	; 0x02
    306c:	93 81       	ldd	r25, Z+3	; 0x03
    306e:	20 e0       	ldi	r18, 0x00	; 0
    3070:	3f ef       	ldi	r19, 0xFF	; 255
    3072:	4f e7       	ldi	r20, 0x7F	; 127
    3074:	57 e4       	ldi	r21, 0x47	; 71
    3076:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    307a:	18 16       	cp	r1, r24
    307c:	0c f0       	brlt	.+2      	; 0x3080 <main+0x566>
    307e:	43 c0       	rjmp	.+134    	; 0x3106 <main+0x5ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3080:	fe 01       	movw	r30, r28
    3082:	eb 57       	subi	r30, 0x7B	; 123
    3084:	fe 4f       	sbci	r31, 0xFE	; 254
    3086:	60 81       	ld	r22, Z
    3088:	71 81       	ldd	r23, Z+1	; 0x01
    308a:	82 81       	ldd	r24, Z+2	; 0x02
    308c:	93 81       	ldd	r25, Z+3	; 0x03
    308e:	20 e0       	ldi	r18, 0x00	; 0
    3090:	30 e0       	ldi	r19, 0x00	; 0
    3092:	40 e2       	ldi	r20, 0x20	; 32
    3094:	51 e4       	ldi	r21, 0x41	; 65
    3096:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    309a:	dc 01       	movw	r26, r24
    309c:	cb 01       	movw	r24, r22
    309e:	8e 01       	movw	r16, r28
    30a0:	01 58       	subi	r16, 0x81	; 129
    30a2:	1e 4f       	sbci	r17, 0xFE	; 254
    30a4:	bc 01       	movw	r22, r24
    30a6:	cd 01       	movw	r24, r26
    30a8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    30ac:	dc 01       	movw	r26, r24
    30ae:	cb 01       	movw	r24, r22
    30b0:	f8 01       	movw	r30, r16
    30b2:	91 83       	std	Z+1, r25	; 0x01
    30b4:	80 83       	st	Z, r24
    30b6:	1f c0       	rjmp	.+62     	; 0x30f6 <main+0x5dc>
    30b8:	fe 01       	movw	r30, r28
    30ba:	e3 58       	subi	r30, 0x83	; 131
    30bc:	fe 4f       	sbci	r31, 0xFE	; 254
    30be:	88 ec       	ldi	r24, 0xC8	; 200
    30c0:	90 e0       	ldi	r25, 0x00	; 0
    30c2:	91 83       	std	Z+1, r25	; 0x01
    30c4:	80 83       	st	Z, r24
    30c6:	fe 01       	movw	r30, r28
    30c8:	e3 58       	subi	r30, 0x83	; 131
    30ca:	fe 4f       	sbci	r31, 0xFE	; 254
    30cc:	80 81       	ld	r24, Z
    30ce:	91 81       	ldd	r25, Z+1	; 0x01
    30d0:	01 97       	sbiw	r24, 0x01	; 1
    30d2:	f1 f7       	brne	.-4      	; 0x30d0 <main+0x5b6>
    30d4:	fe 01       	movw	r30, r28
    30d6:	e3 58       	subi	r30, 0x83	; 131
    30d8:	fe 4f       	sbci	r31, 0xFE	; 254
    30da:	91 83       	std	Z+1, r25	; 0x01
    30dc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    30de:	de 01       	movw	r26, r28
    30e0:	a1 58       	subi	r26, 0x81	; 129
    30e2:	be 4f       	sbci	r27, 0xFE	; 254
    30e4:	fe 01       	movw	r30, r28
    30e6:	e1 58       	subi	r30, 0x81	; 129
    30e8:	fe 4f       	sbci	r31, 0xFE	; 254
    30ea:	80 81       	ld	r24, Z
    30ec:	91 81       	ldd	r25, Z+1	; 0x01
    30ee:	01 97       	sbiw	r24, 0x01	; 1
    30f0:	11 96       	adiw	r26, 0x01	; 1
    30f2:	9c 93       	st	X, r25
    30f4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    30f6:	fe 01       	movw	r30, r28
    30f8:	e1 58       	subi	r30, 0x81	; 129
    30fa:	fe 4f       	sbci	r31, 0xFE	; 254
    30fc:	80 81       	ld	r24, Z
    30fe:	91 81       	ldd	r25, Z+1	; 0x01
    3100:	00 97       	sbiw	r24, 0x00	; 0
    3102:	d1 f6       	brne	.-76     	; 0x30b8 <main+0x59e>
    3104:	28 c0       	rjmp	.+80     	; 0x3156 <main+0x63c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3106:	8e 01       	movw	r16, r28
    3108:	01 58       	subi	r16, 0x81	; 129
    310a:	1e 4f       	sbci	r17, 0xFE	; 254
    310c:	fe 01       	movw	r30, r28
    310e:	ef 57       	subi	r30, 0x7F	; 127
    3110:	fe 4f       	sbci	r31, 0xFE	; 254
    3112:	60 81       	ld	r22, Z
    3114:	71 81       	ldd	r23, Z+1	; 0x01
    3116:	82 81       	ldd	r24, Z+2	; 0x02
    3118:	93 81       	ldd	r25, Z+3	; 0x03
    311a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    311e:	dc 01       	movw	r26, r24
    3120:	cb 01       	movw	r24, r22
    3122:	f8 01       	movw	r30, r16
    3124:	91 83       	std	Z+1, r25	; 0x01
    3126:	80 83       	st	Z, r24
    3128:	de 01       	movw	r26, r28
    312a:	a5 58       	subi	r26, 0x85	; 133
    312c:	be 4f       	sbci	r27, 0xFE	; 254
    312e:	fe 01       	movw	r30, r28
    3130:	e1 58       	subi	r30, 0x81	; 129
    3132:	fe 4f       	sbci	r31, 0xFE	; 254
    3134:	80 81       	ld	r24, Z
    3136:	91 81       	ldd	r25, Z+1	; 0x01
    3138:	11 96       	adiw	r26, 0x01	; 1
    313a:	9c 93       	st	X, r25
    313c:	8e 93       	st	-X, r24
    313e:	fe 01       	movw	r30, r28
    3140:	e5 58       	subi	r30, 0x85	; 133
    3142:	fe 4f       	sbci	r31, 0xFE	; 254
    3144:	80 81       	ld	r24, Z
    3146:	91 81       	ldd	r25, Z+1	; 0x01
    3148:	01 97       	sbiw	r24, 0x01	; 1
    314a:	f1 f7       	brne	.-4      	; 0x3148 <main+0x62e>
    314c:	fe 01       	movw	r30, r28
    314e:	e5 58       	subi	r30, 0x85	; 133
    3150:	fe 4f       	sbci	r31, 0xFE	; 254
    3152:	91 83       	std	Z+1, r25	; 0x01
    3154:	80 83       	st	Z, r24
		_delay_ms(500);
		if(mode==1||mode==2||mode==3||mode==4)
    3156:	fe 01       	movw	r30, r28
    3158:	e7 53       	subi	r30, 0x37	; 55
    315a:	fe 4f       	sbci	r31, 0xFE	; 254
    315c:	80 81       	ld	r24, Z
    315e:	81 30       	cpi	r24, 0x01	; 1
    3160:	91 f0       	breq	.+36     	; 0x3186 <main+0x66c>
    3162:	fe 01       	movw	r30, r28
    3164:	e7 53       	subi	r30, 0x37	; 55
    3166:	fe 4f       	sbci	r31, 0xFE	; 254
    3168:	80 81       	ld	r24, Z
    316a:	82 30       	cpi	r24, 0x02	; 2
    316c:	61 f0       	breq	.+24     	; 0x3186 <main+0x66c>
    316e:	fe 01       	movw	r30, r28
    3170:	e7 53       	subi	r30, 0x37	; 55
    3172:	fe 4f       	sbci	r31, 0xFE	; 254
    3174:	80 81       	ld	r24, Z
    3176:	83 30       	cpi	r24, 0x03	; 3
    3178:	31 f0       	breq	.+12     	; 0x3186 <main+0x66c>
    317a:	fe 01       	movw	r30, r28
    317c:	e7 53       	subi	r30, 0x37	; 55
    317e:	fe 4f       	sbci	r31, 0xFE	; 254
    3180:	80 81       	ld	r24, Z
    3182:	84 30       	cpi	r24, 0x04	; 4
    3184:	59 f4       	brne	.+22     	; 0x319c <main+0x682>
		{
		LCD_Clear();
    3186:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
*************************************************************************************************
*************************************************************************************************
*************************************************************************************************/


if (mode==1)
    318a:	fe 01       	movw	r30, r28
    318c:	e7 53       	subi	r30, 0x37	; 55
    318e:	fe 4f       	sbci	r31, 0xFE	; 254
    3190:	80 81       	ld	r24, Z
    3192:	81 30       	cpi	r24, 0x01	; 1
    3194:	09 f4       	brne	.+2      	; 0x3198 <main+0x67e>
    3196:	ce c0       	rjmp	.+412    	; 0x3334 <main+0x81a>
    3198:	0c 94 60 20 	jmp	0x40c0	; 0x40c0 <main+0x15a6>
		LCD_Clear();
		break;
		}
		else
		{
			LCD_Clear();
    319c:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
			LCD_SendString("wrong....");
    31a0:	8a ec       	ldi	r24, 0xCA	; 202
    31a2:	90 e0       	ldi	r25, 0x00	; 0
    31a4:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
    31a8:	fe 01       	movw	r30, r28
    31aa:	e9 58       	subi	r30, 0x89	; 137
    31ac:	fe 4f       	sbci	r31, 0xFE	; 254
    31ae:	80 e0       	ldi	r24, 0x00	; 0
    31b0:	90 e0       	ldi	r25, 0x00	; 0
    31b2:	aa e7       	ldi	r26, 0x7A	; 122
    31b4:	b4 e4       	ldi	r27, 0x44	; 68
    31b6:	80 83       	st	Z, r24
    31b8:	91 83       	std	Z+1, r25	; 0x01
    31ba:	a2 83       	std	Z+2, r26	; 0x02
    31bc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    31be:	8e 01       	movw	r16, r28
    31c0:	0d 58       	subi	r16, 0x8D	; 141
    31c2:	1e 4f       	sbci	r17, 0xFE	; 254
    31c4:	fe 01       	movw	r30, r28
    31c6:	e9 58       	subi	r30, 0x89	; 137
    31c8:	fe 4f       	sbci	r31, 0xFE	; 254
    31ca:	60 81       	ld	r22, Z
    31cc:	71 81       	ldd	r23, Z+1	; 0x01
    31ce:	82 81       	ldd	r24, Z+2	; 0x02
    31d0:	93 81       	ldd	r25, Z+3	; 0x03
    31d2:	20 e0       	ldi	r18, 0x00	; 0
    31d4:	30 e0       	ldi	r19, 0x00	; 0
    31d6:	4a ef       	ldi	r20, 0xFA	; 250
    31d8:	54 e4       	ldi	r21, 0x44	; 68
    31da:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    31de:	dc 01       	movw	r26, r24
    31e0:	cb 01       	movw	r24, r22
    31e2:	f8 01       	movw	r30, r16
    31e4:	80 83       	st	Z, r24
    31e6:	91 83       	std	Z+1, r25	; 0x01
    31e8:	a2 83       	std	Z+2, r26	; 0x02
    31ea:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    31ec:	fe 01       	movw	r30, r28
    31ee:	ed 58       	subi	r30, 0x8D	; 141
    31f0:	fe 4f       	sbci	r31, 0xFE	; 254
    31f2:	60 81       	ld	r22, Z
    31f4:	71 81       	ldd	r23, Z+1	; 0x01
    31f6:	82 81       	ldd	r24, Z+2	; 0x02
    31f8:	93 81       	ldd	r25, Z+3	; 0x03
    31fa:	20 e0       	ldi	r18, 0x00	; 0
    31fc:	30 e0       	ldi	r19, 0x00	; 0
    31fe:	40 e8       	ldi	r20, 0x80	; 128
    3200:	5f e3       	ldi	r21, 0x3F	; 63
    3202:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3206:	88 23       	and	r24, r24
    3208:	44 f4       	brge	.+16     	; 0x321a <main+0x700>
		__ticks = 1;
    320a:	fe 01       	movw	r30, r28
    320c:	ef 58       	subi	r30, 0x8F	; 143
    320e:	fe 4f       	sbci	r31, 0xFE	; 254
    3210:	81 e0       	ldi	r24, 0x01	; 1
    3212:	90 e0       	ldi	r25, 0x00	; 0
    3214:	91 83       	std	Z+1, r25	; 0x01
    3216:	80 83       	st	Z, r24
    3218:	64 c0       	rjmp	.+200    	; 0x32e2 <main+0x7c8>
	else if (__tmp > 65535)
    321a:	fe 01       	movw	r30, r28
    321c:	ed 58       	subi	r30, 0x8D	; 141
    321e:	fe 4f       	sbci	r31, 0xFE	; 254
    3220:	60 81       	ld	r22, Z
    3222:	71 81       	ldd	r23, Z+1	; 0x01
    3224:	82 81       	ldd	r24, Z+2	; 0x02
    3226:	93 81       	ldd	r25, Z+3	; 0x03
    3228:	20 e0       	ldi	r18, 0x00	; 0
    322a:	3f ef       	ldi	r19, 0xFF	; 255
    322c:	4f e7       	ldi	r20, 0x7F	; 127
    322e:	57 e4       	ldi	r21, 0x47	; 71
    3230:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3234:	18 16       	cp	r1, r24
    3236:	0c f0       	brlt	.+2      	; 0x323a <main+0x720>
    3238:	43 c0       	rjmp	.+134    	; 0x32c0 <main+0x7a6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    323a:	fe 01       	movw	r30, r28
    323c:	e9 58       	subi	r30, 0x89	; 137
    323e:	fe 4f       	sbci	r31, 0xFE	; 254
    3240:	60 81       	ld	r22, Z
    3242:	71 81       	ldd	r23, Z+1	; 0x01
    3244:	82 81       	ldd	r24, Z+2	; 0x02
    3246:	93 81       	ldd	r25, Z+3	; 0x03
    3248:	20 e0       	ldi	r18, 0x00	; 0
    324a:	30 e0       	ldi	r19, 0x00	; 0
    324c:	40 e2       	ldi	r20, 0x20	; 32
    324e:	51 e4       	ldi	r21, 0x41	; 65
    3250:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3254:	dc 01       	movw	r26, r24
    3256:	cb 01       	movw	r24, r22
    3258:	8e 01       	movw	r16, r28
    325a:	0f 58       	subi	r16, 0x8F	; 143
    325c:	1e 4f       	sbci	r17, 0xFE	; 254
    325e:	bc 01       	movw	r22, r24
    3260:	cd 01       	movw	r24, r26
    3262:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3266:	dc 01       	movw	r26, r24
    3268:	cb 01       	movw	r24, r22
    326a:	f8 01       	movw	r30, r16
    326c:	91 83       	std	Z+1, r25	; 0x01
    326e:	80 83       	st	Z, r24
    3270:	1f c0       	rjmp	.+62     	; 0x32b0 <main+0x796>
    3272:	fe 01       	movw	r30, r28
    3274:	e1 59       	subi	r30, 0x91	; 145
    3276:	fe 4f       	sbci	r31, 0xFE	; 254
    3278:	88 ec       	ldi	r24, 0xC8	; 200
    327a:	90 e0       	ldi	r25, 0x00	; 0
    327c:	91 83       	std	Z+1, r25	; 0x01
    327e:	80 83       	st	Z, r24
    3280:	fe 01       	movw	r30, r28
    3282:	e1 59       	subi	r30, 0x91	; 145
    3284:	fe 4f       	sbci	r31, 0xFE	; 254
    3286:	80 81       	ld	r24, Z
    3288:	91 81       	ldd	r25, Z+1	; 0x01
    328a:	01 97       	sbiw	r24, 0x01	; 1
    328c:	f1 f7       	brne	.-4      	; 0x328a <main+0x770>
    328e:	fe 01       	movw	r30, r28
    3290:	e1 59       	subi	r30, 0x91	; 145
    3292:	fe 4f       	sbci	r31, 0xFE	; 254
    3294:	91 83       	std	Z+1, r25	; 0x01
    3296:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3298:	de 01       	movw	r26, r28
    329a:	af 58       	subi	r26, 0x8F	; 143
    329c:	be 4f       	sbci	r27, 0xFE	; 254
    329e:	fe 01       	movw	r30, r28
    32a0:	ef 58       	subi	r30, 0x8F	; 143
    32a2:	fe 4f       	sbci	r31, 0xFE	; 254
    32a4:	80 81       	ld	r24, Z
    32a6:	91 81       	ldd	r25, Z+1	; 0x01
    32a8:	01 97       	sbiw	r24, 0x01	; 1
    32aa:	11 96       	adiw	r26, 0x01	; 1
    32ac:	9c 93       	st	X, r25
    32ae:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    32b0:	fe 01       	movw	r30, r28
    32b2:	ef 58       	subi	r30, 0x8F	; 143
    32b4:	fe 4f       	sbci	r31, 0xFE	; 254
    32b6:	80 81       	ld	r24, Z
    32b8:	91 81       	ldd	r25, Z+1	; 0x01
    32ba:	00 97       	sbiw	r24, 0x00	; 0
    32bc:	d1 f6       	brne	.-76     	; 0x3272 <main+0x758>
    32be:	27 c0       	rjmp	.+78     	; 0x330e <main+0x7f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    32c0:	8e 01       	movw	r16, r28
    32c2:	0f 58       	subi	r16, 0x8F	; 143
    32c4:	1e 4f       	sbci	r17, 0xFE	; 254
    32c6:	fe 01       	movw	r30, r28
    32c8:	ed 58       	subi	r30, 0x8D	; 141
    32ca:	fe 4f       	sbci	r31, 0xFE	; 254
    32cc:	60 81       	ld	r22, Z
    32ce:	71 81       	ldd	r23, Z+1	; 0x01
    32d0:	82 81       	ldd	r24, Z+2	; 0x02
    32d2:	93 81       	ldd	r25, Z+3	; 0x03
    32d4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    32d8:	dc 01       	movw	r26, r24
    32da:	cb 01       	movw	r24, r22
    32dc:	f8 01       	movw	r30, r16
    32de:	91 83       	std	Z+1, r25	; 0x01
    32e0:	80 83       	st	Z, r24
    32e2:	de 01       	movw	r26, r28
    32e4:	a3 59       	subi	r26, 0x93	; 147
    32e6:	be 4f       	sbci	r27, 0xFE	; 254
    32e8:	fe 01       	movw	r30, r28
    32ea:	ef 58       	subi	r30, 0x8F	; 143
    32ec:	fe 4f       	sbci	r31, 0xFE	; 254
    32ee:	80 81       	ld	r24, Z
    32f0:	91 81       	ldd	r25, Z+1	; 0x01
    32f2:	8d 93       	st	X+, r24
    32f4:	9c 93       	st	X, r25
    32f6:	fe 01       	movw	r30, r28
    32f8:	e3 59       	subi	r30, 0x93	; 147
    32fa:	fe 4f       	sbci	r31, 0xFE	; 254
    32fc:	80 81       	ld	r24, Z
    32fe:	91 81       	ldd	r25, Z+1	; 0x01
    3300:	01 97       	sbiw	r24, 0x01	; 1
    3302:	f1 f7       	brne	.-4      	; 0x3300 <main+0x7e6>
    3304:	fe 01       	movw	r30, r28
    3306:	e3 59       	subi	r30, 0x93	; 147
    3308:	fe 4f       	sbci	r31, 0xFE	; 254
    330a:	91 83       	std	Z+1, r25	; 0x01
    330c:	80 83       	st	Z, r24
			_delay_ms(1000);
			LCD_Clear();
    330e:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
			LCD_SendString("1-clock 2-stop w");
    3312:	84 e9       	ldi	r24, 0x94	; 148
    3314:	90 e0       	ldi	r25, 0x00	; 0
    3316:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
			LCD_GoTO(2, 0);
    331a:	82 e0       	ldi	r24, 0x02	; 2
    331c:	60 e0       	ldi	r22, 0x00	; 0
    331e:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <LCD_GoTO>
			LCD_SendString("3-timer 4-calc");
    3322:	85 ea       	ldi	r24, 0xA5	; 165
    3324:	90 e0       	ldi	r25, 0x00	; 0
    3326:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
			LCD_GoTO(2, 14);
    332a:	82 e0       	ldi	r24, 0x02	; 2
    332c:	6e e0       	ldi	r22, 0x0E	; 14
    332e:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <LCD_GoTO>
    3332:	42 ce       	rjmp	.-892    	; 0x2fb8 <main+0x49e>

if (mode==1)
{
	while(1)
	{
		LCD_Clear();
    3334:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
		Keypad_Inti();
    3338:	0e 94 69 10 	call	0x20d2	; 0x20d2 <Keypad_Inti>
	SetPort_Dir(DIO_PORTA, PORT_OUT);
    333c:	80 e0       	ldi	r24, 0x00	; 0
    333e:	6f ef       	ldi	r22, 0xFF	; 255
    3340:	0e 94 80 06 	call	0xd00	; 0xd00 <SetPort_Dir>
	SetPort_Dir(DIO_PORTC, PORT_OUT);
    3344:	82 e0       	ldi	r24, 0x02	; 2
    3346:	6f ef       	ldi	r22, 0xFF	; 255
    3348:	0e 94 80 06 	call	0xd00	; 0xd00 <SetPort_Dir>
	SetPort_Dir(DIO_PORTD, PORT_OUT);
    334c:	83 e0       	ldi	r24, 0x03	; 3
    334e:	6f ef       	ldi	r22, 0xFF	; 255
    3350:	0e 94 80 06 	call	0xd00	; 0xd00 <SetPort_Dir>
	u8 hour_1=Set_hour();
    3354:	0e 94 8e 11 	call	0x231c	; 0x231c <Set_hour>
    3358:	fe 01       	movw	r30, r28
    335a:	e9 53       	subi	r30, 0x39	; 57
    335c:	fe 4f       	sbci	r31, 0xFE	; 254
    335e:	80 83       	st	Z, r24
	u8 minute_1=Set_minute();
    3360:	0e 94 e5 12 	call	0x25ca	; 0x25ca <Set_minute>
    3364:	fe 01       	movw	r30, r28
    3366:	ea 53       	subi	r30, 0x3A	; 58
    3368:	fe 4f       	sbci	r31, 0xFE	; 254
    336a:	80 83       	st	Z, r24
	u8 second_1=Set_second();
    336c:	0e 94 39 14 	call	0x2872	; 0x2872 <Set_second>
    3370:	fe 01       	movw	r30, r28
    3372:	eb 53       	subi	r30, 0x3B	; 59
    3374:	fe 4f       	sbci	r31, 0xFE	; 254
    3376:	80 83       	st	Z, r24

	LCD_SendString("to set clock ");
    3378:	84 ed       	ldi	r24, 0xD4	; 212
    337a:	90 e0       	ldi	r25, 0x00	; 0
    337c:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
	LCD_GoTO(2, 0);
    3380:	82 e0       	ldi	r24, 0x02	; 2
    3382:	60 e0       	ldi	r22, 0x00	; 0
    3384:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <LCD_GoTO>
	LCD_SendString("press button(1) :) ");
    3388:	82 ee       	ldi	r24, 0xE2	; 226
    338a:	90 e0       	ldi	r25, 0x00	; 0
    338c:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>

	while(1)
		{
		for(u8 hour =hour_1;(hour<=12)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;hour++)
    3390:	fe 01       	movw	r30, r28
    3392:	ec 53       	subi	r30, 0x3C	; 60
    3394:	fe 4f       	sbci	r31, 0xFE	; 254
    3396:	de 01       	movw	r26, r28
    3398:	a9 53       	subi	r26, 0x39	; 57
    339a:	be 4f       	sbci	r27, 0xFE	; 254
    339c:	8c 91       	ld	r24, X
    339e:	80 83       	st	Z, r24
    33a0:	bb c5       	rjmp	.+2934   	; 0x3f18 <main+0x13fe>
			{
			for( u8 minute =minute_1;(minute<60)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;minute++)
    33a2:	fe 01       	movw	r30, r28
    33a4:	ed 53       	subi	r30, 0x3D	; 61
    33a6:	fe 4f       	sbci	r31, 0xFE	; 254
    33a8:	de 01       	movw	r26, r28
    33aa:	aa 53       	subi	r26, 0x3A	; 58
    33ac:	be 4f       	sbci	r27, 0xFE	; 254
    33ae:	8c 91       	ld	r24, X
    33b0:	80 83       	st	Z, r24
    33b2:	9c c5       	rjmp	.+2872   	; 0x3eec <main+0x13d2>
				{
				for( u8 second =second_1;(second<60)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;second++)
    33b4:	fe 01       	movw	r30, r28
    33b6:	ee 53       	subi	r30, 0x3E	; 62
    33b8:	fe 4f       	sbci	r31, 0xFE	; 254
    33ba:	de 01       	movw	r26, r28
    33bc:	ab 53       	subi	r26, 0x3B	; 59
    33be:	be 4f       	sbci	r27, 0xFE	; 254
    33c0:	8c 91       	ld	r24, X
    33c2:	80 83       	st	Z, r24
    33c4:	79 c5       	rjmp	.+2802   	; 0x3eb8 <main+0x139e>
					{
							int n=20;
    33c6:	fe 01       	movw	r30, r28
    33c8:	e0 54       	subi	r30, 0x40	; 64
    33ca:	fe 4f       	sbci	r31, 0xFE	; 254
    33cc:	84 e1       	ldi	r24, 0x14	; 20
    33ce:	90 e0       	ldi	r25, 0x00	; 0
    33d0:	91 83       	std	Z+1, r25	; 0x01
    33d2:	80 83       	st	Z, r24
    33d4:	3e c5       	rjmp	.+2684   	; 0x3e52 <main+0x1338>
								while (n--)
								{
									SetPin_Val(DIO_PORTD, DIO_PIN3, PIN_HIGH);
    33d6:	83 e0       	ldi	r24, 0x03	; 3
    33d8:	63 e0       	ldi	r22, 0x03	; 3
    33da:	41 e0       	ldi	r20, 0x01	; 1
    33dc:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN4, PIN_HIGH);
    33e0:	83 e0       	ldi	r24, 0x03	; 3
    33e2:	64 e0       	ldi	r22, 0x04	; 4
    33e4:	41 e0       	ldi	r20, 0x01	; 1
    33e6:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_HIGH);
    33ea:	83 e0       	ldi	r24, 0x03	; 3
    33ec:	65 e0       	ldi	r22, 0x05	; 5
    33ee:	41 e0       	ldi	r20, 0x01	; 1
    33f0:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_HIGH);
    33f4:	83 e0       	ldi	r24, 0x03	; 3
    33f6:	65 e0       	ldi	r22, 0x05	; 5
    33f8:	41 e0       	ldi	r20, 0x01	; 1
    33fa:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN7, PIN_HIGH);
    33fe:	83 e0       	ldi	r24, 0x03	; 3
    3400:	67 e0       	ldi	r22, 0x07	; 7
    3402:	41 e0       	ldi	r20, 0x01	; 1
    3404:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN2, PIN_LOW);
    3408:	83 e0       	ldi	r24, 0x03	; 3
    340a:	62 e0       	ldi	r22, 0x02	; 2
    340c:	40 e0       	ldi	r20, 0x00	; 0
    340e:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									PORTA=seg(second%10);
    3412:	0b e3       	ldi	r16, 0x3B	; 59
    3414:	10 e0       	ldi	r17, 0x00	; 0
    3416:	fe 01       	movw	r30, r28
    3418:	ee 53       	subi	r30, 0x3E	; 62
    341a:	fe 4f       	sbci	r31, 0xFE	; 254
    341c:	80 81       	ld	r24, Z
    341e:	9a e0       	ldi	r25, 0x0A	; 10
    3420:	69 2f       	mov	r22, r25
    3422:	0e 94 87 33 	call	0x670e	; 0x670e <__udivmodqi4>
    3426:	89 2f       	mov	r24, r25
    3428:	0e 94 8e 0a 	call	0x151c	; 0x151c <seg>
    342c:	f8 01       	movw	r30, r16
    342e:	80 83       	st	Z, r24
    3430:	fe 01       	movw	r30, r28
    3432:	e7 59       	subi	r30, 0x97	; 151
    3434:	fe 4f       	sbci	r31, 0xFE	; 254
    3436:	80 e0       	ldi	r24, 0x00	; 0
    3438:	90 e0       	ldi	r25, 0x00	; 0
    343a:	a0 e0       	ldi	r26, 0x00	; 0
    343c:	b1 e4       	ldi	r27, 0x41	; 65
    343e:	80 83       	st	Z, r24
    3440:	91 83       	std	Z+1, r25	; 0x01
    3442:	a2 83       	std	Z+2, r26	; 0x02
    3444:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3446:	8e 01       	movw	r16, r28
    3448:	0b 59       	subi	r16, 0x9B	; 155
    344a:	1e 4f       	sbci	r17, 0xFE	; 254
    344c:	fe 01       	movw	r30, r28
    344e:	e7 59       	subi	r30, 0x97	; 151
    3450:	fe 4f       	sbci	r31, 0xFE	; 254
    3452:	60 81       	ld	r22, Z
    3454:	71 81       	ldd	r23, Z+1	; 0x01
    3456:	82 81       	ldd	r24, Z+2	; 0x02
    3458:	93 81       	ldd	r25, Z+3	; 0x03
    345a:	20 e0       	ldi	r18, 0x00	; 0
    345c:	30 e0       	ldi	r19, 0x00	; 0
    345e:	4a ef       	ldi	r20, 0xFA	; 250
    3460:	54 e4       	ldi	r21, 0x44	; 68
    3462:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3466:	dc 01       	movw	r26, r24
    3468:	cb 01       	movw	r24, r22
    346a:	f8 01       	movw	r30, r16
    346c:	80 83       	st	Z, r24
    346e:	91 83       	std	Z+1, r25	; 0x01
    3470:	a2 83       	std	Z+2, r26	; 0x02
    3472:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3474:	fe 01       	movw	r30, r28
    3476:	eb 59       	subi	r30, 0x9B	; 155
    3478:	fe 4f       	sbci	r31, 0xFE	; 254
    347a:	60 81       	ld	r22, Z
    347c:	71 81       	ldd	r23, Z+1	; 0x01
    347e:	82 81       	ldd	r24, Z+2	; 0x02
    3480:	93 81       	ldd	r25, Z+3	; 0x03
    3482:	20 e0       	ldi	r18, 0x00	; 0
    3484:	30 e0       	ldi	r19, 0x00	; 0
    3486:	40 e8       	ldi	r20, 0x80	; 128
    3488:	5f e3       	ldi	r21, 0x3F	; 63
    348a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    348e:	88 23       	and	r24, r24
    3490:	44 f4       	brge	.+16     	; 0x34a2 <main+0x988>
		__ticks = 1;
    3492:	fe 01       	movw	r30, r28
    3494:	ed 59       	subi	r30, 0x9D	; 157
    3496:	fe 4f       	sbci	r31, 0xFE	; 254
    3498:	81 e0       	ldi	r24, 0x01	; 1
    349a:	90 e0       	ldi	r25, 0x00	; 0
    349c:	91 83       	std	Z+1, r25	; 0x01
    349e:	80 83       	st	Z, r24
    34a0:	64 c0       	rjmp	.+200    	; 0x356a <main+0xa50>
	else if (__tmp > 65535)
    34a2:	fe 01       	movw	r30, r28
    34a4:	eb 59       	subi	r30, 0x9B	; 155
    34a6:	fe 4f       	sbci	r31, 0xFE	; 254
    34a8:	60 81       	ld	r22, Z
    34aa:	71 81       	ldd	r23, Z+1	; 0x01
    34ac:	82 81       	ldd	r24, Z+2	; 0x02
    34ae:	93 81       	ldd	r25, Z+3	; 0x03
    34b0:	20 e0       	ldi	r18, 0x00	; 0
    34b2:	3f ef       	ldi	r19, 0xFF	; 255
    34b4:	4f e7       	ldi	r20, 0x7F	; 127
    34b6:	57 e4       	ldi	r21, 0x47	; 71
    34b8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    34bc:	18 16       	cp	r1, r24
    34be:	0c f0       	brlt	.+2      	; 0x34c2 <main+0x9a8>
    34c0:	43 c0       	rjmp	.+134    	; 0x3548 <main+0xa2e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34c2:	fe 01       	movw	r30, r28
    34c4:	e7 59       	subi	r30, 0x97	; 151
    34c6:	fe 4f       	sbci	r31, 0xFE	; 254
    34c8:	60 81       	ld	r22, Z
    34ca:	71 81       	ldd	r23, Z+1	; 0x01
    34cc:	82 81       	ldd	r24, Z+2	; 0x02
    34ce:	93 81       	ldd	r25, Z+3	; 0x03
    34d0:	20 e0       	ldi	r18, 0x00	; 0
    34d2:	30 e0       	ldi	r19, 0x00	; 0
    34d4:	40 e2       	ldi	r20, 0x20	; 32
    34d6:	51 e4       	ldi	r21, 0x41	; 65
    34d8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    34dc:	dc 01       	movw	r26, r24
    34de:	cb 01       	movw	r24, r22
    34e0:	8e 01       	movw	r16, r28
    34e2:	0d 59       	subi	r16, 0x9D	; 157
    34e4:	1e 4f       	sbci	r17, 0xFE	; 254
    34e6:	bc 01       	movw	r22, r24
    34e8:	cd 01       	movw	r24, r26
    34ea:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    34ee:	dc 01       	movw	r26, r24
    34f0:	cb 01       	movw	r24, r22
    34f2:	f8 01       	movw	r30, r16
    34f4:	91 83       	std	Z+1, r25	; 0x01
    34f6:	80 83       	st	Z, r24
    34f8:	1f c0       	rjmp	.+62     	; 0x3538 <main+0xa1e>
    34fa:	fe 01       	movw	r30, r28
    34fc:	ef 59       	subi	r30, 0x9F	; 159
    34fe:	fe 4f       	sbci	r31, 0xFE	; 254
    3500:	88 ec       	ldi	r24, 0xC8	; 200
    3502:	90 e0       	ldi	r25, 0x00	; 0
    3504:	91 83       	std	Z+1, r25	; 0x01
    3506:	80 83       	st	Z, r24
    3508:	fe 01       	movw	r30, r28
    350a:	ef 59       	subi	r30, 0x9F	; 159
    350c:	fe 4f       	sbci	r31, 0xFE	; 254
    350e:	80 81       	ld	r24, Z
    3510:	91 81       	ldd	r25, Z+1	; 0x01
    3512:	01 97       	sbiw	r24, 0x01	; 1
    3514:	f1 f7       	brne	.-4      	; 0x3512 <main+0x9f8>
    3516:	fe 01       	movw	r30, r28
    3518:	ef 59       	subi	r30, 0x9F	; 159
    351a:	fe 4f       	sbci	r31, 0xFE	; 254
    351c:	91 83       	std	Z+1, r25	; 0x01
    351e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3520:	de 01       	movw	r26, r28
    3522:	ad 59       	subi	r26, 0x9D	; 157
    3524:	be 4f       	sbci	r27, 0xFE	; 254
    3526:	fe 01       	movw	r30, r28
    3528:	ed 59       	subi	r30, 0x9D	; 157
    352a:	fe 4f       	sbci	r31, 0xFE	; 254
    352c:	80 81       	ld	r24, Z
    352e:	91 81       	ldd	r25, Z+1	; 0x01
    3530:	01 97       	sbiw	r24, 0x01	; 1
    3532:	11 96       	adiw	r26, 0x01	; 1
    3534:	9c 93       	st	X, r25
    3536:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3538:	fe 01       	movw	r30, r28
    353a:	ed 59       	subi	r30, 0x9D	; 157
    353c:	fe 4f       	sbci	r31, 0xFE	; 254
    353e:	80 81       	ld	r24, Z
    3540:	91 81       	ldd	r25, Z+1	; 0x01
    3542:	00 97       	sbiw	r24, 0x00	; 0
    3544:	d1 f6       	brne	.-76     	; 0x34fa <main+0x9e0>
    3546:	27 c0       	rjmp	.+78     	; 0x3596 <main+0xa7c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3548:	8e 01       	movw	r16, r28
    354a:	0d 59       	subi	r16, 0x9D	; 157
    354c:	1e 4f       	sbci	r17, 0xFE	; 254
    354e:	fe 01       	movw	r30, r28
    3550:	eb 59       	subi	r30, 0x9B	; 155
    3552:	fe 4f       	sbci	r31, 0xFE	; 254
    3554:	60 81       	ld	r22, Z
    3556:	71 81       	ldd	r23, Z+1	; 0x01
    3558:	82 81       	ldd	r24, Z+2	; 0x02
    355a:	93 81       	ldd	r25, Z+3	; 0x03
    355c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3560:	dc 01       	movw	r26, r24
    3562:	cb 01       	movw	r24, r22
    3564:	f8 01       	movw	r30, r16
    3566:	91 83       	std	Z+1, r25	; 0x01
    3568:	80 83       	st	Z, r24
    356a:	de 01       	movw	r26, r28
    356c:	a1 5a       	subi	r26, 0xA1	; 161
    356e:	be 4f       	sbci	r27, 0xFE	; 254
    3570:	fe 01       	movw	r30, r28
    3572:	ed 59       	subi	r30, 0x9D	; 157
    3574:	fe 4f       	sbci	r31, 0xFE	; 254
    3576:	80 81       	ld	r24, Z
    3578:	91 81       	ldd	r25, Z+1	; 0x01
    357a:	8d 93       	st	X+, r24
    357c:	9c 93       	st	X, r25
    357e:	fe 01       	movw	r30, r28
    3580:	e1 5a       	subi	r30, 0xA1	; 161
    3582:	fe 4f       	sbci	r31, 0xFE	; 254
    3584:	80 81       	ld	r24, Z
    3586:	91 81       	ldd	r25, Z+1	; 0x01
    3588:	01 97       	sbiw	r24, 0x01	; 1
    358a:	f1 f7       	brne	.-4      	; 0x3588 <main+0xa6e>
    358c:	fe 01       	movw	r30, r28
    358e:	e1 5a       	subi	r30, 0xA1	; 161
    3590:	fe 4f       	sbci	r31, 0xFE	; 254
    3592:	91 83       	std	Z+1, r25	; 0x01
    3594:	80 83       	st	Z, r24
									_delay_ms(50/6);
									SetPin_Val(DIO_PORTD, DIO_PIN2, PIN_HIGH);
    3596:	83 e0       	ldi	r24, 0x03	; 3
    3598:	62 e0       	ldi	r22, 0x02	; 2
    359a:	41 e0       	ldi	r20, 0x01	; 1
    359c:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN4, PIN_HIGH);
    35a0:	83 e0       	ldi	r24, 0x03	; 3
    35a2:	64 e0       	ldi	r22, 0x04	; 4
    35a4:	41 e0       	ldi	r20, 0x01	; 1
    35a6:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_HIGH);
    35aa:	83 e0       	ldi	r24, 0x03	; 3
    35ac:	65 e0       	ldi	r22, 0x05	; 5
    35ae:	41 e0       	ldi	r20, 0x01	; 1
    35b0:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN6, PIN_HIGH);
    35b4:	83 e0       	ldi	r24, 0x03	; 3
    35b6:	66 e0       	ldi	r22, 0x06	; 6
    35b8:	41 e0       	ldi	r20, 0x01	; 1
    35ba:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN7, PIN_HIGH);
    35be:	83 e0       	ldi	r24, 0x03	; 3
    35c0:	67 e0       	ldi	r22, 0x07	; 7
    35c2:	41 e0       	ldi	r20, 0x01	; 1
    35c4:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN3, PIN_LOW);
    35c8:	83 e0       	ldi	r24, 0x03	; 3
    35ca:	63 e0       	ldi	r22, 0x03	; 3
    35cc:	40 e0       	ldi	r20, 0x00	; 0
    35ce:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									PORTA=seg(second/10);
    35d2:	0b e3       	ldi	r16, 0x3B	; 59
    35d4:	10 e0       	ldi	r17, 0x00	; 0
    35d6:	fe 01       	movw	r30, r28
    35d8:	ee 53       	subi	r30, 0x3E	; 62
    35da:	fe 4f       	sbci	r31, 0xFE	; 254
    35dc:	80 81       	ld	r24, Z
    35de:	9a e0       	ldi	r25, 0x0A	; 10
    35e0:	69 2f       	mov	r22, r25
    35e2:	0e 94 87 33 	call	0x670e	; 0x670e <__udivmodqi4>
    35e6:	0e 94 8e 0a 	call	0x151c	; 0x151c <seg>
    35ea:	f8 01       	movw	r30, r16
    35ec:	80 83       	st	Z, r24
    35ee:	fe 01       	movw	r30, r28
    35f0:	e5 5a       	subi	r30, 0xA5	; 165
    35f2:	fe 4f       	sbci	r31, 0xFE	; 254
    35f4:	80 e0       	ldi	r24, 0x00	; 0
    35f6:	90 e0       	ldi	r25, 0x00	; 0
    35f8:	a0 e0       	ldi	r26, 0x00	; 0
    35fa:	b1 e4       	ldi	r27, 0x41	; 65
    35fc:	80 83       	st	Z, r24
    35fe:	91 83       	std	Z+1, r25	; 0x01
    3600:	a2 83       	std	Z+2, r26	; 0x02
    3602:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3604:	8e 01       	movw	r16, r28
    3606:	09 5a       	subi	r16, 0xA9	; 169
    3608:	1e 4f       	sbci	r17, 0xFE	; 254
    360a:	fe 01       	movw	r30, r28
    360c:	e5 5a       	subi	r30, 0xA5	; 165
    360e:	fe 4f       	sbci	r31, 0xFE	; 254
    3610:	60 81       	ld	r22, Z
    3612:	71 81       	ldd	r23, Z+1	; 0x01
    3614:	82 81       	ldd	r24, Z+2	; 0x02
    3616:	93 81       	ldd	r25, Z+3	; 0x03
    3618:	20 e0       	ldi	r18, 0x00	; 0
    361a:	30 e0       	ldi	r19, 0x00	; 0
    361c:	4a ef       	ldi	r20, 0xFA	; 250
    361e:	54 e4       	ldi	r21, 0x44	; 68
    3620:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3624:	dc 01       	movw	r26, r24
    3626:	cb 01       	movw	r24, r22
    3628:	f8 01       	movw	r30, r16
    362a:	80 83       	st	Z, r24
    362c:	91 83       	std	Z+1, r25	; 0x01
    362e:	a2 83       	std	Z+2, r26	; 0x02
    3630:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3632:	fe 01       	movw	r30, r28
    3634:	e9 5a       	subi	r30, 0xA9	; 169
    3636:	fe 4f       	sbci	r31, 0xFE	; 254
    3638:	60 81       	ld	r22, Z
    363a:	71 81       	ldd	r23, Z+1	; 0x01
    363c:	82 81       	ldd	r24, Z+2	; 0x02
    363e:	93 81       	ldd	r25, Z+3	; 0x03
    3640:	20 e0       	ldi	r18, 0x00	; 0
    3642:	30 e0       	ldi	r19, 0x00	; 0
    3644:	40 e8       	ldi	r20, 0x80	; 128
    3646:	5f e3       	ldi	r21, 0x3F	; 63
    3648:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    364c:	88 23       	and	r24, r24
    364e:	44 f4       	brge	.+16     	; 0x3660 <main+0xb46>
		__ticks = 1;
    3650:	fe 01       	movw	r30, r28
    3652:	eb 5a       	subi	r30, 0xAB	; 171
    3654:	fe 4f       	sbci	r31, 0xFE	; 254
    3656:	81 e0       	ldi	r24, 0x01	; 1
    3658:	90 e0       	ldi	r25, 0x00	; 0
    365a:	91 83       	std	Z+1, r25	; 0x01
    365c:	80 83       	st	Z, r24
    365e:	64 c0       	rjmp	.+200    	; 0x3728 <main+0xc0e>
	else if (__tmp > 65535)
    3660:	fe 01       	movw	r30, r28
    3662:	e9 5a       	subi	r30, 0xA9	; 169
    3664:	fe 4f       	sbci	r31, 0xFE	; 254
    3666:	60 81       	ld	r22, Z
    3668:	71 81       	ldd	r23, Z+1	; 0x01
    366a:	82 81       	ldd	r24, Z+2	; 0x02
    366c:	93 81       	ldd	r25, Z+3	; 0x03
    366e:	20 e0       	ldi	r18, 0x00	; 0
    3670:	3f ef       	ldi	r19, 0xFF	; 255
    3672:	4f e7       	ldi	r20, 0x7F	; 127
    3674:	57 e4       	ldi	r21, 0x47	; 71
    3676:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    367a:	18 16       	cp	r1, r24
    367c:	0c f0       	brlt	.+2      	; 0x3680 <main+0xb66>
    367e:	43 c0       	rjmp	.+134    	; 0x3706 <main+0xbec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3680:	fe 01       	movw	r30, r28
    3682:	e5 5a       	subi	r30, 0xA5	; 165
    3684:	fe 4f       	sbci	r31, 0xFE	; 254
    3686:	60 81       	ld	r22, Z
    3688:	71 81       	ldd	r23, Z+1	; 0x01
    368a:	82 81       	ldd	r24, Z+2	; 0x02
    368c:	93 81       	ldd	r25, Z+3	; 0x03
    368e:	20 e0       	ldi	r18, 0x00	; 0
    3690:	30 e0       	ldi	r19, 0x00	; 0
    3692:	40 e2       	ldi	r20, 0x20	; 32
    3694:	51 e4       	ldi	r21, 0x41	; 65
    3696:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    369a:	dc 01       	movw	r26, r24
    369c:	cb 01       	movw	r24, r22
    369e:	8e 01       	movw	r16, r28
    36a0:	0b 5a       	subi	r16, 0xAB	; 171
    36a2:	1e 4f       	sbci	r17, 0xFE	; 254
    36a4:	bc 01       	movw	r22, r24
    36a6:	cd 01       	movw	r24, r26
    36a8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    36ac:	dc 01       	movw	r26, r24
    36ae:	cb 01       	movw	r24, r22
    36b0:	f8 01       	movw	r30, r16
    36b2:	91 83       	std	Z+1, r25	; 0x01
    36b4:	80 83       	st	Z, r24
    36b6:	1f c0       	rjmp	.+62     	; 0x36f6 <main+0xbdc>
    36b8:	fe 01       	movw	r30, r28
    36ba:	ed 5a       	subi	r30, 0xAD	; 173
    36bc:	fe 4f       	sbci	r31, 0xFE	; 254
    36be:	88 ec       	ldi	r24, 0xC8	; 200
    36c0:	90 e0       	ldi	r25, 0x00	; 0
    36c2:	91 83       	std	Z+1, r25	; 0x01
    36c4:	80 83       	st	Z, r24
    36c6:	fe 01       	movw	r30, r28
    36c8:	ed 5a       	subi	r30, 0xAD	; 173
    36ca:	fe 4f       	sbci	r31, 0xFE	; 254
    36cc:	80 81       	ld	r24, Z
    36ce:	91 81       	ldd	r25, Z+1	; 0x01
    36d0:	01 97       	sbiw	r24, 0x01	; 1
    36d2:	f1 f7       	brne	.-4      	; 0x36d0 <main+0xbb6>
    36d4:	fe 01       	movw	r30, r28
    36d6:	ed 5a       	subi	r30, 0xAD	; 173
    36d8:	fe 4f       	sbci	r31, 0xFE	; 254
    36da:	91 83       	std	Z+1, r25	; 0x01
    36dc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    36de:	de 01       	movw	r26, r28
    36e0:	ab 5a       	subi	r26, 0xAB	; 171
    36e2:	be 4f       	sbci	r27, 0xFE	; 254
    36e4:	fe 01       	movw	r30, r28
    36e6:	eb 5a       	subi	r30, 0xAB	; 171
    36e8:	fe 4f       	sbci	r31, 0xFE	; 254
    36ea:	80 81       	ld	r24, Z
    36ec:	91 81       	ldd	r25, Z+1	; 0x01
    36ee:	01 97       	sbiw	r24, 0x01	; 1
    36f0:	11 96       	adiw	r26, 0x01	; 1
    36f2:	9c 93       	st	X, r25
    36f4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    36f6:	fe 01       	movw	r30, r28
    36f8:	eb 5a       	subi	r30, 0xAB	; 171
    36fa:	fe 4f       	sbci	r31, 0xFE	; 254
    36fc:	80 81       	ld	r24, Z
    36fe:	91 81       	ldd	r25, Z+1	; 0x01
    3700:	00 97       	sbiw	r24, 0x00	; 0
    3702:	d1 f6       	brne	.-76     	; 0x36b8 <main+0xb9e>
    3704:	27 c0       	rjmp	.+78     	; 0x3754 <main+0xc3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3706:	8e 01       	movw	r16, r28
    3708:	0b 5a       	subi	r16, 0xAB	; 171
    370a:	1e 4f       	sbci	r17, 0xFE	; 254
    370c:	fe 01       	movw	r30, r28
    370e:	e9 5a       	subi	r30, 0xA9	; 169
    3710:	fe 4f       	sbci	r31, 0xFE	; 254
    3712:	60 81       	ld	r22, Z
    3714:	71 81       	ldd	r23, Z+1	; 0x01
    3716:	82 81       	ldd	r24, Z+2	; 0x02
    3718:	93 81       	ldd	r25, Z+3	; 0x03
    371a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    371e:	dc 01       	movw	r26, r24
    3720:	cb 01       	movw	r24, r22
    3722:	f8 01       	movw	r30, r16
    3724:	91 83       	std	Z+1, r25	; 0x01
    3726:	80 83       	st	Z, r24
    3728:	de 01       	movw	r26, r28
    372a:	af 5a       	subi	r26, 0xAF	; 175
    372c:	be 4f       	sbci	r27, 0xFE	; 254
    372e:	fe 01       	movw	r30, r28
    3730:	eb 5a       	subi	r30, 0xAB	; 171
    3732:	fe 4f       	sbci	r31, 0xFE	; 254
    3734:	80 81       	ld	r24, Z
    3736:	91 81       	ldd	r25, Z+1	; 0x01
    3738:	8d 93       	st	X+, r24
    373a:	9c 93       	st	X, r25
    373c:	fe 01       	movw	r30, r28
    373e:	ef 5a       	subi	r30, 0xAF	; 175
    3740:	fe 4f       	sbci	r31, 0xFE	; 254
    3742:	80 81       	ld	r24, Z
    3744:	91 81       	ldd	r25, Z+1	; 0x01
    3746:	01 97       	sbiw	r24, 0x01	; 1
    3748:	f1 f7       	brne	.-4      	; 0x3746 <main+0xc2c>
    374a:	fe 01       	movw	r30, r28
    374c:	ef 5a       	subi	r30, 0xAF	; 175
    374e:	fe 4f       	sbci	r31, 0xFE	; 254
    3750:	91 83       	std	Z+1, r25	; 0x01
    3752:	80 83       	st	Z, r24
									_delay_ms(50/6);
									SetPin_Val(DIO_PORTD, DIO_PIN2, PIN_HIGH);
    3754:	83 e0       	ldi	r24, 0x03	; 3
    3756:	62 e0       	ldi	r22, 0x02	; 2
    3758:	41 e0       	ldi	r20, 0x01	; 1
    375a:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN3, PIN_HIGH);
    375e:	83 e0       	ldi	r24, 0x03	; 3
    3760:	63 e0       	ldi	r22, 0x03	; 3
    3762:	41 e0       	ldi	r20, 0x01	; 1
    3764:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_HIGH);
    3768:	83 e0       	ldi	r24, 0x03	; 3
    376a:	65 e0       	ldi	r22, 0x05	; 5
    376c:	41 e0       	ldi	r20, 0x01	; 1
    376e:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN6, PIN_HIGH);
    3772:	83 e0       	ldi	r24, 0x03	; 3
    3774:	66 e0       	ldi	r22, 0x06	; 6
    3776:	41 e0       	ldi	r20, 0x01	; 1
    3778:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN7, PIN_HIGH);
    377c:	83 e0       	ldi	r24, 0x03	; 3
    377e:	67 e0       	ldi	r22, 0x07	; 7
    3780:	41 e0       	ldi	r20, 0x01	; 1
    3782:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN4, PIN_LOW);
    3786:	83 e0       	ldi	r24, 0x03	; 3
    3788:	64 e0       	ldi	r22, 0x04	; 4
    378a:	40 e0       	ldi	r20, 0x00	; 0
    378c:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									PORTA=seg(minute%10);
    3790:	0b e3       	ldi	r16, 0x3B	; 59
    3792:	10 e0       	ldi	r17, 0x00	; 0
    3794:	fe 01       	movw	r30, r28
    3796:	ed 53       	subi	r30, 0x3D	; 61
    3798:	fe 4f       	sbci	r31, 0xFE	; 254
    379a:	80 81       	ld	r24, Z
    379c:	9a e0       	ldi	r25, 0x0A	; 10
    379e:	69 2f       	mov	r22, r25
    37a0:	0e 94 87 33 	call	0x670e	; 0x670e <__udivmodqi4>
    37a4:	89 2f       	mov	r24, r25
    37a6:	0e 94 8e 0a 	call	0x151c	; 0x151c <seg>
    37aa:	f8 01       	movw	r30, r16
    37ac:	80 83       	st	Z, r24
    37ae:	fe 01       	movw	r30, r28
    37b0:	e3 5b       	subi	r30, 0xB3	; 179
    37b2:	fe 4f       	sbci	r31, 0xFE	; 254
    37b4:	80 e0       	ldi	r24, 0x00	; 0
    37b6:	90 e0       	ldi	r25, 0x00	; 0
    37b8:	a0 e0       	ldi	r26, 0x00	; 0
    37ba:	b1 e4       	ldi	r27, 0x41	; 65
    37bc:	80 83       	st	Z, r24
    37be:	91 83       	std	Z+1, r25	; 0x01
    37c0:	a2 83       	std	Z+2, r26	; 0x02
    37c2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    37c4:	8e 01       	movw	r16, r28
    37c6:	07 5b       	subi	r16, 0xB7	; 183
    37c8:	1e 4f       	sbci	r17, 0xFE	; 254
    37ca:	fe 01       	movw	r30, r28
    37cc:	e3 5b       	subi	r30, 0xB3	; 179
    37ce:	fe 4f       	sbci	r31, 0xFE	; 254
    37d0:	60 81       	ld	r22, Z
    37d2:	71 81       	ldd	r23, Z+1	; 0x01
    37d4:	82 81       	ldd	r24, Z+2	; 0x02
    37d6:	93 81       	ldd	r25, Z+3	; 0x03
    37d8:	20 e0       	ldi	r18, 0x00	; 0
    37da:	30 e0       	ldi	r19, 0x00	; 0
    37dc:	4a ef       	ldi	r20, 0xFA	; 250
    37de:	54 e4       	ldi	r21, 0x44	; 68
    37e0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    37e4:	dc 01       	movw	r26, r24
    37e6:	cb 01       	movw	r24, r22
    37e8:	f8 01       	movw	r30, r16
    37ea:	80 83       	st	Z, r24
    37ec:	91 83       	std	Z+1, r25	; 0x01
    37ee:	a2 83       	std	Z+2, r26	; 0x02
    37f0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    37f2:	fe 01       	movw	r30, r28
    37f4:	e7 5b       	subi	r30, 0xB7	; 183
    37f6:	fe 4f       	sbci	r31, 0xFE	; 254
    37f8:	60 81       	ld	r22, Z
    37fa:	71 81       	ldd	r23, Z+1	; 0x01
    37fc:	82 81       	ldd	r24, Z+2	; 0x02
    37fe:	93 81       	ldd	r25, Z+3	; 0x03
    3800:	20 e0       	ldi	r18, 0x00	; 0
    3802:	30 e0       	ldi	r19, 0x00	; 0
    3804:	40 e8       	ldi	r20, 0x80	; 128
    3806:	5f e3       	ldi	r21, 0x3F	; 63
    3808:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    380c:	88 23       	and	r24, r24
    380e:	44 f4       	brge	.+16     	; 0x3820 <main+0xd06>
		__ticks = 1;
    3810:	fe 01       	movw	r30, r28
    3812:	e9 5b       	subi	r30, 0xB9	; 185
    3814:	fe 4f       	sbci	r31, 0xFE	; 254
    3816:	81 e0       	ldi	r24, 0x01	; 1
    3818:	90 e0       	ldi	r25, 0x00	; 0
    381a:	91 83       	std	Z+1, r25	; 0x01
    381c:	80 83       	st	Z, r24
    381e:	64 c0       	rjmp	.+200    	; 0x38e8 <main+0xdce>
	else if (__tmp > 65535)
    3820:	fe 01       	movw	r30, r28
    3822:	e7 5b       	subi	r30, 0xB7	; 183
    3824:	fe 4f       	sbci	r31, 0xFE	; 254
    3826:	60 81       	ld	r22, Z
    3828:	71 81       	ldd	r23, Z+1	; 0x01
    382a:	82 81       	ldd	r24, Z+2	; 0x02
    382c:	93 81       	ldd	r25, Z+3	; 0x03
    382e:	20 e0       	ldi	r18, 0x00	; 0
    3830:	3f ef       	ldi	r19, 0xFF	; 255
    3832:	4f e7       	ldi	r20, 0x7F	; 127
    3834:	57 e4       	ldi	r21, 0x47	; 71
    3836:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    383a:	18 16       	cp	r1, r24
    383c:	0c f0       	brlt	.+2      	; 0x3840 <main+0xd26>
    383e:	43 c0       	rjmp	.+134    	; 0x38c6 <main+0xdac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3840:	fe 01       	movw	r30, r28
    3842:	e3 5b       	subi	r30, 0xB3	; 179
    3844:	fe 4f       	sbci	r31, 0xFE	; 254
    3846:	60 81       	ld	r22, Z
    3848:	71 81       	ldd	r23, Z+1	; 0x01
    384a:	82 81       	ldd	r24, Z+2	; 0x02
    384c:	93 81       	ldd	r25, Z+3	; 0x03
    384e:	20 e0       	ldi	r18, 0x00	; 0
    3850:	30 e0       	ldi	r19, 0x00	; 0
    3852:	40 e2       	ldi	r20, 0x20	; 32
    3854:	51 e4       	ldi	r21, 0x41	; 65
    3856:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    385a:	dc 01       	movw	r26, r24
    385c:	cb 01       	movw	r24, r22
    385e:	8e 01       	movw	r16, r28
    3860:	09 5b       	subi	r16, 0xB9	; 185
    3862:	1e 4f       	sbci	r17, 0xFE	; 254
    3864:	bc 01       	movw	r22, r24
    3866:	cd 01       	movw	r24, r26
    3868:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    386c:	dc 01       	movw	r26, r24
    386e:	cb 01       	movw	r24, r22
    3870:	f8 01       	movw	r30, r16
    3872:	91 83       	std	Z+1, r25	; 0x01
    3874:	80 83       	st	Z, r24
    3876:	1f c0       	rjmp	.+62     	; 0x38b6 <main+0xd9c>
    3878:	fe 01       	movw	r30, r28
    387a:	eb 5b       	subi	r30, 0xBB	; 187
    387c:	fe 4f       	sbci	r31, 0xFE	; 254
    387e:	88 ec       	ldi	r24, 0xC8	; 200
    3880:	90 e0       	ldi	r25, 0x00	; 0
    3882:	91 83       	std	Z+1, r25	; 0x01
    3884:	80 83       	st	Z, r24
    3886:	fe 01       	movw	r30, r28
    3888:	eb 5b       	subi	r30, 0xBB	; 187
    388a:	fe 4f       	sbci	r31, 0xFE	; 254
    388c:	80 81       	ld	r24, Z
    388e:	91 81       	ldd	r25, Z+1	; 0x01
    3890:	01 97       	sbiw	r24, 0x01	; 1
    3892:	f1 f7       	brne	.-4      	; 0x3890 <main+0xd76>
    3894:	fe 01       	movw	r30, r28
    3896:	eb 5b       	subi	r30, 0xBB	; 187
    3898:	fe 4f       	sbci	r31, 0xFE	; 254
    389a:	91 83       	std	Z+1, r25	; 0x01
    389c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    389e:	de 01       	movw	r26, r28
    38a0:	a9 5b       	subi	r26, 0xB9	; 185
    38a2:	be 4f       	sbci	r27, 0xFE	; 254
    38a4:	fe 01       	movw	r30, r28
    38a6:	e9 5b       	subi	r30, 0xB9	; 185
    38a8:	fe 4f       	sbci	r31, 0xFE	; 254
    38aa:	80 81       	ld	r24, Z
    38ac:	91 81       	ldd	r25, Z+1	; 0x01
    38ae:	01 97       	sbiw	r24, 0x01	; 1
    38b0:	11 96       	adiw	r26, 0x01	; 1
    38b2:	9c 93       	st	X, r25
    38b4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    38b6:	fe 01       	movw	r30, r28
    38b8:	e9 5b       	subi	r30, 0xB9	; 185
    38ba:	fe 4f       	sbci	r31, 0xFE	; 254
    38bc:	80 81       	ld	r24, Z
    38be:	91 81       	ldd	r25, Z+1	; 0x01
    38c0:	00 97       	sbiw	r24, 0x00	; 0
    38c2:	d1 f6       	brne	.-76     	; 0x3878 <main+0xd5e>
    38c4:	27 c0       	rjmp	.+78     	; 0x3914 <main+0xdfa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    38c6:	8e 01       	movw	r16, r28
    38c8:	09 5b       	subi	r16, 0xB9	; 185
    38ca:	1e 4f       	sbci	r17, 0xFE	; 254
    38cc:	fe 01       	movw	r30, r28
    38ce:	e7 5b       	subi	r30, 0xB7	; 183
    38d0:	fe 4f       	sbci	r31, 0xFE	; 254
    38d2:	60 81       	ld	r22, Z
    38d4:	71 81       	ldd	r23, Z+1	; 0x01
    38d6:	82 81       	ldd	r24, Z+2	; 0x02
    38d8:	93 81       	ldd	r25, Z+3	; 0x03
    38da:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    38de:	dc 01       	movw	r26, r24
    38e0:	cb 01       	movw	r24, r22
    38e2:	f8 01       	movw	r30, r16
    38e4:	91 83       	std	Z+1, r25	; 0x01
    38e6:	80 83       	st	Z, r24
    38e8:	de 01       	movw	r26, r28
    38ea:	ad 5b       	subi	r26, 0xBD	; 189
    38ec:	be 4f       	sbci	r27, 0xFE	; 254
    38ee:	fe 01       	movw	r30, r28
    38f0:	e9 5b       	subi	r30, 0xB9	; 185
    38f2:	fe 4f       	sbci	r31, 0xFE	; 254
    38f4:	80 81       	ld	r24, Z
    38f6:	91 81       	ldd	r25, Z+1	; 0x01
    38f8:	8d 93       	st	X+, r24
    38fa:	9c 93       	st	X, r25
    38fc:	fe 01       	movw	r30, r28
    38fe:	ed 5b       	subi	r30, 0xBD	; 189
    3900:	fe 4f       	sbci	r31, 0xFE	; 254
    3902:	80 81       	ld	r24, Z
    3904:	91 81       	ldd	r25, Z+1	; 0x01
    3906:	01 97       	sbiw	r24, 0x01	; 1
    3908:	f1 f7       	brne	.-4      	; 0x3906 <main+0xdec>
    390a:	fe 01       	movw	r30, r28
    390c:	ed 5b       	subi	r30, 0xBD	; 189
    390e:	fe 4f       	sbci	r31, 0xFE	; 254
    3910:	91 83       	std	Z+1, r25	; 0x01
    3912:	80 83       	st	Z, r24
									_delay_ms(50/6);
									SetPin_Val(DIO_PORTD, DIO_PIN2, PIN_HIGH);
    3914:	83 e0       	ldi	r24, 0x03	; 3
    3916:	62 e0       	ldi	r22, 0x02	; 2
    3918:	41 e0       	ldi	r20, 0x01	; 1
    391a:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN3, PIN_HIGH);
    391e:	83 e0       	ldi	r24, 0x03	; 3
    3920:	63 e0       	ldi	r22, 0x03	; 3
    3922:	41 e0       	ldi	r20, 0x01	; 1
    3924:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN4, PIN_HIGH);
    3928:	83 e0       	ldi	r24, 0x03	; 3
    392a:	64 e0       	ldi	r22, 0x04	; 4
    392c:	41 e0       	ldi	r20, 0x01	; 1
    392e:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN6, PIN_HIGH);
    3932:	83 e0       	ldi	r24, 0x03	; 3
    3934:	66 e0       	ldi	r22, 0x06	; 6
    3936:	41 e0       	ldi	r20, 0x01	; 1
    3938:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN7, PIN_HIGH);
    393c:	83 e0       	ldi	r24, 0x03	; 3
    393e:	67 e0       	ldi	r22, 0x07	; 7
    3940:	41 e0       	ldi	r20, 0x01	; 1
    3942:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_LOW);
    3946:	83 e0       	ldi	r24, 0x03	; 3
    3948:	65 e0       	ldi	r22, 0x05	; 5
    394a:	40 e0       	ldi	r20, 0x00	; 0
    394c:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									PORTA=seg(minute/10);
    3950:	0b e3       	ldi	r16, 0x3B	; 59
    3952:	10 e0       	ldi	r17, 0x00	; 0
    3954:	fe 01       	movw	r30, r28
    3956:	ed 53       	subi	r30, 0x3D	; 61
    3958:	fe 4f       	sbci	r31, 0xFE	; 254
    395a:	80 81       	ld	r24, Z
    395c:	9a e0       	ldi	r25, 0x0A	; 10
    395e:	69 2f       	mov	r22, r25
    3960:	0e 94 87 33 	call	0x670e	; 0x670e <__udivmodqi4>
    3964:	0e 94 8e 0a 	call	0x151c	; 0x151c <seg>
    3968:	f8 01       	movw	r30, r16
    396a:	80 83       	st	Z, r24
    396c:	fe 01       	movw	r30, r28
    396e:	e1 5c       	subi	r30, 0xC1	; 193
    3970:	fe 4f       	sbci	r31, 0xFE	; 254
    3972:	80 e0       	ldi	r24, 0x00	; 0
    3974:	90 e0       	ldi	r25, 0x00	; 0
    3976:	a0 e0       	ldi	r26, 0x00	; 0
    3978:	b1 e4       	ldi	r27, 0x41	; 65
    397a:	80 83       	st	Z, r24
    397c:	91 83       	std	Z+1, r25	; 0x01
    397e:	a2 83       	std	Z+2, r26	; 0x02
    3980:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3982:	8e 01       	movw	r16, r28
    3984:	05 5c       	subi	r16, 0xC5	; 197
    3986:	1e 4f       	sbci	r17, 0xFE	; 254
    3988:	fe 01       	movw	r30, r28
    398a:	e1 5c       	subi	r30, 0xC1	; 193
    398c:	fe 4f       	sbci	r31, 0xFE	; 254
    398e:	60 81       	ld	r22, Z
    3990:	71 81       	ldd	r23, Z+1	; 0x01
    3992:	82 81       	ldd	r24, Z+2	; 0x02
    3994:	93 81       	ldd	r25, Z+3	; 0x03
    3996:	20 e0       	ldi	r18, 0x00	; 0
    3998:	30 e0       	ldi	r19, 0x00	; 0
    399a:	4a ef       	ldi	r20, 0xFA	; 250
    399c:	54 e4       	ldi	r21, 0x44	; 68
    399e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    39a2:	dc 01       	movw	r26, r24
    39a4:	cb 01       	movw	r24, r22
    39a6:	f8 01       	movw	r30, r16
    39a8:	80 83       	st	Z, r24
    39aa:	91 83       	std	Z+1, r25	; 0x01
    39ac:	a2 83       	std	Z+2, r26	; 0x02
    39ae:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    39b0:	fe 01       	movw	r30, r28
    39b2:	e5 5c       	subi	r30, 0xC5	; 197
    39b4:	fe 4f       	sbci	r31, 0xFE	; 254
    39b6:	60 81       	ld	r22, Z
    39b8:	71 81       	ldd	r23, Z+1	; 0x01
    39ba:	82 81       	ldd	r24, Z+2	; 0x02
    39bc:	93 81       	ldd	r25, Z+3	; 0x03
    39be:	20 e0       	ldi	r18, 0x00	; 0
    39c0:	30 e0       	ldi	r19, 0x00	; 0
    39c2:	40 e8       	ldi	r20, 0x80	; 128
    39c4:	5f e3       	ldi	r21, 0x3F	; 63
    39c6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    39ca:	88 23       	and	r24, r24
    39cc:	44 f4       	brge	.+16     	; 0x39de <main+0xec4>
		__ticks = 1;
    39ce:	fe 01       	movw	r30, r28
    39d0:	e7 5c       	subi	r30, 0xC7	; 199
    39d2:	fe 4f       	sbci	r31, 0xFE	; 254
    39d4:	81 e0       	ldi	r24, 0x01	; 1
    39d6:	90 e0       	ldi	r25, 0x00	; 0
    39d8:	91 83       	std	Z+1, r25	; 0x01
    39da:	80 83       	st	Z, r24
    39dc:	64 c0       	rjmp	.+200    	; 0x3aa6 <main+0xf8c>
	else if (__tmp > 65535)
    39de:	fe 01       	movw	r30, r28
    39e0:	e5 5c       	subi	r30, 0xC5	; 197
    39e2:	fe 4f       	sbci	r31, 0xFE	; 254
    39e4:	60 81       	ld	r22, Z
    39e6:	71 81       	ldd	r23, Z+1	; 0x01
    39e8:	82 81       	ldd	r24, Z+2	; 0x02
    39ea:	93 81       	ldd	r25, Z+3	; 0x03
    39ec:	20 e0       	ldi	r18, 0x00	; 0
    39ee:	3f ef       	ldi	r19, 0xFF	; 255
    39f0:	4f e7       	ldi	r20, 0x7F	; 127
    39f2:	57 e4       	ldi	r21, 0x47	; 71
    39f4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    39f8:	18 16       	cp	r1, r24
    39fa:	0c f0       	brlt	.+2      	; 0x39fe <main+0xee4>
    39fc:	43 c0       	rjmp	.+134    	; 0x3a84 <main+0xf6a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    39fe:	fe 01       	movw	r30, r28
    3a00:	e1 5c       	subi	r30, 0xC1	; 193
    3a02:	fe 4f       	sbci	r31, 0xFE	; 254
    3a04:	60 81       	ld	r22, Z
    3a06:	71 81       	ldd	r23, Z+1	; 0x01
    3a08:	82 81       	ldd	r24, Z+2	; 0x02
    3a0a:	93 81       	ldd	r25, Z+3	; 0x03
    3a0c:	20 e0       	ldi	r18, 0x00	; 0
    3a0e:	30 e0       	ldi	r19, 0x00	; 0
    3a10:	40 e2       	ldi	r20, 0x20	; 32
    3a12:	51 e4       	ldi	r21, 0x41	; 65
    3a14:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3a18:	dc 01       	movw	r26, r24
    3a1a:	cb 01       	movw	r24, r22
    3a1c:	8e 01       	movw	r16, r28
    3a1e:	07 5c       	subi	r16, 0xC7	; 199
    3a20:	1e 4f       	sbci	r17, 0xFE	; 254
    3a22:	bc 01       	movw	r22, r24
    3a24:	cd 01       	movw	r24, r26
    3a26:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3a2a:	dc 01       	movw	r26, r24
    3a2c:	cb 01       	movw	r24, r22
    3a2e:	f8 01       	movw	r30, r16
    3a30:	91 83       	std	Z+1, r25	; 0x01
    3a32:	80 83       	st	Z, r24
    3a34:	1f c0       	rjmp	.+62     	; 0x3a74 <main+0xf5a>
    3a36:	fe 01       	movw	r30, r28
    3a38:	e9 5c       	subi	r30, 0xC9	; 201
    3a3a:	fe 4f       	sbci	r31, 0xFE	; 254
    3a3c:	88 ec       	ldi	r24, 0xC8	; 200
    3a3e:	90 e0       	ldi	r25, 0x00	; 0
    3a40:	91 83       	std	Z+1, r25	; 0x01
    3a42:	80 83       	st	Z, r24
    3a44:	fe 01       	movw	r30, r28
    3a46:	e9 5c       	subi	r30, 0xC9	; 201
    3a48:	fe 4f       	sbci	r31, 0xFE	; 254
    3a4a:	80 81       	ld	r24, Z
    3a4c:	91 81       	ldd	r25, Z+1	; 0x01
    3a4e:	01 97       	sbiw	r24, 0x01	; 1
    3a50:	f1 f7       	brne	.-4      	; 0x3a4e <main+0xf34>
    3a52:	fe 01       	movw	r30, r28
    3a54:	e9 5c       	subi	r30, 0xC9	; 201
    3a56:	fe 4f       	sbci	r31, 0xFE	; 254
    3a58:	91 83       	std	Z+1, r25	; 0x01
    3a5a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3a5c:	de 01       	movw	r26, r28
    3a5e:	a7 5c       	subi	r26, 0xC7	; 199
    3a60:	be 4f       	sbci	r27, 0xFE	; 254
    3a62:	fe 01       	movw	r30, r28
    3a64:	e7 5c       	subi	r30, 0xC7	; 199
    3a66:	fe 4f       	sbci	r31, 0xFE	; 254
    3a68:	80 81       	ld	r24, Z
    3a6a:	91 81       	ldd	r25, Z+1	; 0x01
    3a6c:	01 97       	sbiw	r24, 0x01	; 1
    3a6e:	11 96       	adiw	r26, 0x01	; 1
    3a70:	9c 93       	st	X, r25
    3a72:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3a74:	fe 01       	movw	r30, r28
    3a76:	e7 5c       	subi	r30, 0xC7	; 199
    3a78:	fe 4f       	sbci	r31, 0xFE	; 254
    3a7a:	80 81       	ld	r24, Z
    3a7c:	91 81       	ldd	r25, Z+1	; 0x01
    3a7e:	00 97       	sbiw	r24, 0x00	; 0
    3a80:	d1 f6       	brne	.-76     	; 0x3a36 <main+0xf1c>
    3a82:	27 c0       	rjmp	.+78     	; 0x3ad2 <main+0xfb8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3a84:	8e 01       	movw	r16, r28
    3a86:	07 5c       	subi	r16, 0xC7	; 199
    3a88:	1e 4f       	sbci	r17, 0xFE	; 254
    3a8a:	fe 01       	movw	r30, r28
    3a8c:	e5 5c       	subi	r30, 0xC5	; 197
    3a8e:	fe 4f       	sbci	r31, 0xFE	; 254
    3a90:	60 81       	ld	r22, Z
    3a92:	71 81       	ldd	r23, Z+1	; 0x01
    3a94:	82 81       	ldd	r24, Z+2	; 0x02
    3a96:	93 81       	ldd	r25, Z+3	; 0x03
    3a98:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3a9c:	dc 01       	movw	r26, r24
    3a9e:	cb 01       	movw	r24, r22
    3aa0:	f8 01       	movw	r30, r16
    3aa2:	91 83       	std	Z+1, r25	; 0x01
    3aa4:	80 83       	st	Z, r24
    3aa6:	de 01       	movw	r26, r28
    3aa8:	ab 5c       	subi	r26, 0xCB	; 203
    3aaa:	be 4f       	sbci	r27, 0xFE	; 254
    3aac:	fe 01       	movw	r30, r28
    3aae:	e7 5c       	subi	r30, 0xC7	; 199
    3ab0:	fe 4f       	sbci	r31, 0xFE	; 254
    3ab2:	80 81       	ld	r24, Z
    3ab4:	91 81       	ldd	r25, Z+1	; 0x01
    3ab6:	8d 93       	st	X+, r24
    3ab8:	9c 93       	st	X, r25
    3aba:	fe 01       	movw	r30, r28
    3abc:	eb 5c       	subi	r30, 0xCB	; 203
    3abe:	fe 4f       	sbci	r31, 0xFE	; 254
    3ac0:	80 81       	ld	r24, Z
    3ac2:	91 81       	ldd	r25, Z+1	; 0x01
    3ac4:	01 97       	sbiw	r24, 0x01	; 1
    3ac6:	f1 f7       	brne	.-4      	; 0x3ac4 <main+0xfaa>
    3ac8:	fe 01       	movw	r30, r28
    3aca:	eb 5c       	subi	r30, 0xCB	; 203
    3acc:	fe 4f       	sbci	r31, 0xFE	; 254
    3ace:	91 83       	std	Z+1, r25	; 0x01
    3ad0:	80 83       	st	Z, r24
									_delay_ms(50/6);
									SetPin_Val(DIO_PORTD, DIO_PIN2, PIN_HIGH);
    3ad2:	83 e0       	ldi	r24, 0x03	; 3
    3ad4:	62 e0       	ldi	r22, 0x02	; 2
    3ad6:	41 e0       	ldi	r20, 0x01	; 1
    3ad8:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN3, PIN_HIGH);
    3adc:	83 e0       	ldi	r24, 0x03	; 3
    3ade:	63 e0       	ldi	r22, 0x03	; 3
    3ae0:	41 e0       	ldi	r20, 0x01	; 1
    3ae2:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN4, PIN_HIGH);
    3ae6:	83 e0       	ldi	r24, 0x03	; 3
    3ae8:	64 e0       	ldi	r22, 0x04	; 4
    3aea:	41 e0       	ldi	r20, 0x01	; 1
    3aec:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_HIGH);
    3af0:	83 e0       	ldi	r24, 0x03	; 3
    3af2:	65 e0       	ldi	r22, 0x05	; 5
    3af4:	41 e0       	ldi	r20, 0x01	; 1
    3af6:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN7, PIN_HIGH);
    3afa:	83 e0       	ldi	r24, 0x03	; 3
    3afc:	67 e0       	ldi	r22, 0x07	; 7
    3afe:	41 e0       	ldi	r20, 0x01	; 1
    3b00:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN6, PIN_LOW);
    3b04:	83 e0       	ldi	r24, 0x03	; 3
    3b06:	66 e0       	ldi	r22, 0x06	; 6
    3b08:	40 e0       	ldi	r20, 0x00	; 0
    3b0a:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									PORTA=seg(hour%10);
    3b0e:	0b e3       	ldi	r16, 0x3B	; 59
    3b10:	10 e0       	ldi	r17, 0x00	; 0
    3b12:	fe 01       	movw	r30, r28
    3b14:	ec 53       	subi	r30, 0x3C	; 60
    3b16:	fe 4f       	sbci	r31, 0xFE	; 254
    3b18:	80 81       	ld	r24, Z
    3b1a:	9a e0       	ldi	r25, 0x0A	; 10
    3b1c:	69 2f       	mov	r22, r25
    3b1e:	0e 94 87 33 	call	0x670e	; 0x670e <__udivmodqi4>
    3b22:	89 2f       	mov	r24, r25
    3b24:	0e 94 8e 0a 	call	0x151c	; 0x151c <seg>
    3b28:	f8 01       	movw	r30, r16
    3b2a:	80 83       	st	Z, r24
    3b2c:	fe 01       	movw	r30, r28
    3b2e:	ef 5c       	subi	r30, 0xCF	; 207
    3b30:	fe 4f       	sbci	r31, 0xFE	; 254
    3b32:	80 e0       	ldi	r24, 0x00	; 0
    3b34:	90 e0       	ldi	r25, 0x00	; 0
    3b36:	a0 e0       	ldi	r26, 0x00	; 0
    3b38:	b1 e4       	ldi	r27, 0x41	; 65
    3b3a:	80 83       	st	Z, r24
    3b3c:	91 83       	std	Z+1, r25	; 0x01
    3b3e:	a2 83       	std	Z+2, r26	; 0x02
    3b40:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3b42:	8e 01       	movw	r16, r28
    3b44:	03 5d       	subi	r16, 0xD3	; 211
    3b46:	1e 4f       	sbci	r17, 0xFE	; 254
    3b48:	fe 01       	movw	r30, r28
    3b4a:	ef 5c       	subi	r30, 0xCF	; 207
    3b4c:	fe 4f       	sbci	r31, 0xFE	; 254
    3b4e:	60 81       	ld	r22, Z
    3b50:	71 81       	ldd	r23, Z+1	; 0x01
    3b52:	82 81       	ldd	r24, Z+2	; 0x02
    3b54:	93 81       	ldd	r25, Z+3	; 0x03
    3b56:	20 e0       	ldi	r18, 0x00	; 0
    3b58:	30 e0       	ldi	r19, 0x00	; 0
    3b5a:	4a ef       	ldi	r20, 0xFA	; 250
    3b5c:	54 e4       	ldi	r21, 0x44	; 68
    3b5e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3b62:	dc 01       	movw	r26, r24
    3b64:	cb 01       	movw	r24, r22
    3b66:	f8 01       	movw	r30, r16
    3b68:	80 83       	st	Z, r24
    3b6a:	91 83       	std	Z+1, r25	; 0x01
    3b6c:	a2 83       	std	Z+2, r26	; 0x02
    3b6e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3b70:	fe 01       	movw	r30, r28
    3b72:	e3 5d       	subi	r30, 0xD3	; 211
    3b74:	fe 4f       	sbci	r31, 0xFE	; 254
    3b76:	60 81       	ld	r22, Z
    3b78:	71 81       	ldd	r23, Z+1	; 0x01
    3b7a:	82 81       	ldd	r24, Z+2	; 0x02
    3b7c:	93 81       	ldd	r25, Z+3	; 0x03
    3b7e:	20 e0       	ldi	r18, 0x00	; 0
    3b80:	30 e0       	ldi	r19, 0x00	; 0
    3b82:	40 e8       	ldi	r20, 0x80	; 128
    3b84:	5f e3       	ldi	r21, 0x3F	; 63
    3b86:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3b8a:	88 23       	and	r24, r24
    3b8c:	44 f4       	brge	.+16     	; 0x3b9e <main+0x1084>
		__ticks = 1;
    3b8e:	fe 01       	movw	r30, r28
    3b90:	e5 5d       	subi	r30, 0xD5	; 213
    3b92:	fe 4f       	sbci	r31, 0xFE	; 254
    3b94:	81 e0       	ldi	r24, 0x01	; 1
    3b96:	90 e0       	ldi	r25, 0x00	; 0
    3b98:	91 83       	std	Z+1, r25	; 0x01
    3b9a:	80 83       	st	Z, r24
    3b9c:	64 c0       	rjmp	.+200    	; 0x3c66 <main+0x114c>
	else if (__tmp > 65535)
    3b9e:	fe 01       	movw	r30, r28
    3ba0:	e3 5d       	subi	r30, 0xD3	; 211
    3ba2:	fe 4f       	sbci	r31, 0xFE	; 254
    3ba4:	60 81       	ld	r22, Z
    3ba6:	71 81       	ldd	r23, Z+1	; 0x01
    3ba8:	82 81       	ldd	r24, Z+2	; 0x02
    3baa:	93 81       	ldd	r25, Z+3	; 0x03
    3bac:	20 e0       	ldi	r18, 0x00	; 0
    3bae:	3f ef       	ldi	r19, 0xFF	; 255
    3bb0:	4f e7       	ldi	r20, 0x7F	; 127
    3bb2:	57 e4       	ldi	r21, 0x47	; 71
    3bb4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3bb8:	18 16       	cp	r1, r24
    3bba:	0c f0       	brlt	.+2      	; 0x3bbe <main+0x10a4>
    3bbc:	43 c0       	rjmp	.+134    	; 0x3c44 <main+0x112a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3bbe:	fe 01       	movw	r30, r28
    3bc0:	ef 5c       	subi	r30, 0xCF	; 207
    3bc2:	fe 4f       	sbci	r31, 0xFE	; 254
    3bc4:	60 81       	ld	r22, Z
    3bc6:	71 81       	ldd	r23, Z+1	; 0x01
    3bc8:	82 81       	ldd	r24, Z+2	; 0x02
    3bca:	93 81       	ldd	r25, Z+3	; 0x03
    3bcc:	20 e0       	ldi	r18, 0x00	; 0
    3bce:	30 e0       	ldi	r19, 0x00	; 0
    3bd0:	40 e2       	ldi	r20, 0x20	; 32
    3bd2:	51 e4       	ldi	r21, 0x41	; 65
    3bd4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3bd8:	dc 01       	movw	r26, r24
    3bda:	cb 01       	movw	r24, r22
    3bdc:	8e 01       	movw	r16, r28
    3bde:	05 5d       	subi	r16, 0xD5	; 213
    3be0:	1e 4f       	sbci	r17, 0xFE	; 254
    3be2:	bc 01       	movw	r22, r24
    3be4:	cd 01       	movw	r24, r26
    3be6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3bea:	dc 01       	movw	r26, r24
    3bec:	cb 01       	movw	r24, r22
    3bee:	f8 01       	movw	r30, r16
    3bf0:	91 83       	std	Z+1, r25	; 0x01
    3bf2:	80 83       	st	Z, r24
    3bf4:	1f c0       	rjmp	.+62     	; 0x3c34 <main+0x111a>
    3bf6:	fe 01       	movw	r30, r28
    3bf8:	e7 5d       	subi	r30, 0xD7	; 215
    3bfa:	fe 4f       	sbci	r31, 0xFE	; 254
    3bfc:	88 ec       	ldi	r24, 0xC8	; 200
    3bfe:	90 e0       	ldi	r25, 0x00	; 0
    3c00:	91 83       	std	Z+1, r25	; 0x01
    3c02:	80 83       	st	Z, r24
    3c04:	fe 01       	movw	r30, r28
    3c06:	e7 5d       	subi	r30, 0xD7	; 215
    3c08:	fe 4f       	sbci	r31, 0xFE	; 254
    3c0a:	80 81       	ld	r24, Z
    3c0c:	91 81       	ldd	r25, Z+1	; 0x01
    3c0e:	01 97       	sbiw	r24, 0x01	; 1
    3c10:	f1 f7       	brne	.-4      	; 0x3c0e <main+0x10f4>
    3c12:	fe 01       	movw	r30, r28
    3c14:	e7 5d       	subi	r30, 0xD7	; 215
    3c16:	fe 4f       	sbci	r31, 0xFE	; 254
    3c18:	91 83       	std	Z+1, r25	; 0x01
    3c1a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3c1c:	de 01       	movw	r26, r28
    3c1e:	a5 5d       	subi	r26, 0xD5	; 213
    3c20:	be 4f       	sbci	r27, 0xFE	; 254
    3c22:	fe 01       	movw	r30, r28
    3c24:	e5 5d       	subi	r30, 0xD5	; 213
    3c26:	fe 4f       	sbci	r31, 0xFE	; 254
    3c28:	80 81       	ld	r24, Z
    3c2a:	91 81       	ldd	r25, Z+1	; 0x01
    3c2c:	01 97       	sbiw	r24, 0x01	; 1
    3c2e:	11 96       	adiw	r26, 0x01	; 1
    3c30:	9c 93       	st	X, r25
    3c32:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c34:	fe 01       	movw	r30, r28
    3c36:	e5 5d       	subi	r30, 0xD5	; 213
    3c38:	fe 4f       	sbci	r31, 0xFE	; 254
    3c3a:	80 81       	ld	r24, Z
    3c3c:	91 81       	ldd	r25, Z+1	; 0x01
    3c3e:	00 97       	sbiw	r24, 0x00	; 0
    3c40:	d1 f6       	brne	.-76     	; 0x3bf6 <main+0x10dc>
    3c42:	27 c0       	rjmp	.+78     	; 0x3c92 <main+0x1178>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c44:	8e 01       	movw	r16, r28
    3c46:	05 5d       	subi	r16, 0xD5	; 213
    3c48:	1e 4f       	sbci	r17, 0xFE	; 254
    3c4a:	fe 01       	movw	r30, r28
    3c4c:	e3 5d       	subi	r30, 0xD3	; 211
    3c4e:	fe 4f       	sbci	r31, 0xFE	; 254
    3c50:	60 81       	ld	r22, Z
    3c52:	71 81       	ldd	r23, Z+1	; 0x01
    3c54:	82 81       	ldd	r24, Z+2	; 0x02
    3c56:	93 81       	ldd	r25, Z+3	; 0x03
    3c58:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3c5c:	dc 01       	movw	r26, r24
    3c5e:	cb 01       	movw	r24, r22
    3c60:	f8 01       	movw	r30, r16
    3c62:	91 83       	std	Z+1, r25	; 0x01
    3c64:	80 83       	st	Z, r24
    3c66:	de 01       	movw	r26, r28
    3c68:	a9 5d       	subi	r26, 0xD9	; 217
    3c6a:	be 4f       	sbci	r27, 0xFE	; 254
    3c6c:	fe 01       	movw	r30, r28
    3c6e:	e5 5d       	subi	r30, 0xD5	; 213
    3c70:	fe 4f       	sbci	r31, 0xFE	; 254
    3c72:	80 81       	ld	r24, Z
    3c74:	91 81       	ldd	r25, Z+1	; 0x01
    3c76:	8d 93       	st	X+, r24
    3c78:	9c 93       	st	X, r25
    3c7a:	fe 01       	movw	r30, r28
    3c7c:	e9 5d       	subi	r30, 0xD9	; 217
    3c7e:	fe 4f       	sbci	r31, 0xFE	; 254
    3c80:	80 81       	ld	r24, Z
    3c82:	91 81       	ldd	r25, Z+1	; 0x01
    3c84:	01 97       	sbiw	r24, 0x01	; 1
    3c86:	f1 f7       	brne	.-4      	; 0x3c84 <main+0x116a>
    3c88:	fe 01       	movw	r30, r28
    3c8a:	e9 5d       	subi	r30, 0xD9	; 217
    3c8c:	fe 4f       	sbci	r31, 0xFE	; 254
    3c8e:	91 83       	std	Z+1, r25	; 0x01
    3c90:	80 83       	st	Z, r24
									_delay_ms(50/6);
									SetPin_Val(DIO_PORTD, DIO_PIN2, PIN_HIGH);
    3c92:	83 e0       	ldi	r24, 0x03	; 3
    3c94:	62 e0       	ldi	r22, 0x02	; 2
    3c96:	41 e0       	ldi	r20, 0x01	; 1
    3c98:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN3, PIN_HIGH);
    3c9c:	83 e0       	ldi	r24, 0x03	; 3
    3c9e:	63 e0       	ldi	r22, 0x03	; 3
    3ca0:	41 e0       	ldi	r20, 0x01	; 1
    3ca2:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN4, PIN_HIGH);
    3ca6:	83 e0       	ldi	r24, 0x03	; 3
    3ca8:	64 e0       	ldi	r22, 0x04	; 4
    3caa:	41 e0       	ldi	r20, 0x01	; 1
    3cac:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_HIGH);
    3cb0:	83 e0       	ldi	r24, 0x03	; 3
    3cb2:	65 e0       	ldi	r22, 0x05	; 5
    3cb4:	41 e0       	ldi	r20, 0x01	; 1
    3cb6:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN6, PIN_HIGH);
    3cba:	83 e0       	ldi	r24, 0x03	; 3
    3cbc:	66 e0       	ldi	r22, 0x06	; 6
    3cbe:	41 e0       	ldi	r20, 0x01	; 1
    3cc0:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN7, PIN_LOW);
    3cc4:	83 e0       	ldi	r24, 0x03	; 3
    3cc6:	67 e0       	ldi	r22, 0x07	; 7
    3cc8:	40 e0       	ldi	r20, 0x00	; 0
    3cca:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									PORTA=seg(hour/10);
    3cce:	0b e3       	ldi	r16, 0x3B	; 59
    3cd0:	10 e0       	ldi	r17, 0x00	; 0
    3cd2:	fe 01       	movw	r30, r28
    3cd4:	ec 53       	subi	r30, 0x3C	; 60
    3cd6:	fe 4f       	sbci	r31, 0xFE	; 254
    3cd8:	80 81       	ld	r24, Z
    3cda:	9a e0       	ldi	r25, 0x0A	; 10
    3cdc:	69 2f       	mov	r22, r25
    3cde:	0e 94 87 33 	call	0x670e	; 0x670e <__udivmodqi4>
    3ce2:	0e 94 8e 0a 	call	0x151c	; 0x151c <seg>
    3ce6:	f8 01       	movw	r30, r16
    3ce8:	80 83       	st	Z, r24
    3cea:	fe 01       	movw	r30, r28
    3cec:	ed 5d       	subi	r30, 0xDD	; 221
    3cee:	fe 4f       	sbci	r31, 0xFE	; 254
    3cf0:	80 e0       	ldi	r24, 0x00	; 0
    3cf2:	90 e0       	ldi	r25, 0x00	; 0
    3cf4:	a0 e0       	ldi	r26, 0x00	; 0
    3cf6:	b1 e4       	ldi	r27, 0x41	; 65
    3cf8:	80 83       	st	Z, r24
    3cfa:	91 83       	std	Z+1, r25	; 0x01
    3cfc:	a2 83       	std	Z+2, r26	; 0x02
    3cfe:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d00:	8e 01       	movw	r16, r28
    3d02:	01 5e       	subi	r16, 0xE1	; 225
    3d04:	1e 4f       	sbci	r17, 0xFE	; 254
    3d06:	fe 01       	movw	r30, r28
    3d08:	ed 5d       	subi	r30, 0xDD	; 221
    3d0a:	fe 4f       	sbci	r31, 0xFE	; 254
    3d0c:	60 81       	ld	r22, Z
    3d0e:	71 81       	ldd	r23, Z+1	; 0x01
    3d10:	82 81       	ldd	r24, Z+2	; 0x02
    3d12:	93 81       	ldd	r25, Z+3	; 0x03
    3d14:	20 e0       	ldi	r18, 0x00	; 0
    3d16:	30 e0       	ldi	r19, 0x00	; 0
    3d18:	4a ef       	ldi	r20, 0xFA	; 250
    3d1a:	54 e4       	ldi	r21, 0x44	; 68
    3d1c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3d20:	dc 01       	movw	r26, r24
    3d22:	cb 01       	movw	r24, r22
    3d24:	f8 01       	movw	r30, r16
    3d26:	80 83       	st	Z, r24
    3d28:	91 83       	std	Z+1, r25	; 0x01
    3d2a:	a2 83       	std	Z+2, r26	; 0x02
    3d2c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3d2e:	fe 01       	movw	r30, r28
    3d30:	e1 5e       	subi	r30, 0xE1	; 225
    3d32:	fe 4f       	sbci	r31, 0xFE	; 254
    3d34:	60 81       	ld	r22, Z
    3d36:	71 81       	ldd	r23, Z+1	; 0x01
    3d38:	82 81       	ldd	r24, Z+2	; 0x02
    3d3a:	93 81       	ldd	r25, Z+3	; 0x03
    3d3c:	20 e0       	ldi	r18, 0x00	; 0
    3d3e:	30 e0       	ldi	r19, 0x00	; 0
    3d40:	40 e8       	ldi	r20, 0x80	; 128
    3d42:	5f e3       	ldi	r21, 0x3F	; 63
    3d44:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3d48:	88 23       	and	r24, r24
    3d4a:	44 f4       	brge	.+16     	; 0x3d5c <main+0x1242>
		__ticks = 1;
    3d4c:	fe 01       	movw	r30, r28
    3d4e:	e3 5e       	subi	r30, 0xE3	; 227
    3d50:	fe 4f       	sbci	r31, 0xFE	; 254
    3d52:	81 e0       	ldi	r24, 0x01	; 1
    3d54:	90 e0       	ldi	r25, 0x00	; 0
    3d56:	91 83       	std	Z+1, r25	; 0x01
    3d58:	80 83       	st	Z, r24
    3d5a:	64 c0       	rjmp	.+200    	; 0x3e24 <main+0x130a>
	else if (__tmp > 65535)
    3d5c:	fe 01       	movw	r30, r28
    3d5e:	e1 5e       	subi	r30, 0xE1	; 225
    3d60:	fe 4f       	sbci	r31, 0xFE	; 254
    3d62:	60 81       	ld	r22, Z
    3d64:	71 81       	ldd	r23, Z+1	; 0x01
    3d66:	82 81       	ldd	r24, Z+2	; 0x02
    3d68:	93 81       	ldd	r25, Z+3	; 0x03
    3d6a:	20 e0       	ldi	r18, 0x00	; 0
    3d6c:	3f ef       	ldi	r19, 0xFF	; 255
    3d6e:	4f e7       	ldi	r20, 0x7F	; 127
    3d70:	57 e4       	ldi	r21, 0x47	; 71
    3d72:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3d76:	18 16       	cp	r1, r24
    3d78:	0c f0       	brlt	.+2      	; 0x3d7c <main+0x1262>
    3d7a:	43 c0       	rjmp	.+134    	; 0x3e02 <main+0x12e8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3d7c:	fe 01       	movw	r30, r28
    3d7e:	ed 5d       	subi	r30, 0xDD	; 221
    3d80:	fe 4f       	sbci	r31, 0xFE	; 254
    3d82:	60 81       	ld	r22, Z
    3d84:	71 81       	ldd	r23, Z+1	; 0x01
    3d86:	82 81       	ldd	r24, Z+2	; 0x02
    3d88:	93 81       	ldd	r25, Z+3	; 0x03
    3d8a:	20 e0       	ldi	r18, 0x00	; 0
    3d8c:	30 e0       	ldi	r19, 0x00	; 0
    3d8e:	40 e2       	ldi	r20, 0x20	; 32
    3d90:	51 e4       	ldi	r21, 0x41	; 65
    3d92:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3d96:	dc 01       	movw	r26, r24
    3d98:	cb 01       	movw	r24, r22
    3d9a:	8e 01       	movw	r16, r28
    3d9c:	03 5e       	subi	r16, 0xE3	; 227
    3d9e:	1e 4f       	sbci	r17, 0xFE	; 254
    3da0:	bc 01       	movw	r22, r24
    3da2:	cd 01       	movw	r24, r26
    3da4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3da8:	dc 01       	movw	r26, r24
    3daa:	cb 01       	movw	r24, r22
    3dac:	f8 01       	movw	r30, r16
    3dae:	91 83       	std	Z+1, r25	; 0x01
    3db0:	80 83       	st	Z, r24
    3db2:	1f c0       	rjmp	.+62     	; 0x3df2 <main+0x12d8>
    3db4:	fe 01       	movw	r30, r28
    3db6:	e5 5e       	subi	r30, 0xE5	; 229
    3db8:	fe 4f       	sbci	r31, 0xFE	; 254
    3dba:	88 ec       	ldi	r24, 0xC8	; 200
    3dbc:	90 e0       	ldi	r25, 0x00	; 0
    3dbe:	91 83       	std	Z+1, r25	; 0x01
    3dc0:	80 83       	st	Z, r24
    3dc2:	fe 01       	movw	r30, r28
    3dc4:	e5 5e       	subi	r30, 0xE5	; 229
    3dc6:	fe 4f       	sbci	r31, 0xFE	; 254
    3dc8:	80 81       	ld	r24, Z
    3dca:	91 81       	ldd	r25, Z+1	; 0x01
    3dcc:	01 97       	sbiw	r24, 0x01	; 1
    3dce:	f1 f7       	brne	.-4      	; 0x3dcc <main+0x12b2>
    3dd0:	fe 01       	movw	r30, r28
    3dd2:	e5 5e       	subi	r30, 0xE5	; 229
    3dd4:	fe 4f       	sbci	r31, 0xFE	; 254
    3dd6:	91 83       	std	Z+1, r25	; 0x01
    3dd8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3dda:	de 01       	movw	r26, r28
    3ddc:	a3 5e       	subi	r26, 0xE3	; 227
    3dde:	be 4f       	sbci	r27, 0xFE	; 254
    3de0:	fe 01       	movw	r30, r28
    3de2:	e3 5e       	subi	r30, 0xE3	; 227
    3de4:	fe 4f       	sbci	r31, 0xFE	; 254
    3de6:	80 81       	ld	r24, Z
    3de8:	91 81       	ldd	r25, Z+1	; 0x01
    3dea:	01 97       	sbiw	r24, 0x01	; 1
    3dec:	11 96       	adiw	r26, 0x01	; 1
    3dee:	9c 93       	st	X, r25
    3df0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3df2:	fe 01       	movw	r30, r28
    3df4:	e3 5e       	subi	r30, 0xE3	; 227
    3df6:	fe 4f       	sbci	r31, 0xFE	; 254
    3df8:	80 81       	ld	r24, Z
    3dfa:	91 81       	ldd	r25, Z+1	; 0x01
    3dfc:	00 97       	sbiw	r24, 0x00	; 0
    3dfe:	d1 f6       	brne	.-76     	; 0x3db4 <main+0x129a>
    3e00:	28 c0       	rjmp	.+80     	; 0x3e52 <main+0x1338>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e02:	8e 01       	movw	r16, r28
    3e04:	03 5e       	subi	r16, 0xE3	; 227
    3e06:	1e 4f       	sbci	r17, 0xFE	; 254
    3e08:	fe 01       	movw	r30, r28
    3e0a:	e1 5e       	subi	r30, 0xE1	; 225
    3e0c:	fe 4f       	sbci	r31, 0xFE	; 254
    3e0e:	60 81       	ld	r22, Z
    3e10:	71 81       	ldd	r23, Z+1	; 0x01
    3e12:	82 81       	ldd	r24, Z+2	; 0x02
    3e14:	93 81       	ldd	r25, Z+3	; 0x03
    3e16:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3e1a:	dc 01       	movw	r26, r24
    3e1c:	cb 01       	movw	r24, r22
    3e1e:	f8 01       	movw	r30, r16
    3e20:	91 83       	std	Z+1, r25	; 0x01
    3e22:	80 83       	st	Z, r24
    3e24:	de 01       	movw	r26, r28
    3e26:	a7 5e       	subi	r26, 0xE7	; 231
    3e28:	be 4f       	sbci	r27, 0xFE	; 254
    3e2a:	fe 01       	movw	r30, r28
    3e2c:	e3 5e       	subi	r30, 0xE3	; 227
    3e2e:	fe 4f       	sbci	r31, 0xFE	; 254
    3e30:	80 81       	ld	r24, Z
    3e32:	91 81       	ldd	r25, Z+1	; 0x01
    3e34:	11 96       	adiw	r26, 0x01	; 1
    3e36:	9c 93       	st	X, r25
    3e38:	8e 93       	st	-X, r24
    3e3a:	fe 01       	movw	r30, r28
    3e3c:	e7 5e       	subi	r30, 0xE7	; 231
    3e3e:	fe 4f       	sbci	r31, 0xFE	; 254
    3e40:	80 81       	ld	r24, Z
    3e42:	91 81       	ldd	r25, Z+1	; 0x01
    3e44:	01 97       	sbiw	r24, 0x01	; 1
    3e46:	f1 f7       	brne	.-4      	; 0x3e44 <main+0x132a>
    3e48:	fe 01       	movw	r30, r28
    3e4a:	e7 5e       	subi	r30, 0xE7	; 231
    3e4c:	fe 4f       	sbci	r31, 0xFE	; 254
    3e4e:	91 83       	std	Z+1, r25	; 0x01
    3e50:	80 83       	st	Z, r24
			for( u8 minute =minute_1;(minute<60)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;minute++)
				{
				for( u8 second =second_1;(second<60)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;second++)
					{
							int n=20;
								while (n--)
    3e52:	cb 52       	subi	r28, 0x2B	; 43
    3e54:	de 4f       	sbci	r29, 0xFE	; 254
    3e56:	18 82       	st	Y, r1
    3e58:	c5 5d       	subi	r28, 0xD5	; 213
    3e5a:	d1 40       	sbci	r29, 0x01	; 1
    3e5c:	fe 01       	movw	r30, r28
    3e5e:	e0 54       	subi	r30, 0x40	; 64
    3e60:	fe 4f       	sbci	r31, 0xFE	; 254
    3e62:	80 81       	ld	r24, Z
    3e64:	91 81       	ldd	r25, Z+1	; 0x01
    3e66:	00 97       	sbiw	r24, 0x00	; 0
    3e68:	31 f0       	breq	.+12     	; 0x3e76 <main+0x135c>
    3e6a:	f1 e0       	ldi	r31, 0x01	; 1
    3e6c:	cb 52       	subi	r28, 0x2B	; 43
    3e6e:	de 4f       	sbci	r29, 0xFE	; 254
    3e70:	f8 83       	st	Y, r31
    3e72:	c5 5d       	subi	r28, 0xD5	; 213
    3e74:	d1 40       	sbci	r29, 0x01	; 1
    3e76:	de 01       	movw	r26, r28
    3e78:	a0 54       	subi	r26, 0x40	; 64
    3e7a:	be 4f       	sbci	r27, 0xFE	; 254
    3e7c:	fe 01       	movw	r30, r28
    3e7e:	e0 54       	subi	r30, 0x40	; 64
    3e80:	fe 4f       	sbci	r31, 0xFE	; 254
    3e82:	80 81       	ld	r24, Z
    3e84:	91 81       	ldd	r25, Z+1	; 0x01
    3e86:	01 97       	sbiw	r24, 0x01	; 1
    3e88:	11 96       	adiw	r26, 0x01	; 1
    3e8a:	9c 93       	st	X, r25
    3e8c:	8e 93       	st	-X, r24
    3e8e:	cb 52       	subi	r28, 0x2B	; 43
    3e90:	de 4f       	sbci	r29, 0xFE	; 254
    3e92:	e8 80       	ld	r14, Y
    3e94:	c5 5d       	subi	r28, 0xD5	; 213
    3e96:	d1 40       	sbci	r29, 0x01	; 1
    3e98:	ee 20       	and	r14, r14
    3e9a:	09 f0       	breq	.+2      	; 0x3e9e <main+0x1384>
    3e9c:	9c ca       	rjmp	.-2760   	; 0x33d6 <main+0x8bc>
									PORTA=seg(hour/10);
									_delay_ms(50/6);


										}
								second_1=0;
    3e9e:	fe 01       	movw	r30, r28
    3ea0:	eb 53       	subi	r30, 0x3B	; 59
    3ea2:	fe 4f       	sbci	r31, 0xFE	; 254
    3ea4:	10 82       	st	Z, r1
		{
		for(u8 hour =hour_1;(hour<=12)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;hour++)
			{
			for( u8 minute =minute_1;(minute<60)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;minute++)
				{
				for( u8 second =second_1;(second<60)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;second++)
    3ea6:	de 01       	movw	r26, r28
    3ea8:	ae 53       	subi	r26, 0x3E	; 62
    3eaa:	be 4f       	sbci	r27, 0xFE	; 254
    3eac:	fe 01       	movw	r30, r28
    3eae:	ee 53       	subi	r30, 0x3E	; 62
    3eb0:	fe 4f       	sbci	r31, 0xFE	; 254
    3eb2:	80 81       	ld	r24, Z
    3eb4:	8f 5f       	subi	r24, 0xFF	; 255
    3eb6:	8c 93       	st	X, r24
    3eb8:	fe 01       	movw	r30, r28
    3eba:	ee 53       	subi	r30, 0x3E	; 62
    3ebc:	fe 4f       	sbci	r31, 0xFE	; 254
    3ebe:	80 81       	ld	r24, Z
    3ec0:	8c 33       	cpi	r24, 0x3C	; 60
    3ec2:	38 f4       	brcc	.+14     	; 0x3ed2 <main+0x13b8>
    3ec4:	81 e0       	ldi	r24, 0x01	; 1
    3ec6:	60 e0       	ldi	r22, 0x00	; 0
    3ec8:	0e 94 12 09 	call	0x1224	; 0x1224 <Get_PinVal>
    3ecc:	88 23       	and	r24, r24
    3ece:	09 f0       	breq	.+2      	; 0x3ed2 <main+0x13b8>
    3ed0:	7a ca       	rjmp	.-2828   	; 0x33c6 <main+0x8ac>

										}
								second_1=0;

							}
						minute_1=0;
    3ed2:	fe 01       	movw	r30, r28
    3ed4:	ea 53       	subi	r30, 0x3A	; 58
    3ed6:	fe 4f       	sbci	r31, 0xFE	; 254
    3ed8:	10 82       	st	Z, r1

	while(1)
		{
		for(u8 hour =hour_1;(hour<=12)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;hour++)
			{
			for( u8 minute =minute_1;(minute<60)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;minute++)
    3eda:	de 01       	movw	r26, r28
    3edc:	ad 53       	subi	r26, 0x3D	; 61
    3ede:	be 4f       	sbci	r27, 0xFE	; 254
    3ee0:	fe 01       	movw	r30, r28
    3ee2:	ed 53       	subi	r30, 0x3D	; 61
    3ee4:	fe 4f       	sbci	r31, 0xFE	; 254
    3ee6:	80 81       	ld	r24, Z
    3ee8:	8f 5f       	subi	r24, 0xFF	; 255
    3eea:	8c 93       	st	X, r24
    3eec:	fe 01       	movw	r30, r28
    3eee:	ed 53       	subi	r30, 0x3D	; 61
    3ef0:	fe 4f       	sbci	r31, 0xFE	; 254
    3ef2:	80 81       	ld	r24, Z
    3ef4:	8c 33       	cpi	r24, 0x3C	; 60
    3ef6:	38 f4       	brcc	.+14     	; 0x3f06 <main+0x13ec>
    3ef8:	81 e0       	ldi	r24, 0x01	; 1
    3efa:	60 e0       	ldi	r22, 0x00	; 0
    3efc:	0e 94 12 09 	call	0x1224	; 0x1224 <Get_PinVal>
    3f00:	88 23       	and	r24, r24
    3f02:	09 f0       	breq	.+2      	; 0x3f06 <main+0x13ec>
    3f04:	57 ca       	rjmp	.-2898   	; 0x33b4 <main+0x89a>
	LCD_GoTO(2, 0);
	LCD_SendString("press button(1) :) ");

	while(1)
		{
		for(u8 hour =hour_1;(hour<=12)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;hour++)
    3f06:	de 01       	movw	r26, r28
    3f08:	ac 53       	subi	r26, 0x3C	; 60
    3f0a:	be 4f       	sbci	r27, 0xFE	; 254
    3f0c:	fe 01       	movw	r30, r28
    3f0e:	ec 53       	subi	r30, 0x3C	; 60
    3f10:	fe 4f       	sbci	r31, 0xFE	; 254
    3f12:	80 81       	ld	r24, Z
    3f14:	8f 5f       	subi	r24, 0xFF	; 255
    3f16:	8c 93       	st	X, r24
    3f18:	fe 01       	movw	r30, r28
    3f1a:	ec 53       	subi	r30, 0x3C	; 60
    3f1c:	fe 4f       	sbci	r31, 0xFE	; 254
    3f1e:	80 81       	ld	r24, Z
    3f20:	8d 30       	cpi	r24, 0x0D	; 13
    3f22:	38 f4       	brcc	.+14     	; 0x3f32 <main+0x1418>
    3f24:	81 e0       	ldi	r24, 0x01	; 1
    3f26:	60 e0       	ldi	r22, 0x00	; 0
    3f28:	0e 94 12 09 	call	0x1224	; 0x1224 <Get_PinVal>
    3f2c:	88 23       	and	r24, r24
    3f2e:	09 f0       	breq	.+2      	; 0x3f32 <main+0x1418>
    3f30:	38 ca       	rjmp	.-2960   	; 0x33a2 <main+0x888>
							}
						minute_1=0;
						}

					}
		hour_1=1;
    3f32:	fe 01       	movw	r30, r28
    3f34:	e9 53       	subi	r30, 0x39	; 57
    3f36:	fe 4f       	sbci	r31, 0xFE	; 254
    3f38:	81 e0       	ldi	r24, 0x01	; 1
    3f3a:	80 83       	st	Z, r24


		if (Get_PinVal(DIO_PORTB, DIO_PIN0)==0)
    3f3c:	81 e0       	ldi	r24, 0x01	; 1
    3f3e:	60 e0       	ldi	r22, 0x00	; 0
    3f40:	0e 94 12 09 	call	0x1224	; 0x1224 <Get_PinVal>
    3f44:	88 23       	and	r24, r24
    3f46:	09 f0       	breq	.+2      	; 0x3f4a <main+0x1430>
    3f48:	23 ca       	rjmp	.-3002   	; 0x3390 <main+0x876>
		{
			LCD_Clear();
    3f4a:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
			LCD_SendString("loading...");
    3f4e:	86 ef       	ldi	r24, 0xF6	; 246
    3f50:	90 e0       	ldi	r25, 0x00	; 0
    3f52:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
    3f56:	fe 01       	movw	r30, r28
    3f58:	eb 5e       	subi	r30, 0xEB	; 235
    3f5a:	fe 4f       	sbci	r31, 0xFE	; 254
    3f5c:	80 e0       	ldi	r24, 0x00	; 0
    3f5e:	90 e0       	ldi	r25, 0x00	; 0
    3f60:	aa ef       	ldi	r26, 0xFA	; 250
    3f62:	b4 e4       	ldi	r27, 0x44	; 68
    3f64:	80 83       	st	Z, r24
    3f66:	91 83       	std	Z+1, r25	; 0x01
    3f68:	a2 83       	std	Z+2, r26	; 0x02
    3f6a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f6c:	8e 01       	movw	r16, r28
    3f6e:	0f 5e       	subi	r16, 0xEF	; 239
    3f70:	1e 4f       	sbci	r17, 0xFE	; 254
    3f72:	fe 01       	movw	r30, r28
    3f74:	eb 5e       	subi	r30, 0xEB	; 235
    3f76:	fe 4f       	sbci	r31, 0xFE	; 254
    3f78:	60 81       	ld	r22, Z
    3f7a:	71 81       	ldd	r23, Z+1	; 0x01
    3f7c:	82 81       	ldd	r24, Z+2	; 0x02
    3f7e:	93 81       	ldd	r25, Z+3	; 0x03
    3f80:	20 e0       	ldi	r18, 0x00	; 0
    3f82:	30 e0       	ldi	r19, 0x00	; 0
    3f84:	4a ef       	ldi	r20, 0xFA	; 250
    3f86:	54 e4       	ldi	r21, 0x44	; 68
    3f88:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3f8c:	dc 01       	movw	r26, r24
    3f8e:	cb 01       	movw	r24, r22
    3f90:	f8 01       	movw	r30, r16
    3f92:	80 83       	st	Z, r24
    3f94:	91 83       	std	Z+1, r25	; 0x01
    3f96:	a2 83       	std	Z+2, r26	; 0x02
    3f98:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3f9a:	fe 01       	movw	r30, r28
    3f9c:	ef 5e       	subi	r30, 0xEF	; 239
    3f9e:	fe 4f       	sbci	r31, 0xFE	; 254
    3fa0:	60 81       	ld	r22, Z
    3fa2:	71 81       	ldd	r23, Z+1	; 0x01
    3fa4:	82 81       	ldd	r24, Z+2	; 0x02
    3fa6:	93 81       	ldd	r25, Z+3	; 0x03
    3fa8:	20 e0       	ldi	r18, 0x00	; 0
    3faa:	30 e0       	ldi	r19, 0x00	; 0
    3fac:	40 e8       	ldi	r20, 0x80	; 128
    3fae:	5f e3       	ldi	r21, 0x3F	; 63
    3fb0:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3fb4:	88 23       	and	r24, r24
    3fb6:	44 f4       	brge	.+16     	; 0x3fc8 <main+0x14ae>
		__ticks = 1;
    3fb8:	fe 01       	movw	r30, r28
    3fba:	e1 5f       	subi	r30, 0xF1	; 241
    3fbc:	fe 4f       	sbci	r31, 0xFE	; 254
    3fbe:	81 e0       	ldi	r24, 0x01	; 1
    3fc0:	90 e0       	ldi	r25, 0x00	; 0
    3fc2:	91 83       	std	Z+1, r25	; 0x01
    3fc4:	80 83       	st	Z, r24
    3fc6:	64 c0       	rjmp	.+200    	; 0x4090 <main+0x1576>
	else if (__tmp > 65535)
    3fc8:	fe 01       	movw	r30, r28
    3fca:	ef 5e       	subi	r30, 0xEF	; 239
    3fcc:	fe 4f       	sbci	r31, 0xFE	; 254
    3fce:	60 81       	ld	r22, Z
    3fd0:	71 81       	ldd	r23, Z+1	; 0x01
    3fd2:	82 81       	ldd	r24, Z+2	; 0x02
    3fd4:	93 81       	ldd	r25, Z+3	; 0x03
    3fd6:	20 e0       	ldi	r18, 0x00	; 0
    3fd8:	3f ef       	ldi	r19, 0xFF	; 255
    3fda:	4f e7       	ldi	r20, 0x7F	; 127
    3fdc:	57 e4       	ldi	r21, 0x47	; 71
    3fde:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3fe2:	18 16       	cp	r1, r24
    3fe4:	0c f0       	brlt	.+2      	; 0x3fe8 <main+0x14ce>
    3fe6:	43 c0       	rjmp	.+134    	; 0x406e <main+0x1554>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3fe8:	fe 01       	movw	r30, r28
    3fea:	eb 5e       	subi	r30, 0xEB	; 235
    3fec:	fe 4f       	sbci	r31, 0xFE	; 254
    3fee:	60 81       	ld	r22, Z
    3ff0:	71 81       	ldd	r23, Z+1	; 0x01
    3ff2:	82 81       	ldd	r24, Z+2	; 0x02
    3ff4:	93 81       	ldd	r25, Z+3	; 0x03
    3ff6:	20 e0       	ldi	r18, 0x00	; 0
    3ff8:	30 e0       	ldi	r19, 0x00	; 0
    3ffa:	40 e2       	ldi	r20, 0x20	; 32
    3ffc:	51 e4       	ldi	r21, 0x41	; 65
    3ffe:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4002:	dc 01       	movw	r26, r24
    4004:	cb 01       	movw	r24, r22
    4006:	8e 01       	movw	r16, r28
    4008:	01 5f       	subi	r16, 0xF1	; 241
    400a:	1e 4f       	sbci	r17, 0xFE	; 254
    400c:	bc 01       	movw	r22, r24
    400e:	cd 01       	movw	r24, r26
    4010:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4014:	dc 01       	movw	r26, r24
    4016:	cb 01       	movw	r24, r22
    4018:	f8 01       	movw	r30, r16
    401a:	91 83       	std	Z+1, r25	; 0x01
    401c:	80 83       	st	Z, r24
    401e:	1f c0       	rjmp	.+62     	; 0x405e <main+0x1544>
    4020:	fe 01       	movw	r30, r28
    4022:	e3 5f       	subi	r30, 0xF3	; 243
    4024:	fe 4f       	sbci	r31, 0xFE	; 254
    4026:	88 ec       	ldi	r24, 0xC8	; 200
    4028:	90 e0       	ldi	r25, 0x00	; 0
    402a:	91 83       	std	Z+1, r25	; 0x01
    402c:	80 83       	st	Z, r24
    402e:	fe 01       	movw	r30, r28
    4030:	e3 5f       	subi	r30, 0xF3	; 243
    4032:	fe 4f       	sbci	r31, 0xFE	; 254
    4034:	80 81       	ld	r24, Z
    4036:	91 81       	ldd	r25, Z+1	; 0x01
    4038:	01 97       	sbiw	r24, 0x01	; 1
    403a:	f1 f7       	brne	.-4      	; 0x4038 <main+0x151e>
    403c:	fe 01       	movw	r30, r28
    403e:	e3 5f       	subi	r30, 0xF3	; 243
    4040:	fe 4f       	sbci	r31, 0xFE	; 254
    4042:	91 83       	std	Z+1, r25	; 0x01
    4044:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4046:	de 01       	movw	r26, r28
    4048:	a1 5f       	subi	r26, 0xF1	; 241
    404a:	be 4f       	sbci	r27, 0xFE	; 254
    404c:	fe 01       	movw	r30, r28
    404e:	e1 5f       	subi	r30, 0xF1	; 241
    4050:	fe 4f       	sbci	r31, 0xFE	; 254
    4052:	80 81       	ld	r24, Z
    4054:	91 81       	ldd	r25, Z+1	; 0x01
    4056:	01 97       	sbiw	r24, 0x01	; 1
    4058:	11 96       	adiw	r26, 0x01	; 1
    405a:	9c 93       	st	X, r25
    405c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    405e:	fe 01       	movw	r30, r28
    4060:	e1 5f       	subi	r30, 0xF1	; 241
    4062:	fe 4f       	sbci	r31, 0xFE	; 254
    4064:	80 81       	ld	r24, Z
    4066:	91 81       	ldd	r25, Z+1	; 0x01
    4068:	00 97       	sbiw	r24, 0x00	; 0
    406a:	d1 f6       	brne	.-76     	; 0x4020 <main+0x1506>
    406c:	63 c9       	rjmp	.-3386   	; 0x3334 <main+0x81a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    406e:	8e 01       	movw	r16, r28
    4070:	01 5f       	subi	r16, 0xF1	; 241
    4072:	1e 4f       	sbci	r17, 0xFE	; 254
    4074:	fe 01       	movw	r30, r28
    4076:	ef 5e       	subi	r30, 0xEF	; 239
    4078:	fe 4f       	sbci	r31, 0xFE	; 254
    407a:	60 81       	ld	r22, Z
    407c:	71 81       	ldd	r23, Z+1	; 0x01
    407e:	82 81       	ldd	r24, Z+2	; 0x02
    4080:	93 81       	ldd	r25, Z+3	; 0x03
    4082:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4086:	dc 01       	movw	r26, r24
    4088:	cb 01       	movw	r24, r22
    408a:	f8 01       	movw	r30, r16
    408c:	91 83       	std	Z+1, r25	; 0x01
    408e:	80 83       	st	Z, r24
    4090:	de 01       	movw	r26, r28
    4092:	a5 5f       	subi	r26, 0xF5	; 245
    4094:	be 4f       	sbci	r27, 0xFE	; 254
    4096:	fe 01       	movw	r30, r28
    4098:	e1 5f       	subi	r30, 0xF1	; 241
    409a:	fe 4f       	sbci	r31, 0xFE	; 254
    409c:	80 81       	ld	r24, Z
    409e:	91 81       	ldd	r25, Z+1	; 0x01
    40a0:	11 96       	adiw	r26, 0x01	; 1
    40a2:	9c 93       	st	X, r25
    40a4:	8e 93       	st	-X, r24
    40a6:	fe 01       	movw	r30, r28
    40a8:	e5 5f       	subi	r30, 0xF5	; 245
    40aa:	fe 4f       	sbci	r31, 0xFE	; 254
    40ac:	80 81       	ld	r24, Z
    40ae:	91 81       	ldd	r25, Z+1	; 0x01
    40b0:	01 97       	sbiw	r24, 0x01	; 1
    40b2:	f1 f7       	brne	.-4      	; 0x40b0 <main+0x1596>
    40b4:	fe 01       	movw	r30, r28
    40b6:	e5 5f       	subi	r30, 0xF5	; 245
    40b8:	fe 4f       	sbci	r31, 0xFE	; 254
    40ba:	91 83       	std	Z+1, r25	; 0x01
    40bc:	80 83       	st	Z, r24
    40be:	3a c9       	rjmp	.-3468   	; 0x3334 <main+0x81a>
*************************************************************************************************
***************************************------(stop watch)-----************************************
*************************************************************************************************
*************************************************************************************************
*************************************************************************************************/
if (mode==2)
    40c0:	fe 01       	movw	r30, r28
    40c2:	e7 53       	subi	r30, 0x37	; 55
    40c4:	fe 4f       	sbci	r31, 0xFE	; 254
    40c6:	80 81       	ld	r24, Z
    40c8:	82 30       	cpi	r24, 0x02	; 2
    40ca:	11 f0       	breq	.+4      	; 0x40d0 <main+0x15b6>
    40cc:	0c 94 9f 2b 	jmp	0x573e	; 0x573e <main+0x2c24>
{
	while(1)
	{
		LCD_Clear();
    40d0:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
		Keypad_Inti();
    40d4:	0e 94 69 10 	call	0x20d2	; 0x20d2 <Keypad_Inti>
	SetPort_Dir(DIO_PORTA, PORT_OUT);
    40d8:	80 e0       	ldi	r24, 0x00	; 0
    40da:	6f ef       	ldi	r22, 0xFF	; 255
    40dc:	0e 94 80 06 	call	0xd00	; 0xd00 <SetPort_Dir>
	SetPort_Dir(DIO_PORTC, PORT_OUT);
    40e0:	82 e0       	ldi	r24, 0x02	; 2
    40e2:	6f ef       	ldi	r22, 0xFF	; 255
    40e4:	0e 94 80 06 	call	0xd00	; 0xd00 <SetPort_Dir>
	SetPort_Dir(DIO_PORTD, PORT_OUT);
    40e8:	83 e0       	ldi	r24, 0x03	; 3
    40ea:	6f ef       	ldi	r22, 0xFF	; 255
    40ec:	0e 94 80 06 	call	0xd00	; 0xd00 <SetPort_Dir>

	LCD_SendString("reset(1) pause(2) ");
    40f0:	81 e0       	ldi	r24, 0x01	; 1
    40f2:	91 e0       	ldi	r25, 0x01	; 1
    40f4:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
	LCD_GoTO(2, 0);
    40f8:	82 e0       	ldi	r24, 0x02	; 2
    40fa:	60 e0       	ldi	r22, 0x00	; 0
    40fc:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <LCD_GoTO>
	LCD_SendString("resume(3)");
    4100:	84 e1       	ldi	r24, 0x14	; 20
    4102:	91 e0       	ldi	r25, 0x01	; 1
    4104:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>

	while(1)
		{
		for(u8 hour =0;(hour<=12)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;hour++)
    4108:	fe 01       	movw	r30, r28
    410a:	e1 54       	subi	r30, 0x41	; 65
    410c:	fe 4f       	sbci	r31, 0xFE	; 254
    410e:	10 82       	st	Z, r1
    4110:	0c 94 85 2b 	jmp	0x570a	; 0x570a <main+0x2bf0>
			{
			for( u8 minute =0;(minute<60)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;minute++)
    4114:	fe 01       	movw	r30, r28
    4116:	e2 54       	subi	r30, 0x42	; 66
    4118:	fe 4f       	sbci	r31, 0xFE	; 254
    411a:	10 82       	st	Z, r1
    411c:	0c 94 6e 2b 	jmp	0x56dc	; 0x56dc <main+0x2bc2>
				{
				for( u8 second =0;(second<60)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;second++)
    4120:	fe 01       	movw	r30, r28
    4122:	e3 54       	subi	r30, 0x43	; 67
    4124:	fe 4f       	sbci	r31, 0xFE	; 254
    4126:	10 82       	st	Z, r1
    4128:	0c 94 57 2b 	jmp	0x56ae	; 0x56ae <main+0x2b94>
					{
							int n=20;
    412c:	fe 01       	movw	r30, r28
    412e:	e5 54       	subi	r30, 0x45	; 69
    4130:	fe 4f       	sbci	r31, 0xFE	; 254
    4132:	84 e1       	ldi	r24, 0x14	; 20
    4134:	90 e0       	ldi	r25, 0x00	; 0
    4136:	91 83       	std	Z+1, r25	; 0x01
    4138:	80 83       	st	Z, r24
    413a:	3e c5       	rjmp	.+2684   	; 0x4bb8 <main+0x209e>

								while (n--)
								{
									SetPin_Val(DIO_PORTD, DIO_PIN3, PIN_HIGH);
    413c:	83 e0       	ldi	r24, 0x03	; 3
    413e:	63 e0       	ldi	r22, 0x03	; 3
    4140:	41 e0       	ldi	r20, 0x01	; 1
    4142:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN4, PIN_HIGH);
    4146:	83 e0       	ldi	r24, 0x03	; 3
    4148:	64 e0       	ldi	r22, 0x04	; 4
    414a:	41 e0       	ldi	r20, 0x01	; 1
    414c:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_HIGH);
    4150:	83 e0       	ldi	r24, 0x03	; 3
    4152:	65 e0       	ldi	r22, 0x05	; 5
    4154:	41 e0       	ldi	r20, 0x01	; 1
    4156:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_HIGH);
    415a:	83 e0       	ldi	r24, 0x03	; 3
    415c:	65 e0       	ldi	r22, 0x05	; 5
    415e:	41 e0       	ldi	r20, 0x01	; 1
    4160:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN7, PIN_HIGH);
    4164:	83 e0       	ldi	r24, 0x03	; 3
    4166:	67 e0       	ldi	r22, 0x07	; 7
    4168:	41 e0       	ldi	r20, 0x01	; 1
    416a:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN2, PIN_LOW);
    416e:	83 e0       	ldi	r24, 0x03	; 3
    4170:	62 e0       	ldi	r22, 0x02	; 2
    4172:	40 e0       	ldi	r20, 0x00	; 0
    4174:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									PORTA=seg(second%10);
    4178:	0b e3       	ldi	r16, 0x3B	; 59
    417a:	10 e0       	ldi	r17, 0x00	; 0
    417c:	fe 01       	movw	r30, r28
    417e:	e3 54       	subi	r30, 0x43	; 67
    4180:	fe 4f       	sbci	r31, 0xFE	; 254
    4182:	80 81       	ld	r24, Z
    4184:	9a e0       	ldi	r25, 0x0A	; 10
    4186:	69 2f       	mov	r22, r25
    4188:	0e 94 87 33 	call	0x670e	; 0x670e <__udivmodqi4>
    418c:	89 2f       	mov	r24, r25
    418e:	0e 94 8e 0a 	call	0x151c	; 0x151c <seg>
    4192:	f8 01       	movw	r30, r16
    4194:	80 83       	st	Z, r24
    4196:	fe 01       	movw	r30, r28
    4198:	e9 5f       	subi	r30, 0xF9	; 249
    419a:	fe 4f       	sbci	r31, 0xFE	; 254
    419c:	80 e0       	ldi	r24, 0x00	; 0
    419e:	90 e0       	ldi	r25, 0x00	; 0
    41a0:	a0 e0       	ldi	r26, 0x00	; 0
    41a2:	b1 e4       	ldi	r27, 0x41	; 65
    41a4:	80 83       	st	Z, r24
    41a6:	91 83       	std	Z+1, r25	; 0x01
    41a8:	a2 83       	std	Z+2, r26	; 0x02
    41aa:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    41ac:	8e 01       	movw	r16, r28
    41ae:	0d 5f       	subi	r16, 0xFD	; 253
    41b0:	1e 4f       	sbci	r17, 0xFE	; 254
    41b2:	fe 01       	movw	r30, r28
    41b4:	e9 5f       	subi	r30, 0xF9	; 249
    41b6:	fe 4f       	sbci	r31, 0xFE	; 254
    41b8:	60 81       	ld	r22, Z
    41ba:	71 81       	ldd	r23, Z+1	; 0x01
    41bc:	82 81       	ldd	r24, Z+2	; 0x02
    41be:	93 81       	ldd	r25, Z+3	; 0x03
    41c0:	20 e0       	ldi	r18, 0x00	; 0
    41c2:	30 e0       	ldi	r19, 0x00	; 0
    41c4:	4a ef       	ldi	r20, 0xFA	; 250
    41c6:	54 e4       	ldi	r21, 0x44	; 68
    41c8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    41cc:	dc 01       	movw	r26, r24
    41ce:	cb 01       	movw	r24, r22
    41d0:	f8 01       	movw	r30, r16
    41d2:	80 83       	st	Z, r24
    41d4:	91 83       	std	Z+1, r25	; 0x01
    41d6:	a2 83       	std	Z+2, r26	; 0x02
    41d8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    41da:	fe 01       	movw	r30, r28
    41dc:	ed 5f       	subi	r30, 0xFD	; 253
    41de:	fe 4f       	sbci	r31, 0xFE	; 254
    41e0:	60 81       	ld	r22, Z
    41e2:	71 81       	ldd	r23, Z+1	; 0x01
    41e4:	82 81       	ldd	r24, Z+2	; 0x02
    41e6:	93 81       	ldd	r25, Z+3	; 0x03
    41e8:	20 e0       	ldi	r18, 0x00	; 0
    41ea:	30 e0       	ldi	r19, 0x00	; 0
    41ec:	40 e8       	ldi	r20, 0x80	; 128
    41ee:	5f e3       	ldi	r21, 0x3F	; 63
    41f0:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    41f4:	88 23       	and	r24, r24
    41f6:	44 f4       	brge	.+16     	; 0x4208 <main+0x16ee>
		__ticks = 1;
    41f8:	fe 01       	movw	r30, r28
    41fa:	ef 5f       	subi	r30, 0xFF	; 255
    41fc:	fe 4f       	sbci	r31, 0xFE	; 254
    41fe:	81 e0       	ldi	r24, 0x01	; 1
    4200:	90 e0       	ldi	r25, 0x00	; 0
    4202:	91 83       	std	Z+1, r25	; 0x01
    4204:	80 83       	st	Z, r24
    4206:	64 c0       	rjmp	.+200    	; 0x42d0 <main+0x17b6>
	else if (__tmp > 65535)
    4208:	fe 01       	movw	r30, r28
    420a:	ed 5f       	subi	r30, 0xFD	; 253
    420c:	fe 4f       	sbci	r31, 0xFE	; 254
    420e:	60 81       	ld	r22, Z
    4210:	71 81       	ldd	r23, Z+1	; 0x01
    4212:	82 81       	ldd	r24, Z+2	; 0x02
    4214:	93 81       	ldd	r25, Z+3	; 0x03
    4216:	20 e0       	ldi	r18, 0x00	; 0
    4218:	3f ef       	ldi	r19, 0xFF	; 255
    421a:	4f e7       	ldi	r20, 0x7F	; 127
    421c:	57 e4       	ldi	r21, 0x47	; 71
    421e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4222:	18 16       	cp	r1, r24
    4224:	0c f0       	brlt	.+2      	; 0x4228 <main+0x170e>
    4226:	43 c0       	rjmp	.+134    	; 0x42ae <main+0x1794>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4228:	fe 01       	movw	r30, r28
    422a:	e9 5f       	subi	r30, 0xF9	; 249
    422c:	fe 4f       	sbci	r31, 0xFE	; 254
    422e:	60 81       	ld	r22, Z
    4230:	71 81       	ldd	r23, Z+1	; 0x01
    4232:	82 81       	ldd	r24, Z+2	; 0x02
    4234:	93 81       	ldd	r25, Z+3	; 0x03
    4236:	20 e0       	ldi	r18, 0x00	; 0
    4238:	30 e0       	ldi	r19, 0x00	; 0
    423a:	40 e2       	ldi	r20, 0x20	; 32
    423c:	51 e4       	ldi	r21, 0x41	; 65
    423e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4242:	dc 01       	movw	r26, r24
    4244:	cb 01       	movw	r24, r22
    4246:	8e 01       	movw	r16, r28
    4248:	0f 5f       	subi	r16, 0xFF	; 255
    424a:	1e 4f       	sbci	r17, 0xFE	; 254
    424c:	bc 01       	movw	r22, r24
    424e:	cd 01       	movw	r24, r26
    4250:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4254:	dc 01       	movw	r26, r24
    4256:	cb 01       	movw	r24, r22
    4258:	f8 01       	movw	r30, r16
    425a:	91 83       	std	Z+1, r25	; 0x01
    425c:	80 83       	st	Z, r24
    425e:	1f c0       	rjmp	.+62     	; 0x429e <main+0x1784>
    4260:	fe 01       	movw	r30, r28
    4262:	e1 50       	subi	r30, 0x01	; 1
    4264:	ff 4f       	sbci	r31, 0xFF	; 255
    4266:	88 ec       	ldi	r24, 0xC8	; 200
    4268:	90 e0       	ldi	r25, 0x00	; 0
    426a:	91 83       	std	Z+1, r25	; 0x01
    426c:	80 83       	st	Z, r24
    426e:	fe 01       	movw	r30, r28
    4270:	e1 50       	subi	r30, 0x01	; 1
    4272:	ff 4f       	sbci	r31, 0xFF	; 255
    4274:	80 81       	ld	r24, Z
    4276:	91 81       	ldd	r25, Z+1	; 0x01
    4278:	01 97       	sbiw	r24, 0x01	; 1
    427a:	f1 f7       	brne	.-4      	; 0x4278 <main+0x175e>
    427c:	fe 01       	movw	r30, r28
    427e:	e1 50       	subi	r30, 0x01	; 1
    4280:	ff 4f       	sbci	r31, 0xFF	; 255
    4282:	91 83       	std	Z+1, r25	; 0x01
    4284:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4286:	de 01       	movw	r26, r28
    4288:	af 5f       	subi	r26, 0xFF	; 255
    428a:	be 4f       	sbci	r27, 0xFE	; 254
    428c:	fe 01       	movw	r30, r28
    428e:	ef 5f       	subi	r30, 0xFF	; 255
    4290:	fe 4f       	sbci	r31, 0xFE	; 254
    4292:	80 81       	ld	r24, Z
    4294:	91 81       	ldd	r25, Z+1	; 0x01
    4296:	01 97       	sbiw	r24, 0x01	; 1
    4298:	11 96       	adiw	r26, 0x01	; 1
    429a:	9c 93       	st	X, r25
    429c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    429e:	fe 01       	movw	r30, r28
    42a0:	ef 5f       	subi	r30, 0xFF	; 255
    42a2:	fe 4f       	sbci	r31, 0xFE	; 254
    42a4:	80 81       	ld	r24, Z
    42a6:	91 81       	ldd	r25, Z+1	; 0x01
    42a8:	00 97       	sbiw	r24, 0x00	; 0
    42aa:	d1 f6       	brne	.-76     	; 0x4260 <main+0x1746>
    42ac:	27 c0       	rjmp	.+78     	; 0x42fc <main+0x17e2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    42ae:	8e 01       	movw	r16, r28
    42b0:	0f 5f       	subi	r16, 0xFF	; 255
    42b2:	1e 4f       	sbci	r17, 0xFE	; 254
    42b4:	fe 01       	movw	r30, r28
    42b6:	ed 5f       	subi	r30, 0xFD	; 253
    42b8:	fe 4f       	sbci	r31, 0xFE	; 254
    42ba:	60 81       	ld	r22, Z
    42bc:	71 81       	ldd	r23, Z+1	; 0x01
    42be:	82 81       	ldd	r24, Z+2	; 0x02
    42c0:	93 81       	ldd	r25, Z+3	; 0x03
    42c2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    42c6:	dc 01       	movw	r26, r24
    42c8:	cb 01       	movw	r24, r22
    42ca:	f8 01       	movw	r30, r16
    42cc:	91 83       	std	Z+1, r25	; 0x01
    42ce:	80 83       	st	Z, r24
    42d0:	de 01       	movw	r26, r28
    42d2:	a3 50       	subi	r26, 0x03	; 3
    42d4:	bf 4f       	sbci	r27, 0xFF	; 255
    42d6:	fe 01       	movw	r30, r28
    42d8:	ef 5f       	subi	r30, 0xFF	; 255
    42da:	fe 4f       	sbci	r31, 0xFE	; 254
    42dc:	80 81       	ld	r24, Z
    42de:	91 81       	ldd	r25, Z+1	; 0x01
    42e0:	8d 93       	st	X+, r24
    42e2:	9c 93       	st	X, r25
    42e4:	fe 01       	movw	r30, r28
    42e6:	e3 50       	subi	r30, 0x03	; 3
    42e8:	ff 4f       	sbci	r31, 0xFF	; 255
    42ea:	80 81       	ld	r24, Z
    42ec:	91 81       	ldd	r25, Z+1	; 0x01
    42ee:	01 97       	sbiw	r24, 0x01	; 1
    42f0:	f1 f7       	brne	.-4      	; 0x42ee <main+0x17d4>
    42f2:	fe 01       	movw	r30, r28
    42f4:	e3 50       	subi	r30, 0x03	; 3
    42f6:	ff 4f       	sbci	r31, 0xFF	; 255
    42f8:	91 83       	std	Z+1, r25	; 0x01
    42fa:	80 83       	st	Z, r24
									_delay_ms(50/6);
									SetPin_Val(DIO_PORTD, DIO_PIN2, PIN_HIGH);
    42fc:	83 e0       	ldi	r24, 0x03	; 3
    42fe:	62 e0       	ldi	r22, 0x02	; 2
    4300:	41 e0       	ldi	r20, 0x01	; 1
    4302:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN4, PIN_HIGH);
    4306:	83 e0       	ldi	r24, 0x03	; 3
    4308:	64 e0       	ldi	r22, 0x04	; 4
    430a:	41 e0       	ldi	r20, 0x01	; 1
    430c:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_HIGH);
    4310:	83 e0       	ldi	r24, 0x03	; 3
    4312:	65 e0       	ldi	r22, 0x05	; 5
    4314:	41 e0       	ldi	r20, 0x01	; 1
    4316:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN6, PIN_HIGH);
    431a:	83 e0       	ldi	r24, 0x03	; 3
    431c:	66 e0       	ldi	r22, 0x06	; 6
    431e:	41 e0       	ldi	r20, 0x01	; 1
    4320:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN7, PIN_HIGH);
    4324:	83 e0       	ldi	r24, 0x03	; 3
    4326:	67 e0       	ldi	r22, 0x07	; 7
    4328:	41 e0       	ldi	r20, 0x01	; 1
    432a:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN3, PIN_LOW);
    432e:	83 e0       	ldi	r24, 0x03	; 3
    4330:	63 e0       	ldi	r22, 0x03	; 3
    4332:	40 e0       	ldi	r20, 0x00	; 0
    4334:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									PORTA=seg(second/10);
    4338:	0b e3       	ldi	r16, 0x3B	; 59
    433a:	10 e0       	ldi	r17, 0x00	; 0
    433c:	fe 01       	movw	r30, r28
    433e:	e3 54       	subi	r30, 0x43	; 67
    4340:	fe 4f       	sbci	r31, 0xFE	; 254
    4342:	80 81       	ld	r24, Z
    4344:	9a e0       	ldi	r25, 0x0A	; 10
    4346:	69 2f       	mov	r22, r25
    4348:	0e 94 87 33 	call	0x670e	; 0x670e <__udivmodqi4>
    434c:	0e 94 8e 0a 	call	0x151c	; 0x151c <seg>
    4350:	f8 01       	movw	r30, r16
    4352:	80 83       	st	Z, r24
    4354:	fe 01       	movw	r30, r28
    4356:	e7 50       	subi	r30, 0x07	; 7
    4358:	ff 4f       	sbci	r31, 0xFF	; 255
    435a:	80 e0       	ldi	r24, 0x00	; 0
    435c:	90 e0       	ldi	r25, 0x00	; 0
    435e:	a0 e0       	ldi	r26, 0x00	; 0
    4360:	b1 e4       	ldi	r27, 0x41	; 65
    4362:	80 83       	st	Z, r24
    4364:	91 83       	std	Z+1, r25	; 0x01
    4366:	a2 83       	std	Z+2, r26	; 0x02
    4368:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    436a:	8e 01       	movw	r16, r28
    436c:	0b 50       	subi	r16, 0x0B	; 11
    436e:	1f 4f       	sbci	r17, 0xFF	; 255
    4370:	fe 01       	movw	r30, r28
    4372:	e7 50       	subi	r30, 0x07	; 7
    4374:	ff 4f       	sbci	r31, 0xFF	; 255
    4376:	60 81       	ld	r22, Z
    4378:	71 81       	ldd	r23, Z+1	; 0x01
    437a:	82 81       	ldd	r24, Z+2	; 0x02
    437c:	93 81       	ldd	r25, Z+3	; 0x03
    437e:	20 e0       	ldi	r18, 0x00	; 0
    4380:	30 e0       	ldi	r19, 0x00	; 0
    4382:	4a ef       	ldi	r20, 0xFA	; 250
    4384:	54 e4       	ldi	r21, 0x44	; 68
    4386:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    438a:	dc 01       	movw	r26, r24
    438c:	cb 01       	movw	r24, r22
    438e:	f8 01       	movw	r30, r16
    4390:	80 83       	st	Z, r24
    4392:	91 83       	std	Z+1, r25	; 0x01
    4394:	a2 83       	std	Z+2, r26	; 0x02
    4396:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4398:	fe 01       	movw	r30, r28
    439a:	eb 50       	subi	r30, 0x0B	; 11
    439c:	ff 4f       	sbci	r31, 0xFF	; 255
    439e:	60 81       	ld	r22, Z
    43a0:	71 81       	ldd	r23, Z+1	; 0x01
    43a2:	82 81       	ldd	r24, Z+2	; 0x02
    43a4:	93 81       	ldd	r25, Z+3	; 0x03
    43a6:	20 e0       	ldi	r18, 0x00	; 0
    43a8:	30 e0       	ldi	r19, 0x00	; 0
    43aa:	40 e8       	ldi	r20, 0x80	; 128
    43ac:	5f e3       	ldi	r21, 0x3F	; 63
    43ae:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    43b2:	88 23       	and	r24, r24
    43b4:	44 f4       	brge	.+16     	; 0x43c6 <main+0x18ac>
		__ticks = 1;
    43b6:	fe 01       	movw	r30, r28
    43b8:	ed 50       	subi	r30, 0x0D	; 13
    43ba:	ff 4f       	sbci	r31, 0xFF	; 255
    43bc:	81 e0       	ldi	r24, 0x01	; 1
    43be:	90 e0       	ldi	r25, 0x00	; 0
    43c0:	91 83       	std	Z+1, r25	; 0x01
    43c2:	80 83       	st	Z, r24
    43c4:	64 c0       	rjmp	.+200    	; 0x448e <main+0x1974>
	else if (__tmp > 65535)
    43c6:	fe 01       	movw	r30, r28
    43c8:	eb 50       	subi	r30, 0x0B	; 11
    43ca:	ff 4f       	sbci	r31, 0xFF	; 255
    43cc:	60 81       	ld	r22, Z
    43ce:	71 81       	ldd	r23, Z+1	; 0x01
    43d0:	82 81       	ldd	r24, Z+2	; 0x02
    43d2:	93 81       	ldd	r25, Z+3	; 0x03
    43d4:	20 e0       	ldi	r18, 0x00	; 0
    43d6:	3f ef       	ldi	r19, 0xFF	; 255
    43d8:	4f e7       	ldi	r20, 0x7F	; 127
    43da:	57 e4       	ldi	r21, 0x47	; 71
    43dc:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    43e0:	18 16       	cp	r1, r24
    43e2:	0c f0       	brlt	.+2      	; 0x43e6 <main+0x18cc>
    43e4:	43 c0       	rjmp	.+134    	; 0x446c <main+0x1952>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    43e6:	fe 01       	movw	r30, r28
    43e8:	e7 50       	subi	r30, 0x07	; 7
    43ea:	ff 4f       	sbci	r31, 0xFF	; 255
    43ec:	60 81       	ld	r22, Z
    43ee:	71 81       	ldd	r23, Z+1	; 0x01
    43f0:	82 81       	ldd	r24, Z+2	; 0x02
    43f2:	93 81       	ldd	r25, Z+3	; 0x03
    43f4:	20 e0       	ldi	r18, 0x00	; 0
    43f6:	30 e0       	ldi	r19, 0x00	; 0
    43f8:	40 e2       	ldi	r20, 0x20	; 32
    43fa:	51 e4       	ldi	r21, 0x41	; 65
    43fc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4400:	dc 01       	movw	r26, r24
    4402:	cb 01       	movw	r24, r22
    4404:	8e 01       	movw	r16, r28
    4406:	0d 50       	subi	r16, 0x0D	; 13
    4408:	1f 4f       	sbci	r17, 0xFF	; 255
    440a:	bc 01       	movw	r22, r24
    440c:	cd 01       	movw	r24, r26
    440e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4412:	dc 01       	movw	r26, r24
    4414:	cb 01       	movw	r24, r22
    4416:	f8 01       	movw	r30, r16
    4418:	91 83       	std	Z+1, r25	; 0x01
    441a:	80 83       	st	Z, r24
    441c:	1f c0       	rjmp	.+62     	; 0x445c <main+0x1942>
    441e:	fe 01       	movw	r30, r28
    4420:	ef 50       	subi	r30, 0x0F	; 15
    4422:	ff 4f       	sbci	r31, 0xFF	; 255
    4424:	88 ec       	ldi	r24, 0xC8	; 200
    4426:	90 e0       	ldi	r25, 0x00	; 0
    4428:	91 83       	std	Z+1, r25	; 0x01
    442a:	80 83       	st	Z, r24
    442c:	fe 01       	movw	r30, r28
    442e:	ef 50       	subi	r30, 0x0F	; 15
    4430:	ff 4f       	sbci	r31, 0xFF	; 255
    4432:	80 81       	ld	r24, Z
    4434:	91 81       	ldd	r25, Z+1	; 0x01
    4436:	01 97       	sbiw	r24, 0x01	; 1
    4438:	f1 f7       	brne	.-4      	; 0x4436 <main+0x191c>
    443a:	fe 01       	movw	r30, r28
    443c:	ef 50       	subi	r30, 0x0F	; 15
    443e:	ff 4f       	sbci	r31, 0xFF	; 255
    4440:	91 83       	std	Z+1, r25	; 0x01
    4442:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4444:	de 01       	movw	r26, r28
    4446:	ad 50       	subi	r26, 0x0D	; 13
    4448:	bf 4f       	sbci	r27, 0xFF	; 255
    444a:	fe 01       	movw	r30, r28
    444c:	ed 50       	subi	r30, 0x0D	; 13
    444e:	ff 4f       	sbci	r31, 0xFF	; 255
    4450:	80 81       	ld	r24, Z
    4452:	91 81       	ldd	r25, Z+1	; 0x01
    4454:	01 97       	sbiw	r24, 0x01	; 1
    4456:	11 96       	adiw	r26, 0x01	; 1
    4458:	9c 93       	st	X, r25
    445a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    445c:	fe 01       	movw	r30, r28
    445e:	ed 50       	subi	r30, 0x0D	; 13
    4460:	ff 4f       	sbci	r31, 0xFF	; 255
    4462:	80 81       	ld	r24, Z
    4464:	91 81       	ldd	r25, Z+1	; 0x01
    4466:	00 97       	sbiw	r24, 0x00	; 0
    4468:	d1 f6       	brne	.-76     	; 0x441e <main+0x1904>
    446a:	27 c0       	rjmp	.+78     	; 0x44ba <main+0x19a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    446c:	8e 01       	movw	r16, r28
    446e:	0d 50       	subi	r16, 0x0D	; 13
    4470:	1f 4f       	sbci	r17, 0xFF	; 255
    4472:	fe 01       	movw	r30, r28
    4474:	eb 50       	subi	r30, 0x0B	; 11
    4476:	ff 4f       	sbci	r31, 0xFF	; 255
    4478:	60 81       	ld	r22, Z
    447a:	71 81       	ldd	r23, Z+1	; 0x01
    447c:	82 81       	ldd	r24, Z+2	; 0x02
    447e:	93 81       	ldd	r25, Z+3	; 0x03
    4480:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4484:	dc 01       	movw	r26, r24
    4486:	cb 01       	movw	r24, r22
    4488:	f8 01       	movw	r30, r16
    448a:	91 83       	std	Z+1, r25	; 0x01
    448c:	80 83       	st	Z, r24
    448e:	de 01       	movw	r26, r28
    4490:	a1 51       	subi	r26, 0x11	; 17
    4492:	bf 4f       	sbci	r27, 0xFF	; 255
    4494:	fe 01       	movw	r30, r28
    4496:	ed 50       	subi	r30, 0x0D	; 13
    4498:	ff 4f       	sbci	r31, 0xFF	; 255
    449a:	80 81       	ld	r24, Z
    449c:	91 81       	ldd	r25, Z+1	; 0x01
    449e:	8d 93       	st	X+, r24
    44a0:	9c 93       	st	X, r25
    44a2:	fe 01       	movw	r30, r28
    44a4:	e1 51       	subi	r30, 0x11	; 17
    44a6:	ff 4f       	sbci	r31, 0xFF	; 255
    44a8:	80 81       	ld	r24, Z
    44aa:	91 81       	ldd	r25, Z+1	; 0x01
    44ac:	01 97       	sbiw	r24, 0x01	; 1
    44ae:	f1 f7       	brne	.-4      	; 0x44ac <main+0x1992>
    44b0:	fe 01       	movw	r30, r28
    44b2:	e1 51       	subi	r30, 0x11	; 17
    44b4:	ff 4f       	sbci	r31, 0xFF	; 255
    44b6:	91 83       	std	Z+1, r25	; 0x01
    44b8:	80 83       	st	Z, r24
									_delay_ms(50/6);
									SetPin_Val(DIO_PORTD, DIO_PIN2, PIN_HIGH);
    44ba:	83 e0       	ldi	r24, 0x03	; 3
    44bc:	62 e0       	ldi	r22, 0x02	; 2
    44be:	41 e0       	ldi	r20, 0x01	; 1
    44c0:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN3, PIN_HIGH);
    44c4:	83 e0       	ldi	r24, 0x03	; 3
    44c6:	63 e0       	ldi	r22, 0x03	; 3
    44c8:	41 e0       	ldi	r20, 0x01	; 1
    44ca:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_HIGH);
    44ce:	83 e0       	ldi	r24, 0x03	; 3
    44d0:	65 e0       	ldi	r22, 0x05	; 5
    44d2:	41 e0       	ldi	r20, 0x01	; 1
    44d4:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN6, PIN_HIGH);
    44d8:	83 e0       	ldi	r24, 0x03	; 3
    44da:	66 e0       	ldi	r22, 0x06	; 6
    44dc:	41 e0       	ldi	r20, 0x01	; 1
    44de:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN7, PIN_HIGH);
    44e2:	83 e0       	ldi	r24, 0x03	; 3
    44e4:	67 e0       	ldi	r22, 0x07	; 7
    44e6:	41 e0       	ldi	r20, 0x01	; 1
    44e8:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN4, PIN_LOW);
    44ec:	83 e0       	ldi	r24, 0x03	; 3
    44ee:	64 e0       	ldi	r22, 0x04	; 4
    44f0:	40 e0       	ldi	r20, 0x00	; 0
    44f2:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									PORTA=seg(minute%10);
    44f6:	0b e3       	ldi	r16, 0x3B	; 59
    44f8:	10 e0       	ldi	r17, 0x00	; 0
    44fa:	fe 01       	movw	r30, r28
    44fc:	e2 54       	subi	r30, 0x42	; 66
    44fe:	fe 4f       	sbci	r31, 0xFE	; 254
    4500:	80 81       	ld	r24, Z
    4502:	9a e0       	ldi	r25, 0x0A	; 10
    4504:	69 2f       	mov	r22, r25
    4506:	0e 94 87 33 	call	0x670e	; 0x670e <__udivmodqi4>
    450a:	89 2f       	mov	r24, r25
    450c:	0e 94 8e 0a 	call	0x151c	; 0x151c <seg>
    4510:	f8 01       	movw	r30, r16
    4512:	80 83       	st	Z, r24
    4514:	fe 01       	movw	r30, r28
    4516:	e5 51       	subi	r30, 0x15	; 21
    4518:	ff 4f       	sbci	r31, 0xFF	; 255
    451a:	80 e0       	ldi	r24, 0x00	; 0
    451c:	90 e0       	ldi	r25, 0x00	; 0
    451e:	a0 e0       	ldi	r26, 0x00	; 0
    4520:	b1 e4       	ldi	r27, 0x41	; 65
    4522:	80 83       	st	Z, r24
    4524:	91 83       	std	Z+1, r25	; 0x01
    4526:	a2 83       	std	Z+2, r26	; 0x02
    4528:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    452a:	8e 01       	movw	r16, r28
    452c:	09 51       	subi	r16, 0x19	; 25
    452e:	1f 4f       	sbci	r17, 0xFF	; 255
    4530:	fe 01       	movw	r30, r28
    4532:	e5 51       	subi	r30, 0x15	; 21
    4534:	ff 4f       	sbci	r31, 0xFF	; 255
    4536:	60 81       	ld	r22, Z
    4538:	71 81       	ldd	r23, Z+1	; 0x01
    453a:	82 81       	ldd	r24, Z+2	; 0x02
    453c:	93 81       	ldd	r25, Z+3	; 0x03
    453e:	20 e0       	ldi	r18, 0x00	; 0
    4540:	30 e0       	ldi	r19, 0x00	; 0
    4542:	4a ef       	ldi	r20, 0xFA	; 250
    4544:	54 e4       	ldi	r21, 0x44	; 68
    4546:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    454a:	dc 01       	movw	r26, r24
    454c:	cb 01       	movw	r24, r22
    454e:	f8 01       	movw	r30, r16
    4550:	80 83       	st	Z, r24
    4552:	91 83       	std	Z+1, r25	; 0x01
    4554:	a2 83       	std	Z+2, r26	; 0x02
    4556:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4558:	fe 01       	movw	r30, r28
    455a:	e9 51       	subi	r30, 0x19	; 25
    455c:	ff 4f       	sbci	r31, 0xFF	; 255
    455e:	60 81       	ld	r22, Z
    4560:	71 81       	ldd	r23, Z+1	; 0x01
    4562:	82 81       	ldd	r24, Z+2	; 0x02
    4564:	93 81       	ldd	r25, Z+3	; 0x03
    4566:	20 e0       	ldi	r18, 0x00	; 0
    4568:	30 e0       	ldi	r19, 0x00	; 0
    456a:	40 e8       	ldi	r20, 0x80	; 128
    456c:	5f e3       	ldi	r21, 0x3F	; 63
    456e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4572:	88 23       	and	r24, r24
    4574:	44 f4       	brge	.+16     	; 0x4586 <main+0x1a6c>
		__ticks = 1;
    4576:	fe 01       	movw	r30, r28
    4578:	eb 51       	subi	r30, 0x1B	; 27
    457a:	ff 4f       	sbci	r31, 0xFF	; 255
    457c:	81 e0       	ldi	r24, 0x01	; 1
    457e:	90 e0       	ldi	r25, 0x00	; 0
    4580:	91 83       	std	Z+1, r25	; 0x01
    4582:	80 83       	st	Z, r24
    4584:	64 c0       	rjmp	.+200    	; 0x464e <main+0x1b34>
	else if (__tmp > 65535)
    4586:	fe 01       	movw	r30, r28
    4588:	e9 51       	subi	r30, 0x19	; 25
    458a:	ff 4f       	sbci	r31, 0xFF	; 255
    458c:	60 81       	ld	r22, Z
    458e:	71 81       	ldd	r23, Z+1	; 0x01
    4590:	82 81       	ldd	r24, Z+2	; 0x02
    4592:	93 81       	ldd	r25, Z+3	; 0x03
    4594:	20 e0       	ldi	r18, 0x00	; 0
    4596:	3f ef       	ldi	r19, 0xFF	; 255
    4598:	4f e7       	ldi	r20, 0x7F	; 127
    459a:	57 e4       	ldi	r21, 0x47	; 71
    459c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    45a0:	18 16       	cp	r1, r24
    45a2:	0c f0       	brlt	.+2      	; 0x45a6 <main+0x1a8c>
    45a4:	43 c0       	rjmp	.+134    	; 0x462c <main+0x1b12>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    45a6:	fe 01       	movw	r30, r28
    45a8:	e5 51       	subi	r30, 0x15	; 21
    45aa:	ff 4f       	sbci	r31, 0xFF	; 255
    45ac:	60 81       	ld	r22, Z
    45ae:	71 81       	ldd	r23, Z+1	; 0x01
    45b0:	82 81       	ldd	r24, Z+2	; 0x02
    45b2:	93 81       	ldd	r25, Z+3	; 0x03
    45b4:	20 e0       	ldi	r18, 0x00	; 0
    45b6:	30 e0       	ldi	r19, 0x00	; 0
    45b8:	40 e2       	ldi	r20, 0x20	; 32
    45ba:	51 e4       	ldi	r21, 0x41	; 65
    45bc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    45c0:	dc 01       	movw	r26, r24
    45c2:	cb 01       	movw	r24, r22
    45c4:	8e 01       	movw	r16, r28
    45c6:	0b 51       	subi	r16, 0x1B	; 27
    45c8:	1f 4f       	sbci	r17, 0xFF	; 255
    45ca:	bc 01       	movw	r22, r24
    45cc:	cd 01       	movw	r24, r26
    45ce:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    45d2:	dc 01       	movw	r26, r24
    45d4:	cb 01       	movw	r24, r22
    45d6:	f8 01       	movw	r30, r16
    45d8:	91 83       	std	Z+1, r25	; 0x01
    45da:	80 83       	st	Z, r24
    45dc:	1f c0       	rjmp	.+62     	; 0x461c <main+0x1b02>
    45de:	fe 01       	movw	r30, r28
    45e0:	ed 51       	subi	r30, 0x1D	; 29
    45e2:	ff 4f       	sbci	r31, 0xFF	; 255
    45e4:	88 ec       	ldi	r24, 0xC8	; 200
    45e6:	90 e0       	ldi	r25, 0x00	; 0
    45e8:	91 83       	std	Z+1, r25	; 0x01
    45ea:	80 83       	st	Z, r24
    45ec:	fe 01       	movw	r30, r28
    45ee:	ed 51       	subi	r30, 0x1D	; 29
    45f0:	ff 4f       	sbci	r31, 0xFF	; 255
    45f2:	80 81       	ld	r24, Z
    45f4:	91 81       	ldd	r25, Z+1	; 0x01
    45f6:	01 97       	sbiw	r24, 0x01	; 1
    45f8:	f1 f7       	brne	.-4      	; 0x45f6 <main+0x1adc>
    45fa:	fe 01       	movw	r30, r28
    45fc:	ed 51       	subi	r30, 0x1D	; 29
    45fe:	ff 4f       	sbci	r31, 0xFF	; 255
    4600:	91 83       	std	Z+1, r25	; 0x01
    4602:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4604:	de 01       	movw	r26, r28
    4606:	ab 51       	subi	r26, 0x1B	; 27
    4608:	bf 4f       	sbci	r27, 0xFF	; 255
    460a:	fe 01       	movw	r30, r28
    460c:	eb 51       	subi	r30, 0x1B	; 27
    460e:	ff 4f       	sbci	r31, 0xFF	; 255
    4610:	80 81       	ld	r24, Z
    4612:	91 81       	ldd	r25, Z+1	; 0x01
    4614:	01 97       	sbiw	r24, 0x01	; 1
    4616:	11 96       	adiw	r26, 0x01	; 1
    4618:	9c 93       	st	X, r25
    461a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    461c:	fe 01       	movw	r30, r28
    461e:	eb 51       	subi	r30, 0x1B	; 27
    4620:	ff 4f       	sbci	r31, 0xFF	; 255
    4622:	80 81       	ld	r24, Z
    4624:	91 81       	ldd	r25, Z+1	; 0x01
    4626:	00 97       	sbiw	r24, 0x00	; 0
    4628:	d1 f6       	brne	.-76     	; 0x45de <main+0x1ac4>
    462a:	27 c0       	rjmp	.+78     	; 0x467a <main+0x1b60>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    462c:	8e 01       	movw	r16, r28
    462e:	0b 51       	subi	r16, 0x1B	; 27
    4630:	1f 4f       	sbci	r17, 0xFF	; 255
    4632:	fe 01       	movw	r30, r28
    4634:	e9 51       	subi	r30, 0x19	; 25
    4636:	ff 4f       	sbci	r31, 0xFF	; 255
    4638:	60 81       	ld	r22, Z
    463a:	71 81       	ldd	r23, Z+1	; 0x01
    463c:	82 81       	ldd	r24, Z+2	; 0x02
    463e:	93 81       	ldd	r25, Z+3	; 0x03
    4640:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4644:	dc 01       	movw	r26, r24
    4646:	cb 01       	movw	r24, r22
    4648:	f8 01       	movw	r30, r16
    464a:	91 83       	std	Z+1, r25	; 0x01
    464c:	80 83       	st	Z, r24
    464e:	de 01       	movw	r26, r28
    4650:	af 51       	subi	r26, 0x1F	; 31
    4652:	bf 4f       	sbci	r27, 0xFF	; 255
    4654:	fe 01       	movw	r30, r28
    4656:	eb 51       	subi	r30, 0x1B	; 27
    4658:	ff 4f       	sbci	r31, 0xFF	; 255
    465a:	80 81       	ld	r24, Z
    465c:	91 81       	ldd	r25, Z+1	; 0x01
    465e:	8d 93       	st	X+, r24
    4660:	9c 93       	st	X, r25
    4662:	fe 01       	movw	r30, r28
    4664:	ef 51       	subi	r30, 0x1F	; 31
    4666:	ff 4f       	sbci	r31, 0xFF	; 255
    4668:	80 81       	ld	r24, Z
    466a:	91 81       	ldd	r25, Z+1	; 0x01
    466c:	01 97       	sbiw	r24, 0x01	; 1
    466e:	f1 f7       	brne	.-4      	; 0x466c <main+0x1b52>
    4670:	fe 01       	movw	r30, r28
    4672:	ef 51       	subi	r30, 0x1F	; 31
    4674:	ff 4f       	sbci	r31, 0xFF	; 255
    4676:	91 83       	std	Z+1, r25	; 0x01
    4678:	80 83       	st	Z, r24
									_delay_ms(50/6);
									SetPin_Val(DIO_PORTD, DIO_PIN2, PIN_HIGH);
    467a:	83 e0       	ldi	r24, 0x03	; 3
    467c:	62 e0       	ldi	r22, 0x02	; 2
    467e:	41 e0       	ldi	r20, 0x01	; 1
    4680:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN3, PIN_HIGH);
    4684:	83 e0       	ldi	r24, 0x03	; 3
    4686:	63 e0       	ldi	r22, 0x03	; 3
    4688:	41 e0       	ldi	r20, 0x01	; 1
    468a:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN4, PIN_HIGH);
    468e:	83 e0       	ldi	r24, 0x03	; 3
    4690:	64 e0       	ldi	r22, 0x04	; 4
    4692:	41 e0       	ldi	r20, 0x01	; 1
    4694:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN6, PIN_HIGH);
    4698:	83 e0       	ldi	r24, 0x03	; 3
    469a:	66 e0       	ldi	r22, 0x06	; 6
    469c:	41 e0       	ldi	r20, 0x01	; 1
    469e:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN7, PIN_HIGH);
    46a2:	83 e0       	ldi	r24, 0x03	; 3
    46a4:	67 e0       	ldi	r22, 0x07	; 7
    46a6:	41 e0       	ldi	r20, 0x01	; 1
    46a8:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_LOW);
    46ac:	83 e0       	ldi	r24, 0x03	; 3
    46ae:	65 e0       	ldi	r22, 0x05	; 5
    46b0:	40 e0       	ldi	r20, 0x00	; 0
    46b2:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									PORTA=seg(minute/10);
    46b6:	0b e3       	ldi	r16, 0x3B	; 59
    46b8:	10 e0       	ldi	r17, 0x00	; 0
    46ba:	fe 01       	movw	r30, r28
    46bc:	e2 54       	subi	r30, 0x42	; 66
    46be:	fe 4f       	sbci	r31, 0xFE	; 254
    46c0:	80 81       	ld	r24, Z
    46c2:	9a e0       	ldi	r25, 0x0A	; 10
    46c4:	69 2f       	mov	r22, r25
    46c6:	0e 94 87 33 	call	0x670e	; 0x670e <__udivmodqi4>
    46ca:	0e 94 8e 0a 	call	0x151c	; 0x151c <seg>
    46ce:	f8 01       	movw	r30, r16
    46d0:	80 83       	st	Z, r24
    46d2:	fe 01       	movw	r30, r28
    46d4:	e3 52       	subi	r30, 0x23	; 35
    46d6:	ff 4f       	sbci	r31, 0xFF	; 255
    46d8:	80 e0       	ldi	r24, 0x00	; 0
    46da:	90 e0       	ldi	r25, 0x00	; 0
    46dc:	a0 e0       	ldi	r26, 0x00	; 0
    46de:	b1 e4       	ldi	r27, 0x41	; 65
    46e0:	80 83       	st	Z, r24
    46e2:	91 83       	std	Z+1, r25	; 0x01
    46e4:	a2 83       	std	Z+2, r26	; 0x02
    46e6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    46e8:	8e 01       	movw	r16, r28
    46ea:	07 52       	subi	r16, 0x27	; 39
    46ec:	1f 4f       	sbci	r17, 0xFF	; 255
    46ee:	fe 01       	movw	r30, r28
    46f0:	e3 52       	subi	r30, 0x23	; 35
    46f2:	ff 4f       	sbci	r31, 0xFF	; 255
    46f4:	60 81       	ld	r22, Z
    46f6:	71 81       	ldd	r23, Z+1	; 0x01
    46f8:	82 81       	ldd	r24, Z+2	; 0x02
    46fa:	93 81       	ldd	r25, Z+3	; 0x03
    46fc:	20 e0       	ldi	r18, 0x00	; 0
    46fe:	30 e0       	ldi	r19, 0x00	; 0
    4700:	4a ef       	ldi	r20, 0xFA	; 250
    4702:	54 e4       	ldi	r21, 0x44	; 68
    4704:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4708:	dc 01       	movw	r26, r24
    470a:	cb 01       	movw	r24, r22
    470c:	f8 01       	movw	r30, r16
    470e:	80 83       	st	Z, r24
    4710:	91 83       	std	Z+1, r25	; 0x01
    4712:	a2 83       	std	Z+2, r26	; 0x02
    4714:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4716:	fe 01       	movw	r30, r28
    4718:	e7 52       	subi	r30, 0x27	; 39
    471a:	ff 4f       	sbci	r31, 0xFF	; 255
    471c:	60 81       	ld	r22, Z
    471e:	71 81       	ldd	r23, Z+1	; 0x01
    4720:	82 81       	ldd	r24, Z+2	; 0x02
    4722:	93 81       	ldd	r25, Z+3	; 0x03
    4724:	20 e0       	ldi	r18, 0x00	; 0
    4726:	30 e0       	ldi	r19, 0x00	; 0
    4728:	40 e8       	ldi	r20, 0x80	; 128
    472a:	5f e3       	ldi	r21, 0x3F	; 63
    472c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4730:	88 23       	and	r24, r24
    4732:	44 f4       	brge	.+16     	; 0x4744 <main+0x1c2a>
		__ticks = 1;
    4734:	fe 01       	movw	r30, r28
    4736:	e9 52       	subi	r30, 0x29	; 41
    4738:	ff 4f       	sbci	r31, 0xFF	; 255
    473a:	81 e0       	ldi	r24, 0x01	; 1
    473c:	90 e0       	ldi	r25, 0x00	; 0
    473e:	91 83       	std	Z+1, r25	; 0x01
    4740:	80 83       	st	Z, r24
    4742:	64 c0       	rjmp	.+200    	; 0x480c <main+0x1cf2>
	else if (__tmp > 65535)
    4744:	fe 01       	movw	r30, r28
    4746:	e7 52       	subi	r30, 0x27	; 39
    4748:	ff 4f       	sbci	r31, 0xFF	; 255
    474a:	60 81       	ld	r22, Z
    474c:	71 81       	ldd	r23, Z+1	; 0x01
    474e:	82 81       	ldd	r24, Z+2	; 0x02
    4750:	93 81       	ldd	r25, Z+3	; 0x03
    4752:	20 e0       	ldi	r18, 0x00	; 0
    4754:	3f ef       	ldi	r19, 0xFF	; 255
    4756:	4f e7       	ldi	r20, 0x7F	; 127
    4758:	57 e4       	ldi	r21, 0x47	; 71
    475a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    475e:	18 16       	cp	r1, r24
    4760:	0c f0       	brlt	.+2      	; 0x4764 <main+0x1c4a>
    4762:	43 c0       	rjmp	.+134    	; 0x47ea <main+0x1cd0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4764:	fe 01       	movw	r30, r28
    4766:	e3 52       	subi	r30, 0x23	; 35
    4768:	ff 4f       	sbci	r31, 0xFF	; 255
    476a:	60 81       	ld	r22, Z
    476c:	71 81       	ldd	r23, Z+1	; 0x01
    476e:	82 81       	ldd	r24, Z+2	; 0x02
    4770:	93 81       	ldd	r25, Z+3	; 0x03
    4772:	20 e0       	ldi	r18, 0x00	; 0
    4774:	30 e0       	ldi	r19, 0x00	; 0
    4776:	40 e2       	ldi	r20, 0x20	; 32
    4778:	51 e4       	ldi	r21, 0x41	; 65
    477a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    477e:	dc 01       	movw	r26, r24
    4780:	cb 01       	movw	r24, r22
    4782:	8e 01       	movw	r16, r28
    4784:	09 52       	subi	r16, 0x29	; 41
    4786:	1f 4f       	sbci	r17, 0xFF	; 255
    4788:	bc 01       	movw	r22, r24
    478a:	cd 01       	movw	r24, r26
    478c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4790:	dc 01       	movw	r26, r24
    4792:	cb 01       	movw	r24, r22
    4794:	f8 01       	movw	r30, r16
    4796:	91 83       	std	Z+1, r25	; 0x01
    4798:	80 83       	st	Z, r24
    479a:	1f c0       	rjmp	.+62     	; 0x47da <main+0x1cc0>
    479c:	fe 01       	movw	r30, r28
    479e:	eb 52       	subi	r30, 0x2B	; 43
    47a0:	ff 4f       	sbci	r31, 0xFF	; 255
    47a2:	88 ec       	ldi	r24, 0xC8	; 200
    47a4:	90 e0       	ldi	r25, 0x00	; 0
    47a6:	91 83       	std	Z+1, r25	; 0x01
    47a8:	80 83       	st	Z, r24
    47aa:	fe 01       	movw	r30, r28
    47ac:	eb 52       	subi	r30, 0x2B	; 43
    47ae:	ff 4f       	sbci	r31, 0xFF	; 255
    47b0:	80 81       	ld	r24, Z
    47b2:	91 81       	ldd	r25, Z+1	; 0x01
    47b4:	01 97       	sbiw	r24, 0x01	; 1
    47b6:	f1 f7       	brne	.-4      	; 0x47b4 <main+0x1c9a>
    47b8:	fe 01       	movw	r30, r28
    47ba:	eb 52       	subi	r30, 0x2B	; 43
    47bc:	ff 4f       	sbci	r31, 0xFF	; 255
    47be:	91 83       	std	Z+1, r25	; 0x01
    47c0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    47c2:	de 01       	movw	r26, r28
    47c4:	a9 52       	subi	r26, 0x29	; 41
    47c6:	bf 4f       	sbci	r27, 0xFF	; 255
    47c8:	fe 01       	movw	r30, r28
    47ca:	e9 52       	subi	r30, 0x29	; 41
    47cc:	ff 4f       	sbci	r31, 0xFF	; 255
    47ce:	80 81       	ld	r24, Z
    47d0:	91 81       	ldd	r25, Z+1	; 0x01
    47d2:	01 97       	sbiw	r24, 0x01	; 1
    47d4:	11 96       	adiw	r26, 0x01	; 1
    47d6:	9c 93       	st	X, r25
    47d8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    47da:	fe 01       	movw	r30, r28
    47dc:	e9 52       	subi	r30, 0x29	; 41
    47de:	ff 4f       	sbci	r31, 0xFF	; 255
    47e0:	80 81       	ld	r24, Z
    47e2:	91 81       	ldd	r25, Z+1	; 0x01
    47e4:	00 97       	sbiw	r24, 0x00	; 0
    47e6:	d1 f6       	brne	.-76     	; 0x479c <main+0x1c82>
    47e8:	27 c0       	rjmp	.+78     	; 0x4838 <main+0x1d1e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    47ea:	8e 01       	movw	r16, r28
    47ec:	09 52       	subi	r16, 0x29	; 41
    47ee:	1f 4f       	sbci	r17, 0xFF	; 255
    47f0:	fe 01       	movw	r30, r28
    47f2:	e7 52       	subi	r30, 0x27	; 39
    47f4:	ff 4f       	sbci	r31, 0xFF	; 255
    47f6:	60 81       	ld	r22, Z
    47f8:	71 81       	ldd	r23, Z+1	; 0x01
    47fa:	82 81       	ldd	r24, Z+2	; 0x02
    47fc:	93 81       	ldd	r25, Z+3	; 0x03
    47fe:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4802:	dc 01       	movw	r26, r24
    4804:	cb 01       	movw	r24, r22
    4806:	f8 01       	movw	r30, r16
    4808:	91 83       	std	Z+1, r25	; 0x01
    480a:	80 83       	st	Z, r24
    480c:	de 01       	movw	r26, r28
    480e:	ad 52       	subi	r26, 0x2D	; 45
    4810:	bf 4f       	sbci	r27, 0xFF	; 255
    4812:	fe 01       	movw	r30, r28
    4814:	e9 52       	subi	r30, 0x29	; 41
    4816:	ff 4f       	sbci	r31, 0xFF	; 255
    4818:	80 81       	ld	r24, Z
    481a:	91 81       	ldd	r25, Z+1	; 0x01
    481c:	8d 93       	st	X+, r24
    481e:	9c 93       	st	X, r25
    4820:	fe 01       	movw	r30, r28
    4822:	ed 52       	subi	r30, 0x2D	; 45
    4824:	ff 4f       	sbci	r31, 0xFF	; 255
    4826:	80 81       	ld	r24, Z
    4828:	91 81       	ldd	r25, Z+1	; 0x01
    482a:	01 97       	sbiw	r24, 0x01	; 1
    482c:	f1 f7       	brne	.-4      	; 0x482a <main+0x1d10>
    482e:	fe 01       	movw	r30, r28
    4830:	ed 52       	subi	r30, 0x2D	; 45
    4832:	ff 4f       	sbci	r31, 0xFF	; 255
    4834:	91 83       	std	Z+1, r25	; 0x01
    4836:	80 83       	st	Z, r24
									_delay_ms(50/6);
									SetPin_Val(DIO_PORTD, DIO_PIN2, PIN_HIGH);
    4838:	83 e0       	ldi	r24, 0x03	; 3
    483a:	62 e0       	ldi	r22, 0x02	; 2
    483c:	41 e0       	ldi	r20, 0x01	; 1
    483e:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN3, PIN_HIGH);
    4842:	83 e0       	ldi	r24, 0x03	; 3
    4844:	63 e0       	ldi	r22, 0x03	; 3
    4846:	41 e0       	ldi	r20, 0x01	; 1
    4848:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN4, PIN_HIGH);
    484c:	83 e0       	ldi	r24, 0x03	; 3
    484e:	64 e0       	ldi	r22, 0x04	; 4
    4850:	41 e0       	ldi	r20, 0x01	; 1
    4852:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_HIGH);
    4856:	83 e0       	ldi	r24, 0x03	; 3
    4858:	65 e0       	ldi	r22, 0x05	; 5
    485a:	41 e0       	ldi	r20, 0x01	; 1
    485c:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN7, PIN_HIGH);
    4860:	83 e0       	ldi	r24, 0x03	; 3
    4862:	67 e0       	ldi	r22, 0x07	; 7
    4864:	41 e0       	ldi	r20, 0x01	; 1
    4866:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN6, PIN_LOW);
    486a:	83 e0       	ldi	r24, 0x03	; 3
    486c:	66 e0       	ldi	r22, 0x06	; 6
    486e:	40 e0       	ldi	r20, 0x00	; 0
    4870:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									PORTA=seg(hour%10);
    4874:	0b e3       	ldi	r16, 0x3B	; 59
    4876:	10 e0       	ldi	r17, 0x00	; 0
    4878:	fe 01       	movw	r30, r28
    487a:	e1 54       	subi	r30, 0x41	; 65
    487c:	fe 4f       	sbci	r31, 0xFE	; 254
    487e:	80 81       	ld	r24, Z
    4880:	9a e0       	ldi	r25, 0x0A	; 10
    4882:	69 2f       	mov	r22, r25
    4884:	0e 94 87 33 	call	0x670e	; 0x670e <__udivmodqi4>
    4888:	89 2f       	mov	r24, r25
    488a:	0e 94 8e 0a 	call	0x151c	; 0x151c <seg>
    488e:	f8 01       	movw	r30, r16
    4890:	80 83       	st	Z, r24
    4892:	fe 01       	movw	r30, r28
    4894:	e1 53       	subi	r30, 0x31	; 49
    4896:	ff 4f       	sbci	r31, 0xFF	; 255
    4898:	80 e0       	ldi	r24, 0x00	; 0
    489a:	90 e0       	ldi	r25, 0x00	; 0
    489c:	a0 e0       	ldi	r26, 0x00	; 0
    489e:	b1 e4       	ldi	r27, 0x41	; 65
    48a0:	80 83       	st	Z, r24
    48a2:	91 83       	std	Z+1, r25	; 0x01
    48a4:	a2 83       	std	Z+2, r26	; 0x02
    48a6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    48a8:	8e 01       	movw	r16, r28
    48aa:	05 53       	subi	r16, 0x35	; 53
    48ac:	1f 4f       	sbci	r17, 0xFF	; 255
    48ae:	fe 01       	movw	r30, r28
    48b0:	e1 53       	subi	r30, 0x31	; 49
    48b2:	ff 4f       	sbci	r31, 0xFF	; 255
    48b4:	60 81       	ld	r22, Z
    48b6:	71 81       	ldd	r23, Z+1	; 0x01
    48b8:	82 81       	ldd	r24, Z+2	; 0x02
    48ba:	93 81       	ldd	r25, Z+3	; 0x03
    48bc:	20 e0       	ldi	r18, 0x00	; 0
    48be:	30 e0       	ldi	r19, 0x00	; 0
    48c0:	4a ef       	ldi	r20, 0xFA	; 250
    48c2:	54 e4       	ldi	r21, 0x44	; 68
    48c4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    48c8:	dc 01       	movw	r26, r24
    48ca:	cb 01       	movw	r24, r22
    48cc:	f8 01       	movw	r30, r16
    48ce:	80 83       	st	Z, r24
    48d0:	91 83       	std	Z+1, r25	; 0x01
    48d2:	a2 83       	std	Z+2, r26	; 0x02
    48d4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    48d6:	fe 01       	movw	r30, r28
    48d8:	e5 53       	subi	r30, 0x35	; 53
    48da:	ff 4f       	sbci	r31, 0xFF	; 255
    48dc:	60 81       	ld	r22, Z
    48de:	71 81       	ldd	r23, Z+1	; 0x01
    48e0:	82 81       	ldd	r24, Z+2	; 0x02
    48e2:	93 81       	ldd	r25, Z+3	; 0x03
    48e4:	20 e0       	ldi	r18, 0x00	; 0
    48e6:	30 e0       	ldi	r19, 0x00	; 0
    48e8:	40 e8       	ldi	r20, 0x80	; 128
    48ea:	5f e3       	ldi	r21, 0x3F	; 63
    48ec:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    48f0:	88 23       	and	r24, r24
    48f2:	44 f4       	brge	.+16     	; 0x4904 <main+0x1dea>
		__ticks = 1;
    48f4:	fe 01       	movw	r30, r28
    48f6:	e7 53       	subi	r30, 0x37	; 55
    48f8:	ff 4f       	sbci	r31, 0xFF	; 255
    48fa:	81 e0       	ldi	r24, 0x01	; 1
    48fc:	90 e0       	ldi	r25, 0x00	; 0
    48fe:	91 83       	std	Z+1, r25	; 0x01
    4900:	80 83       	st	Z, r24
    4902:	64 c0       	rjmp	.+200    	; 0x49cc <main+0x1eb2>
	else if (__tmp > 65535)
    4904:	fe 01       	movw	r30, r28
    4906:	e5 53       	subi	r30, 0x35	; 53
    4908:	ff 4f       	sbci	r31, 0xFF	; 255
    490a:	60 81       	ld	r22, Z
    490c:	71 81       	ldd	r23, Z+1	; 0x01
    490e:	82 81       	ldd	r24, Z+2	; 0x02
    4910:	93 81       	ldd	r25, Z+3	; 0x03
    4912:	20 e0       	ldi	r18, 0x00	; 0
    4914:	3f ef       	ldi	r19, 0xFF	; 255
    4916:	4f e7       	ldi	r20, 0x7F	; 127
    4918:	57 e4       	ldi	r21, 0x47	; 71
    491a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    491e:	18 16       	cp	r1, r24
    4920:	0c f0       	brlt	.+2      	; 0x4924 <main+0x1e0a>
    4922:	43 c0       	rjmp	.+134    	; 0x49aa <main+0x1e90>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4924:	fe 01       	movw	r30, r28
    4926:	e1 53       	subi	r30, 0x31	; 49
    4928:	ff 4f       	sbci	r31, 0xFF	; 255
    492a:	60 81       	ld	r22, Z
    492c:	71 81       	ldd	r23, Z+1	; 0x01
    492e:	82 81       	ldd	r24, Z+2	; 0x02
    4930:	93 81       	ldd	r25, Z+3	; 0x03
    4932:	20 e0       	ldi	r18, 0x00	; 0
    4934:	30 e0       	ldi	r19, 0x00	; 0
    4936:	40 e2       	ldi	r20, 0x20	; 32
    4938:	51 e4       	ldi	r21, 0x41	; 65
    493a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    493e:	dc 01       	movw	r26, r24
    4940:	cb 01       	movw	r24, r22
    4942:	8e 01       	movw	r16, r28
    4944:	07 53       	subi	r16, 0x37	; 55
    4946:	1f 4f       	sbci	r17, 0xFF	; 255
    4948:	bc 01       	movw	r22, r24
    494a:	cd 01       	movw	r24, r26
    494c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4950:	dc 01       	movw	r26, r24
    4952:	cb 01       	movw	r24, r22
    4954:	f8 01       	movw	r30, r16
    4956:	91 83       	std	Z+1, r25	; 0x01
    4958:	80 83       	st	Z, r24
    495a:	1f c0       	rjmp	.+62     	; 0x499a <main+0x1e80>
    495c:	fe 01       	movw	r30, r28
    495e:	e9 53       	subi	r30, 0x39	; 57
    4960:	ff 4f       	sbci	r31, 0xFF	; 255
    4962:	88 ec       	ldi	r24, 0xC8	; 200
    4964:	90 e0       	ldi	r25, 0x00	; 0
    4966:	91 83       	std	Z+1, r25	; 0x01
    4968:	80 83       	st	Z, r24
    496a:	fe 01       	movw	r30, r28
    496c:	e9 53       	subi	r30, 0x39	; 57
    496e:	ff 4f       	sbci	r31, 0xFF	; 255
    4970:	80 81       	ld	r24, Z
    4972:	91 81       	ldd	r25, Z+1	; 0x01
    4974:	01 97       	sbiw	r24, 0x01	; 1
    4976:	f1 f7       	brne	.-4      	; 0x4974 <main+0x1e5a>
    4978:	fe 01       	movw	r30, r28
    497a:	e9 53       	subi	r30, 0x39	; 57
    497c:	ff 4f       	sbci	r31, 0xFF	; 255
    497e:	91 83       	std	Z+1, r25	; 0x01
    4980:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4982:	de 01       	movw	r26, r28
    4984:	a7 53       	subi	r26, 0x37	; 55
    4986:	bf 4f       	sbci	r27, 0xFF	; 255
    4988:	fe 01       	movw	r30, r28
    498a:	e7 53       	subi	r30, 0x37	; 55
    498c:	ff 4f       	sbci	r31, 0xFF	; 255
    498e:	80 81       	ld	r24, Z
    4990:	91 81       	ldd	r25, Z+1	; 0x01
    4992:	01 97       	sbiw	r24, 0x01	; 1
    4994:	11 96       	adiw	r26, 0x01	; 1
    4996:	9c 93       	st	X, r25
    4998:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    499a:	fe 01       	movw	r30, r28
    499c:	e7 53       	subi	r30, 0x37	; 55
    499e:	ff 4f       	sbci	r31, 0xFF	; 255
    49a0:	80 81       	ld	r24, Z
    49a2:	91 81       	ldd	r25, Z+1	; 0x01
    49a4:	00 97       	sbiw	r24, 0x00	; 0
    49a6:	d1 f6       	brne	.-76     	; 0x495c <main+0x1e42>
    49a8:	27 c0       	rjmp	.+78     	; 0x49f8 <main+0x1ede>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    49aa:	8e 01       	movw	r16, r28
    49ac:	07 53       	subi	r16, 0x37	; 55
    49ae:	1f 4f       	sbci	r17, 0xFF	; 255
    49b0:	fe 01       	movw	r30, r28
    49b2:	e5 53       	subi	r30, 0x35	; 53
    49b4:	ff 4f       	sbci	r31, 0xFF	; 255
    49b6:	60 81       	ld	r22, Z
    49b8:	71 81       	ldd	r23, Z+1	; 0x01
    49ba:	82 81       	ldd	r24, Z+2	; 0x02
    49bc:	93 81       	ldd	r25, Z+3	; 0x03
    49be:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    49c2:	dc 01       	movw	r26, r24
    49c4:	cb 01       	movw	r24, r22
    49c6:	f8 01       	movw	r30, r16
    49c8:	91 83       	std	Z+1, r25	; 0x01
    49ca:	80 83       	st	Z, r24
    49cc:	de 01       	movw	r26, r28
    49ce:	ab 53       	subi	r26, 0x3B	; 59
    49d0:	bf 4f       	sbci	r27, 0xFF	; 255
    49d2:	fe 01       	movw	r30, r28
    49d4:	e7 53       	subi	r30, 0x37	; 55
    49d6:	ff 4f       	sbci	r31, 0xFF	; 255
    49d8:	80 81       	ld	r24, Z
    49da:	91 81       	ldd	r25, Z+1	; 0x01
    49dc:	8d 93       	st	X+, r24
    49de:	9c 93       	st	X, r25
    49e0:	fe 01       	movw	r30, r28
    49e2:	eb 53       	subi	r30, 0x3B	; 59
    49e4:	ff 4f       	sbci	r31, 0xFF	; 255
    49e6:	80 81       	ld	r24, Z
    49e8:	91 81       	ldd	r25, Z+1	; 0x01
    49ea:	01 97       	sbiw	r24, 0x01	; 1
    49ec:	f1 f7       	brne	.-4      	; 0x49ea <main+0x1ed0>
    49ee:	fe 01       	movw	r30, r28
    49f0:	eb 53       	subi	r30, 0x3B	; 59
    49f2:	ff 4f       	sbci	r31, 0xFF	; 255
    49f4:	91 83       	std	Z+1, r25	; 0x01
    49f6:	80 83       	st	Z, r24
									_delay_ms(50/6);
									SetPin_Val(DIO_PORTD, DIO_PIN2, PIN_HIGH);
    49f8:	83 e0       	ldi	r24, 0x03	; 3
    49fa:	62 e0       	ldi	r22, 0x02	; 2
    49fc:	41 e0       	ldi	r20, 0x01	; 1
    49fe:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN3, PIN_HIGH);
    4a02:	83 e0       	ldi	r24, 0x03	; 3
    4a04:	63 e0       	ldi	r22, 0x03	; 3
    4a06:	41 e0       	ldi	r20, 0x01	; 1
    4a08:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN4, PIN_HIGH);
    4a0c:	83 e0       	ldi	r24, 0x03	; 3
    4a0e:	64 e0       	ldi	r22, 0x04	; 4
    4a10:	41 e0       	ldi	r20, 0x01	; 1
    4a12:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_HIGH);
    4a16:	83 e0       	ldi	r24, 0x03	; 3
    4a18:	65 e0       	ldi	r22, 0x05	; 5
    4a1a:	41 e0       	ldi	r20, 0x01	; 1
    4a1c:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN6, PIN_HIGH);
    4a20:	83 e0       	ldi	r24, 0x03	; 3
    4a22:	66 e0       	ldi	r22, 0x06	; 6
    4a24:	41 e0       	ldi	r20, 0x01	; 1
    4a26:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									SetPin_Val(DIO_PORTD, DIO_PIN7, PIN_LOW);
    4a2a:	83 e0       	ldi	r24, 0x03	; 3
    4a2c:	67 e0       	ldi	r22, 0x07	; 7
    4a2e:	40 e0       	ldi	r20, 0x00	; 0
    4a30:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
									PORTA=seg(hour/10);
    4a34:	0b e3       	ldi	r16, 0x3B	; 59
    4a36:	10 e0       	ldi	r17, 0x00	; 0
    4a38:	fe 01       	movw	r30, r28
    4a3a:	e1 54       	subi	r30, 0x41	; 65
    4a3c:	fe 4f       	sbci	r31, 0xFE	; 254
    4a3e:	80 81       	ld	r24, Z
    4a40:	9a e0       	ldi	r25, 0x0A	; 10
    4a42:	69 2f       	mov	r22, r25
    4a44:	0e 94 87 33 	call	0x670e	; 0x670e <__udivmodqi4>
    4a48:	0e 94 8e 0a 	call	0x151c	; 0x151c <seg>
    4a4c:	f8 01       	movw	r30, r16
    4a4e:	80 83       	st	Z, r24
    4a50:	fe 01       	movw	r30, r28
    4a52:	ef 53       	subi	r30, 0x3F	; 63
    4a54:	ff 4f       	sbci	r31, 0xFF	; 255
    4a56:	80 e0       	ldi	r24, 0x00	; 0
    4a58:	90 e0       	ldi	r25, 0x00	; 0
    4a5a:	a0 e0       	ldi	r26, 0x00	; 0
    4a5c:	b1 e4       	ldi	r27, 0x41	; 65
    4a5e:	80 83       	st	Z, r24
    4a60:	91 83       	std	Z+1, r25	; 0x01
    4a62:	a2 83       	std	Z+2, r26	; 0x02
    4a64:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4a66:	8e 01       	movw	r16, r28
    4a68:	03 54       	subi	r16, 0x43	; 67
    4a6a:	1f 4f       	sbci	r17, 0xFF	; 255
    4a6c:	fe 01       	movw	r30, r28
    4a6e:	ef 53       	subi	r30, 0x3F	; 63
    4a70:	ff 4f       	sbci	r31, 0xFF	; 255
    4a72:	60 81       	ld	r22, Z
    4a74:	71 81       	ldd	r23, Z+1	; 0x01
    4a76:	82 81       	ldd	r24, Z+2	; 0x02
    4a78:	93 81       	ldd	r25, Z+3	; 0x03
    4a7a:	20 e0       	ldi	r18, 0x00	; 0
    4a7c:	30 e0       	ldi	r19, 0x00	; 0
    4a7e:	4a ef       	ldi	r20, 0xFA	; 250
    4a80:	54 e4       	ldi	r21, 0x44	; 68
    4a82:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4a86:	dc 01       	movw	r26, r24
    4a88:	cb 01       	movw	r24, r22
    4a8a:	f8 01       	movw	r30, r16
    4a8c:	80 83       	st	Z, r24
    4a8e:	91 83       	std	Z+1, r25	; 0x01
    4a90:	a2 83       	std	Z+2, r26	; 0x02
    4a92:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4a94:	fe 01       	movw	r30, r28
    4a96:	e3 54       	subi	r30, 0x43	; 67
    4a98:	ff 4f       	sbci	r31, 0xFF	; 255
    4a9a:	60 81       	ld	r22, Z
    4a9c:	71 81       	ldd	r23, Z+1	; 0x01
    4a9e:	82 81       	ldd	r24, Z+2	; 0x02
    4aa0:	93 81       	ldd	r25, Z+3	; 0x03
    4aa2:	20 e0       	ldi	r18, 0x00	; 0
    4aa4:	30 e0       	ldi	r19, 0x00	; 0
    4aa6:	40 e8       	ldi	r20, 0x80	; 128
    4aa8:	5f e3       	ldi	r21, 0x3F	; 63
    4aaa:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4aae:	88 23       	and	r24, r24
    4ab0:	44 f4       	brge	.+16     	; 0x4ac2 <main+0x1fa8>
		__ticks = 1;
    4ab2:	fe 01       	movw	r30, r28
    4ab4:	e5 54       	subi	r30, 0x45	; 69
    4ab6:	ff 4f       	sbci	r31, 0xFF	; 255
    4ab8:	81 e0       	ldi	r24, 0x01	; 1
    4aba:	90 e0       	ldi	r25, 0x00	; 0
    4abc:	91 83       	std	Z+1, r25	; 0x01
    4abe:	80 83       	st	Z, r24
    4ac0:	64 c0       	rjmp	.+200    	; 0x4b8a <main+0x2070>
	else if (__tmp > 65535)
    4ac2:	fe 01       	movw	r30, r28
    4ac4:	e3 54       	subi	r30, 0x43	; 67
    4ac6:	ff 4f       	sbci	r31, 0xFF	; 255
    4ac8:	60 81       	ld	r22, Z
    4aca:	71 81       	ldd	r23, Z+1	; 0x01
    4acc:	82 81       	ldd	r24, Z+2	; 0x02
    4ace:	93 81       	ldd	r25, Z+3	; 0x03
    4ad0:	20 e0       	ldi	r18, 0x00	; 0
    4ad2:	3f ef       	ldi	r19, 0xFF	; 255
    4ad4:	4f e7       	ldi	r20, 0x7F	; 127
    4ad6:	57 e4       	ldi	r21, 0x47	; 71
    4ad8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4adc:	18 16       	cp	r1, r24
    4ade:	0c f0       	brlt	.+2      	; 0x4ae2 <main+0x1fc8>
    4ae0:	43 c0       	rjmp	.+134    	; 0x4b68 <main+0x204e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4ae2:	fe 01       	movw	r30, r28
    4ae4:	ef 53       	subi	r30, 0x3F	; 63
    4ae6:	ff 4f       	sbci	r31, 0xFF	; 255
    4ae8:	60 81       	ld	r22, Z
    4aea:	71 81       	ldd	r23, Z+1	; 0x01
    4aec:	82 81       	ldd	r24, Z+2	; 0x02
    4aee:	93 81       	ldd	r25, Z+3	; 0x03
    4af0:	20 e0       	ldi	r18, 0x00	; 0
    4af2:	30 e0       	ldi	r19, 0x00	; 0
    4af4:	40 e2       	ldi	r20, 0x20	; 32
    4af6:	51 e4       	ldi	r21, 0x41	; 65
    4af8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4afc:	dc 01       	movw	r26, r24
    4afe:	cb 01       	movw	r24, r22
    4b00:	8e 01       	movw	r16, r28
    4b02:	05 54       	subi	r16, 0x45	; 69
    4b04:	1f 4f       	sbci	r17, 0xFF	; 255
    4b06:	bc 01       	movw	r22, r24
    4b08:	cd 01       	movw	r24, r26
    4b0a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4b0e:	dc 01       	movw	r26, r24
    4b10:	cb 01       	movw	r24, r22
    4b12:	f8 01       	movw	r30, r16
    4b14:	91 83       	std	Z+1, r25	; 0x01
    4b16:	80 83       	st	Z, r24
    4b18:	1f c0       	rjmp	.+62     	; 0x4b58 <main+0x203e>
    4b1a:	fe 01       	movw	r30, r28
    4b1c:	e7 54       	subi	r30, 0x47	; 71
    4b1e:	ff 4f       	sbci	r31, 0xFF	; 255
    4b20:	88 ec       	ldi	r24, 0xC8	; 200
    4b22:	90 e0       	ldi	r25, 0x00	; 0
    4b24:	91 83       	std	Z+1, r25	; 0x01
    4b26:	80 83       	st	Z, r24
    4b28:	fe 01       	movw	r30, r28
    4b2a:	e7 54       	subi	r30, 0x47	; 71
    4b2c:	ff 4f       	sbci	r31, 0xFF	; 255
    4b2e:	80 81       	ld	r24, Z
    4b30:	91 81       	ldd	r25, Z+1	; 0x01
    4b32:	01 97       	sbiw	r24, 0x01	; 1
    4b34:	f1 f7       	brne	.-4      	; 0x4b32 <main+0x2018>
    4b36:	fe 01       	movw	r30, r28
    4b38:	e7 54       	subi	r30, 0x47	; 71
    4b3a:	ff 4f       	sbci	r31, 0xFF	; 255
    4b3c:	91 83       	std	Z+1, r25	; 0x01
    4b3e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4b40:	de 01       	movw	r26, r28
    4b42:	a5 54       	subi	r26, 0x45	; 69
    4b44:	bf 4f       	sbci	r27, 0xFF	; 255
    4b46:	fe 01       	movw	r30, r28
    4b48:	e5 54       	subi	r30, 0x45	; 69
    4b4a:	ff 4f       	sbci	r31, 0xFF	; 255
    4b4c:	80 81       	ld	r24, Z
    4b4e:	91 81       	ldd	r25, Z+1	; 0x01
    4b50:	01 97       	sbiw	r24, 0x01	; 1
    4b52:	11 96       	adiw	r26, 0x01	; 1
    4b54:	9c 93       	st	X, r25
    4b56:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4b58:	fe 01       	movw	r30, r28
    4b5a:	e5 54       	subi	r30, 0x45	; 69
    4b5c:	ff 4f       	sbci	r31, 0xFF	; 255
    4b5e:	80 81       	ld	r24, Z
    4b60:	91 81       	ldd	r25, Z+1	; 0x01
    4b62:	00 97       	sbiw	r24, 0x00	; 0
    4b64:	d1 f6       	brne	.-76     	; 0x4b1a <main+0x2000>
    4b66:	28 c0       	rjmp	.+80     	; 0x4bb8 <main+0x209e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4b68:	8e 01       	movw	r16, r28
    4b6a:	05 54       	subi	r16, 0x45	; 69
    4b6c:	1f 4f       	sbci	r17, 0xFF	; 255
    4b6e:	fe 01       	movw	r30, r28
    4b70:	e3 54       	subi	r30, 0x43	; 67
    4b72:	ff 4f       	sbci	r31, 0xFF	; 255
    4b74:	60 81       	ld	r22, Z
    4b76:	71 81       	ldd	r23, Z+1	; 0x01
    4b78:	82 81       	ldd	r24, Z+2	; 0x02
    4b7a:	93 81       	ldd	r25, Z+3	; 0x03
    4b7c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4b80:	dc 01       	movw	r26, r24
    4b82:	cb 01       	movw	r24, r22
    4b84:	f8 01       	movw	r30, r16
    4b86:	91 83       	std	Z+1, r25	; 0x01
    4b88:	80 83       	st	Z, r24
    4b8a:	de 01       	movw	r26, r28
    4b8c:	a9 54       	subi	r26, 0x49	; 73
    4b8e:	bf 4f       	sbci	r27, 0xFF	; 255
    4b90:	fe 01       	movw	r30, r28
    4b92:	e5 54       	subi	r30, 0x45	; 69
    4b94:	ff 4f       	sbci	r31, 0xFF	; 255
    4b96:	80 81       	ld	r24, Z
    4b98:	91 81       	ldd	r25, Z+1	; 0x01
    4b9a:	11 96       	adiw	r26, 0x01	; 1
    4b9c:	9c 93       	st	X, r25
    4b9e:	8e 93       	st	-X, r24
    4ba0:	fe 01       	movw	r30, r28
    4ba2:	e9 54       	subi	r30, 0x49	; 73
    4ba4:	ff 4f       	sbci	r31, 0xFF	; 255
    4ba6:	80 81       	ld	r24, Z
    4ba8:	91 81       	ldd	r25, Z+1	; 0x01
    4baa:	01 97       	sbiw	r24, 0x01	; 1
    4bac:	f1 f7       	brne	.-4      	; 0x4baa <main+0x2090>
    4bae:	fe 01       	movw	r30, r28
    4bb0:	e9 54       	subi	r30, 0x49	; 73
    4bb2:	ff 4f       	sbci	r31, 0xFF	; 255
    4bb4:	91 83       	std	Z+1, r25	; 0x01
    4bb6:	80 83       	st	Z, r24
				{
				for( u8 second =0;(second<60)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;second++)
					{
							int n=20;

								while (n--)
    4bb8:	cc 52       	subi	r28, 0x2C	; 44
    4bba:	de 4f       	sbci	r29, 0xFE	; 254
    4bbc:	18 82       	st	Y, r1
    4bbe:	c4 5d       	subi	r28, 0xD4	; 212
    4bc0:	d1 40       	sbci	r29, 0x01	; 1
    4bc2:	fe 01       	movw	r30, r28
    4bc4:	e5 54       	subi	r30, 0x45	; 69
    4bc6:	fe 4f       	sbci	r31, 0xFE	; 254
    4bc8:	80 81       	ld	r24, Z
    4bca:	91 81       	ldd	r25, Z+1	; 0x01
    4bcc:	00 97       	sbiw	r24, 0x00	; 0
    4bce:	31 f0       	breq	.+12     	; 0x4bdc <main+0x20c2>
    4bd0:	f1 e0       	ldi	r31, 0x01	; 1
    4bd2:	cc 52       	subi	r28, 0x2C	; 44
    4bd4:	de 4f       	sbci	r29, 0xFE	; 254
    4bd6:	f8 83       	st	Y, r31
    4bd8:	c4 5d       	subi	r28, 0xD4	; 212
    4bda:	d1 40       	sbci	r29, 0x01	; 1
    4bdc:	de 01       	movw	r26, r28
    4bde:	a5 54       	subi	r26, 0x45	; 69
    4be0:	be 4f       	sbci	r27, 0xFE	; 254
    4be2:	fe 01       	movw	r30, r28
    4be4:	e5 54       	subi	r30, 0x45	; 69
    4be6:	fe 4f       	sbci	r31, 0xFE	; 254
    4be8:	80 81       	ld	r24, Z
    4bea:	91 81       	ldd	r25, Z+1	; 0x01
    4bec:	01 97       	sbiw	r24, 0x01	; 1
    4bee:	11 96       	adiw	r26, 0x01	; 1
    4bf0:	9c 93       	st	X, r25
    4bf2:	8e 93       	st	-X, r24
    4bf4:	cc 52       	subi	r28, 0x2C	; 44
    4bf6:	de 4f       	sbci	r29, 0xFE	; 254
    4bf8:	e8 80       	ld	r14, Y
    4bfa:	c4 5d       	subi	r28, 0xD4	; 212
    4bfc:	d1 40       	sbci	r29, 0x01	; 1
    4bfe:	ee 20       	and	r14, r14
    4c00:	09 f0       	breq	.+2      	; 0x4c04 <main+0x20ea>
    4c02:	9c ca       	rjmp	.-2760   	; 0x413c <main+0x1622>
									PORTA=seg(hour/10);
									_delay_ms(50/6);


										}
								if(Get_PinVal(DIO_PORTB, DIO_PIN1)==0)
    4c04:	81 e0       	ldi	r24, 0x01	; 1
    4c06:	61 e0       	ldi	r22, 0x01	; 1
    4c08:	0e 94 12 09 	call	0x1224	; 0x1224 <Get_PinVal>
    4c0c:	88 23       	and	r24, r24
    4c0e:	09 f0       	breq	.+2      	; 0x4c12 <main+0x20f8>
    4c10:	45 c5       	rjmp	.+2698   	; 0x569c <main+0x2b82>
    4c12:	3d c5       	rjmp	.+2682   	; 0x568e <main+0x2b74>
								{
									while(Get_PinVal(DIO_PORTB, DIO_PIN2)!=0)
										{
											SetPin_Val(DIO_PORTD, DIO_PIN3, PIN_HIGH);
    4c14:	83 e0       	ldi	r24, 0x03	; 3
    4c16:	63 e0       	ldi	r22, 0x03	; 3
    4c18:	41 e0       	ldi	r20, 0x01	; 1
    4c1a:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN4, PIN_HIGH);
    4c1e:	83 e0       	ldi	r24, 0x03	; 3
    4c20:	64 e0       	ldi	r22, 0x04	; 4
    4c22:	41 e0       	ldi	r20, 0x01	; 1
    4c24:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_HIGH);
    4c28:	83 e0       	ldi	r24, 0x03	; 3
    4c2a:	65 e0       	ldi	r22, 0x05	; 5
    4c2c:	41 e0       	ldi	r20, 0x01	; 1
    4c2e:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_HIGH);
    4c32:	83 e0       	ldi	r24, 0x03	; 3
    4c34:	65 e0       	ldi	r22, 0x05	; 5
    4c36:	41 e0       	ldi	r20, 0x01	; 1
    4c38:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN7, PIN_HIGH);
    4c3c:	83 e0       	ldi	r24, 0x03	; 3
    4c3e:	67 e0       	ldi	r22, 0x07	; 7
    4c40:	41 e0       	ldi	r20, 0x01	; 1
    4c42:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN2, PIN_LOW);
    4c46:	83 e0       	ldi	r24, 0x03	; 3
    4c48:	62 e0       	ldi	r22, 0x02	; 2
    4c4a:	40 e0       	ldi	r20, 0x00	; 0
    4c4c:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											PORTA=seg(second%10);
    4c50:	0b e3       	ldi	r16, 0x3B	; 59
    4c52:	10 e0       	ldi	r17, 0x00	; 0
    4c54:	fe 01       	movw	r30, r28
    4c56:	e3 54       	subi	r30, 0x43	; 67
    4c58:	fe 4f       	sbci	r31, 0xFE	; 254
    4c5a:	80 81       	ld	r24, Z
    4c5c:	9a e0       	ldi	r25, 0x0A	; 10
    4c5e:	69 2f       	mov	r22, r25
    4c60:	0e 94 87 33 	call	0x670e	; 0x670e <__udivmodqi4>
    4c64:	89 2f       	mov	r24, r25
    4c66:	0e 94 8e 0a 	call	0x151c	; 0x151c <seg>
    4c6a:	f8 01       	movw	r30, r16
    4c6c:	80 83       	st	Z, r24
    4c6e:	fe 01       	movw	r30, r28
    4c70:	ed 54       	subi	r30, 0x4D	; 77
    4c72:	ff 4f       	sbci	r31, 0xFF	; 255
    4c74:	80 e0       	ldi	r24, 0x00	; 0
    4c76:	90 e0       	ldi	r25, 0x00	; 0
    4c78:	a0 e0       	ldi	r26, 0x00	; 0
    4c7a:	b1 e4       	ldi	r27, 0x41	; 65
    4c7c:	80 83       	st	Z, r24
    4c7e:	91 83       	std	Z+1, r25	; 0x01
    4c80:	a2 83       	std	Z+2, r26	; 0x02
    4c82:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4c84:	8e 01       	movw	r16, r28
    4c86:	01 55       	subi	r16, 0x51	; 81
    4c88:	1f 4f       	sbci	r17, 0xFF	; 255
    4c8a:	fe 01       	movw	r30, r28
    4c8c:	ed 54       	subi	r30, 0x4D	; 77
    4c8e:	ff 4f       	sbci	r31, 0xFF	; 255
    4c90:	60 81       	ld	r22, Z
    4c92:	71 81       	ldd	r23, Z+1	; 0x01
    4c94:	82 81       	ldd	r24, Z+2	; 0x02
    4c96:	93 81       	ldd	r25, Z+3	; 0x03
    4c98:	20 e0       	ldi	r18, 0x00	; 0
    4c9a:	30 e0       	ldi	r19, 0x00	; 0
    4c9c:	4a ef       	ldi	r20, 0xFA	; 250
    4c9e:	54 e4       	ldi	r21, 0x44	; 68
    4ca0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4ca4:	dc 01       	movw	r26, r24
    4ca6:	cb 01       	movw	r24, r22
    4ca8:	f8 01       	movw	r30, r16
    4caa:	80 83       	st	Z, r24
    4cac:	91 83       	std	Z+1, r25	; 0x01
    4cae:	a2 83       	std	Z+2, r26	; 0x02
    4cb0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4cb2:	fe 01       	movw	r30, r28
    4cb4:	e1 55       	subi	r30, 0x51	; 81
    4cb6:	ff 4f       	sbci	r31, 0xFF	; 255
    4cb8:	60 81       	ld	r22, Z
    4cba:	71 81       	ldd	r23, Z+1	; 0x01
    4cbc:	82 81       	ldd	r24, Z+2	; 0x02
    4cbe:	93 81       	ldd	r25, Z+3	; 0x03
    4cc0:	20 e0       	ldi	r18, 0x00	; 0
    4cc2:	30 e0       	ldi	r19, 0x00	; 0
    4cc4:	40 e8       	ldi	r20, 0x80	; 128
    4cc6:	5f e3       	ldi	r21, 0x3F	; 63
    4cc8:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4ccc:	88 23       	and	r24, r24
    4cce:	44 f4       	brge	.+16     	; 0x4ce0 <main+0x21c6>
		__ticks = 1;
    4cd0:	fe 01       	movw	r30, r28
    4cd2:	e3 55       	subi	r30, 0x53	; 83
    4cd4:	ff 4f       	sbci	r31, 0xFF	; 255
    4cd6:	81 e0       	ldi	r24, 0x01	; 1
    4cd8:	90 e0       	ldi	r25, 0x00	; 0
    4cda:	91 83       	std	Z+1, r25	; 0x01
    4cdc:	80 83       	st	Z, r24
    4cde:	64 c0       	rjmp	.+200    	; 0x4da8 <main+0x228e>
	else if (__tmp > 65535)
    4ce0:	fe 01       	movw	r30, r28
    4ce2:	e1 55       	subi	r30, 0x51	; 81
    4ce4:	ff 4f       	sbci	r31, 0xFF	; 255
    4ce6:	60 81       	ld	r22, Z
    4ce8:	71 81       	ldd	r23, Z+1	; 0x01
    4cea:	82 81       	ldd	r24, Z+2	; 0x02
    4cec:	93 81       	ldd	r25, Z+3	; 0x03
    4cee:	20 e0       	ldi	r18, 0x00	; 0
    4cf0:	3f ef       	ldi	r19, 0xFF	; 255
    4cf2:	4f e7       	ldi	r20, 0x7F	; 127
    4cf4:	57 e4       	ldi	r21, 0x47	; 71
    4cf6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4cfa:	18 16       	cp	r1, r24
    4cfc:	0c f0       	brlt	.+2      	; 0x4d00 <main+0x21e6>
    4cfe:	43 c0       	rjmp	.+134    	; 0x4d86 <main+0x226c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4d00:	fe 01       	movw	r30, r28
    4d02:	ed 54       	subi	r30, 0x4D	; 77
    4d04:	ff 4f       	sbci	r31, 0xFF	; 255
    4d06:	60 81       	ld	r22, Z
    4d08:	71 81       	ldd	r23, Z+1	; 0x01
    4d0a:	82 81       	ldd	r24, Z+2	; 0x02
    4d0c:	93 81       	ldd	r25, Z+3	; 0x03
    4d0e:	20 e0       	ldi	r18, 0x00	; 0
    4d10:	30 e0       	ldi	r19, 0x00	; 0
    4d12:	40 e2       	ldi	r20, 0x20	; 32
    4d14:	51 e4       	ldi	r21, 0x41	; 65
    4d16:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4d1a:	dc 01       	movw	r26, r24
    4d1c:	cb 01       	movw	r24, r22
    4d1e:	8e 01       	movw	r16, r28
    4d20:	03 55       	subi	r16, 0x53	; 83
    4d22:	1f 4f       	sbci	r17, 0xFF	; 255
    4d24:	bc 01       	movw	r22, r24
    4d26:	cd 01       	movw	r24, r26
    4d28:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4d2c:	dc 01       	movw	r26, r24
    4d2e:	cb 01       	movw	r24, r22
    4d30:	f8 01       	movw	r30, r16
    4d32:	91 83       	std	Z+1, r25	; 0x01
    4d34:	80 83       	st	Z, r24
    4d36:	1f c0       	rjmp	.+62     	; 0x4d76 <main+0x225c>
    4d38:	fe 01       	movw	r30, r28
    4d3a:	e5 55       	subi	r30, 0x55	; 85
    4d3c:	ff 4f       	sbci	r31, 0xFF	; 255
    4d3e:	88 ec       	ldi	r24, 0xC8	; 200
    4d40:	90 e0       	ldi	r25, 0x00	; 0
    4d42:	91 83       	std	Z+1, r25	; 0x01
    4d44:	80 83       	st	Z, r24
    4d46:	fe 01       	movw	r30, r28
    4d48:	e5 55       	subi	r30, 0x55	; 85
    4d4a:	ff 4f       	sbci	r31, 0xFF	; 255
    4d4c:	80 81       	ld	r24, Z
    4d4e:	91 81       	ldd	r25, Z+1	; 0x01
    4d50:	01 97       	sbiw	r24, 0x01	; 1
    4d52:	f1 f7       	brne	.-4      	; 0x4d50 <main+0x2236>
    4d54:	fe 01       	movw	r30, r28
    4d56:	e5 55       	subi	r30, 0x55	; 85
    4d58:	ff 4f       	sbci	r31, 0xFF	; 255
    4d5a:	91 83       	std	Z+1, r25	; 0x01
    4d5c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4d5e:	de 01       	movw	r26, r28
    4d60:	a3 55       	subi	r26, 0x53	; 83
    4d62:	bf 4f       	sbci	r27, 0xFF	; 255
    4d64:	fe 01       	movw	r30, r28
    4d66:	e3 55       	subi	r30, 0x53	; 83
    4d68:	ff 4f       	sbci	r31, 0xFF	; 255
    4d6a:	80 81       	ld	r24, Z
    4d6c:	91 81       	ldd	r25, Z+1	; 0x01
    4d6e:	01 97       	sbiw	r24, 0x01	; 1
    4d70:	11 96       	adiw	r26, 0x01	; 1
    4d72:	9c 93       	st	X, r25
    4d74:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4d76:	fe 01       	movw	r30, r28
    4d78:	e3 55       	subi	r30, 0x53	; 83
    4d7a:	ff 4f       	sbci	r31, 0xFF	; 255
    4d7c:	80 81       	ld	r24, Z
    4d7e:	91 81       	ldd	r25, Z+1	; 0x01
    4d80:	00 97       	sbiw	r24, 0x00	; 0
    4d82:	d1 f6       	brne	.-76     	; 0x4d38 <main+0x221e>
    4d84:	27 c0       	rjmp	.+78     	; 0x4dd4 <main+0x22ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4d86:	8e 01       	movw	r16, r28
    4d88:	03 55       	subi	r16, 0x53	; 83
    4d8a:	1f 4f       	sbci	r17, 0xFF	; 255
    4d8c:	fe 01       	movw	r30, r28
    4d8e:	e1 55       	subi	r30, 0x51	; 81
    4d90:	ff 4f       	sbci	r31, 0xFF	; 255
    4d92:	60 81       	ld	r22, Z
    4d94:	71 81       	ldd	r23, Z+1	; 0x01
    4d96:	82 81       	ldd	r24, Z+2	; 0x02
    4d98:	93 81       	ldd	r25, Z+3	; 0x03
    4d9a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4d9e:	dc 01       	movw	r26, r24
    4da0:	cb 01       	movw	r24, r22
    4da2:	f8 01       	movw	r30, r16
    4da4:	91 83       	std	Z+1, r25	; 0x01
    4da6:	80 83       	st	Z, r24
    4da8:	de 01       	movw	r26, r28
    4daa:	a7 55       	subi	r26, 0x57	; 87
    4dac:	bf 4f       	sbci	r27, 0xFF	; 255
    4dae:	fe 01       	movw	r30, r28
    4db0:	e3 55       	subi	r30, 0x53	; 83
    4db2:	ff 4f       	sbci	r31, 0xFF	; 255
    4db4:	80 81       	ld	r24, Z
    4db6:	91 81       	ldd	r25, Z+1	; 0x01
    4db8:	8d 93       	st	X+, r24
    4dba:	9c 93       	st	X, r25
    4dbc:	fe 01       	movw	r30, r28
    4dbe:	e7 55       	subi	r30, 0x57	; 87
    4dc0:	ff 4f       	sbci	r31, 0xFF	; 255
    4dc2:	80 81       	ld	r24, Z
    4dc4:	91 81       	ldd	r25, Z+1	; 0x01
    4dc6:	01 97       	sbiw	r24, 0x01	; 1
    4dc8:	f1 f7       	brne	.-4      	; 0x4dc6 <main+0x22ac>
    4dca:	fe 01       	movw	r30, r28
    4dcc:	e7 55       	subi	r30, 0x57	; 87
    4dce:	ff 4f       	sbci	r31, 0xFF	; 255
    4dd0:	91 83       	std	Z+1, r25	; 0x01
    4dd2:	80 83       	st	Z, r24
											_delay_ms(50/6);
											SetPin_Val(DIO_PORTD, DIO_PIN2, PIN_HIGH);
    4dd4:	83 e0       	ldi	r24, 0x03	; 3
    4dd6:	62 e0       	ldi	r22, 0x02	; 2
    4dd8:	41 e0       	ldi	r20, 0x01	; 1
    4dda:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN4, PIN_HIGH);
    4dde:	83 e0       	ldi	r24, 0x03	; 3
    4de0:	64 e0       	ldi	r22, 0x04	; 4
    4de2:	41 e0       	ldi	r20, 0x01	; 1
    4de4:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_HIGH);
    4de8:	83 e0       	ldi	r24, 0x03	; 3
    4dea:	65 e0       	ldi	r22, 0x05	; 5
    4dec:	41 e0       	ldi	r20, 0x01	; 1
    4dee:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN6, PIN_HIGH);
    4df2:	83 e0       	ldi	r24, 0x03	; 3
    4df4:	66 e0       	ldi	r22, 0x06	; 6
    4df6:	41 e0       	ldi	r20, 0x01	; 1
    4df8:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN7, PIN_HIGH);
    4dfc:	83 e0       	ldi	r24, 0x03	; 3
    4dfe:	67 e0       	ldi	r22, 0x07	; 7
    4e00:	41 e0       	ldi	r20, 0x01	; 1
    4e02:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN3, PIN_LOW);
    4e06:	83 e0       	ldi	r24, 0x03	; 3
    4e08:	63 e0       	ldi	r22, 0x03	; 3
    4e0a:	40 e0       	ldi	r20, 0x00	; 0
    4e0c:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											PORTA=seg(second/10);
    4e10:	0b e3       	ldi	r16, 0x3B	; 59
    4e12:	10 e0       	ldi	r17, 0x00	; 0
    4e14:	fe 01       	movw	r30, r28
    4e16:	e3 54       	subi	r30, 0x43	; 67
    4e18:	fe 4f       	sbci	r31, 0xFE	; 254
    4e1a:	80 81       	ld	r24, Z
    4e1c:	9a e0       	ldi	r25, 0x0A	; 10
    4e1e:	69 2f       	mov	r22, r25
    4e20:	0e 94 87 33 	call	0x670e	; 0x670e <__udivmodqi4>
    4e24:	0e 94 8e 0a 	call	0x151c	; 0x151c <seg>
    4e28:	f8 01       	movw	r30, r16
    4e2a:	80 83       	st	Z, r24
    4e2c:	fe 01       	movw	r30, r28
    4e2e:	eb 55       	subi	r30, 0x5B	; 91
    4e30:	ff 4f       	sbci	r31, 0xFF	; 255
    4e32:	80 e0       	ldi	r24, 0x00	; 0
    4e34:	90 e0       	ldi	r25, 0x00	; 0
    4e36:	a0 e0       	ldi	r26, 0x00	; 0
    4e38:	b1 e4       	ldi	r27, 0x41	; 65
    4e3a:	80 83       	st	Z, r24
    4e3c:	91 83       	std	Z+1, r25	; 0x01
    4e3e:	a2 83       	std	Z+2, r26	; 0x02
    4e40:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4e42:	8e 01       	movw	r16, r28
    4e44:	0f 55       	subi	r16, 0x5F	; 95
    4e46:	1f 4f       	sbci	r17, 0xFF	; 255
    4e48:	fe 01       	movw	r30, r28
    4e4a:	eb 55       	subi	r30, 0x5B	; 91
    4e4c:	ff 4f       	sbci	r31, 0xFF	; 255
    4e4e:	60 81       	ld	r22, Z
    4e50:	71 81       	ldd	r23, Z+1	; 0x01
    4e52:	82 81       	ldd	r24, Z+2	; 0x02
    4e54:	93 81       	ldd	r25, Z+3	; 0x03
    4e56:	20 e0       	ldi	r18, 0x00	; 0
    4e58:	30 e0       	ldi	r19, 0x00	; 0
    4e5a:	4a ef       	ldi	r20, 0xFA	; 250
    4e5c:	54 e4       	ldi	r21, 0x44	; 68
    4e5e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4e62:	dc 01       	movw	r26, r24
    4e64:	cb 01       	movw	r24, r22
    4e66:	f8 01       	movw	r30, r16
    4e68:	80 83       	st	Z, r24
    4e6a:	91 83       	std	Z+1, r25	; 0x01
    4e6c:	a2 83       	std	Z+2, r26	; 0x02
    4e6e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4e70:	fe 01       	movw	r30, r28
    4e72:	ef 55       	subi	r30, 0x5F	; 95
    4e74:	ff 4f       	sbci	r31, 0xFF	; 255
    4e76:	60 81       	ld	r22, Z
    4e78:	71 81       	ldd	r23, Z+1	; 0x01
    4e7a:	82 81       	ldd	r24, Z+2	; 0x02
    4e7c:	93 81       	ldd	r25, Z+3	; 0x03
    4e7e:	20 e0       	ldi	r18, 0x00	; 0
    4e80:	30 e0       	ldi	r19, 0x00	; 0
    4e82:	40 e8       	ldi	r20, 0x80	; 128
    4e84:	5f e3       	ldi	r21, 0x3F	; 63
    4e86:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4e8a:	88 23       	and	r24, r24
    4e8c:	44 f4       	brge	.+16     	; 0x4e9e <main+0x2384>
		__ticks = 1;
    4e8e:	fe 01       	movw	r30, r28
    4e90:	e1 56       	subi	r30, 0x61	; 97
    4e92:	ff 4f       	sbci	r31, 0xFF	; 255
    4e94:	81 e0       	ldi	r24, 0x01	; 1
    4e96:	90 e0       	ldi	r25, 0x00	; 0
    4e98:	91 83       	std	Z+1, r25	; 0x01
    4e9a:	80 83       	st	Z, r24
    4e9c:	64 c0       	rjmp	.+200    	; 0x4f66 <main+0x244c>
	else if (__tmp > 65535)
    4e9e:	fe 01       	movw	r30, r28
    4ea0:	ef 55       	subi	r30, 0x5F	; 95
    4ea2:	ff 4f       	sbci	r31, 0xFF	; 255
    4ea4:	60 81       	ld	r22, Z
    4ea6:	71 81       	ldd	r23, Z+1	; 0x01
    4ea8:	82 81       	ldd	r24, Z+2	; 0x02
    4eaa:	93 81       	ldd	r25, Z+3	; 0x03
    4eac:	20 e0       	ldi	r18, 0x00	; 0
    4eae:	3f ef       	ldi	r19, 0xFF	; 255
    4eb0:	4f e7       	ldi	r20, 0x7F	; 127
    4eb2:	57 e4       	ldi	r21, 0x47	; 71
    4eb4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4eb8:	18 16       	cp	r1, r24
    4eba:	0c f0       	brlt	.+2      	; 0x4ebe <main+0x23a4>
    4ebc:	43 c0       	rjmp	.+134    	; 0x4f44 <main+0x242a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4ebe:	fe 01       	movw	r30, r28
    4ec0:	eb 55       	subi	r30, 0x5B	; 91
    4ec2:	ff 4f       	sbci	r31, 0xFF	; 255
    4ec4:	60 81       	ld	r22, Z
    4ec6:	71 81       	ldd	r23, Z+1	; 0x01
    4ec8:	82 81       	ldd	r24, Z+2	; 0x02
    4eca:	93 81       	ldd	r25, Z+3	; 0x03
    4ecc:	20 e0       	ldi	r18, 0x00	; 0
    4ece:	30 e0       	ldi	r19, 0x00	; 0
    4ed0:	40 e2       	ldi	r20, 0x20	; 32
    4ed2:	51 e4       	ldi	r21, 0x41	; 65
    4ed4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4ed8:	dc 01       	movw	r26, r24
    4eda:	cb 01       	movw	r24, r22
    4edc:	8e 01       	movw	r16, r28
    4ede:	01 56       	subi	r16, 0x61	; 97
    4ee0:	1f 4f       	sbci	r17, 0xFF	; 255
    4ee2:	bc 01       	movw	r22, r24
    4ee4:	cd 01       	movw	r24, r26
    4ee6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4eea:	dc 01       	movw	r26, r24
    4eec:	cb 01       	movw	r24, r22
    4eee:	f8 01       	movw	r30, r16
    4ef0:	91 83       	std	Z+1, r25	; 0x01
    4ef2:	80 83       	st	Z, r24
    4ef4:	1f c0       	rjmp	.+62     	; 0x4f34 <main+0x241a>
    4ef6:	fe 01       	movw	r30, r28
    4ef8:	e3 56       	subi	r30, 0x63	; 99
    4efa:	ff 4f       	sbci	r31, 0xFF	; 255
    4efc:	88 ec       	ldi	r24, 0xC8	; 200
    4efe:	90 e0       	ldi	r25, 0x00	; 0
    4f00:	91 83       	std	Z+1, r25	; 0x01
    4f02:	80 83       	st	Z, r24
    4f04:	fe 01       	movw	r30, r28
    4f06:	e3 56       	subi	r30, 0x63	; 99
    4f08:	ff 4f       	sbci	r31, 0xFF	; 255
    4f0a:	80 81       	ld	r24, Z
    4f0c:	91 81       	ldd	r25, Z+1	; 0x01
    4f0e:	01 97       	sbiw	r24, 0x01	; 1
    4f10:	f1 f7       	brne	.-4      	; 0x4f0e <main+0x23f4>
    4f12:	fe 01       	movw	r30, r28
    4f14:	e3 56       	subi	r30, 0x63	; 99
    4f16:	ff 4f       	sbci	r31, 0xFF	; 255
    4f18:	91 83       	std	Z+1, r25	; 0x01
    4f1a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4f1c:	de 01       	movw	r26, r28
    4f1e:	a1 56       	subi	r26, 0x61	; 97
    4f20:	bf 4f       	sbci	r27, 0xFF	; 255
    4f22:	fe 01       	movw	r30, r28
    4f24:	e1 56       	subi	r30, 0x61	; 97
    4f26:	ff 4f       	sbci	r31, 0xFF	; 255
    4f28:	80 81       	ld	r24, Z
    4f2a:	91 81       	ldd	r25, Z+1	; 0x01
    4f2c:	01 97       	sbiw	r24, 0x01	; 1
    4f2e:	11 96       	adiw	r26, 0x01	; 1
    4f30:	9c 93       	st	X, r25
    4f32:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4f34:	fe 01       	movw	r30, r28
    4f36:	e1 56       	subi	r30, 0x61	; 97
    4f38:	ff 4f       	sbci	r31, 0xFF	; 255
    4f3a:	80 81       	ld	r24, Z
    4f3c:	91 81       	ldd	r25, Z+1	; 0x01
    4f3e:	00 97       	sbiw	r24, 0x00	; 0
    4f40:	d1 f6       	brne	.-76     	; 0x4ef6 <main+0x23dc>
    4f42:	27 c0       	rjmp	.+78     	; 0x4f92 <main+0x2478>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4f44:	8e 01       	movw	r16, r28
    4f46:	01 56       	subi	r16, 0x61	; 97
    4f48:	1f 4f       	sbci	r17, 0xFF	; 255
    4f4a:	fe 01       	movw	r30, r28
    4f4c:	ef 55       	subi	r30, 0x5F	; 95
    4f4e:	ff 4f       	sbci	r31, 0xFF	; 255
    4f50:	60 81       	ld	r22, Z
    4f52:	71 81       	ldd	r23, Z+1	; 0x01
    4f54:	82 81       	ldd	r24, Z+2	; 0x02
    4f56:	93 81       	ldd	r25, Z+3	; 0x03
    4f58:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4f5c:	dc 01       	movw	r26, r24
    4f5e:	cb 01       	movw	r24, r22
    4f60:	f8 01       	movw	r30, r16
    4f62:	91 83       	std	Z+1, r25	; 0x01
    4f64:	80 83       	st	Z, r24
    4f66:	de 01       	movw	r26, r28
    4f68:	a5 56       	subi	r26, 0x65	; 101
    4f6a:	bf 4f       	sbci	r27, 0xFF	; 255
    4f6c:	fe 01       	movw	r30, r28
    4f6e:	e1 56       	subi	r30, 0x61	; 97
    4f70:	ff 4f       	sbci	r31, 0xFF	; 255
    4f72:	80 81       	ld	r24, Z
    4f74:	91 81       	ldd	r25, Z+1	; 0x01
    4f76:	8d 93       	st	X+, r24
    4f78:	9c 93       	st	X, r25
    4f7a:	fe 01       	movw	r30, r28
    4f7c:	e5 56       	subi	r30, 0x65	; 101
    4f7e:	ff 4f       	sbci	r31, 0xFF	; 255
    4f80:	80 81       	ld	r24, Z
    4f82:	91 81       	ldd	r25, Z+1	; 0x01
    4f84:	01 97       	sbiw	r24, 0x01	; 1
    4f86:	f1 f7       	brne	.-4      	; 0x4f84 <main+0x246a>
    4f88:	fe 01       	movw	r30, r28
    4f8a:	e5 56       	subi	r30, 0x65	; 101
    4f8c:	ff 4f       	sbci	r31, 0xFF	; 255
    4f8e:	91 83       	std	Z+1, r25	; 0x01
    4f90:	80 83       	st	Z, r24
											_delay_ms(50/6);
											SetPin_Val(DIO_PORTD, DIO_PIN2, PIN_HIGH);
    4f92:	83 e0       	ldi	r24, 0x03	; 3
    4f94:	62 e0       	ldi	r22, 0x02	; 2
    4f96:	41 e0       	ldi	r20, 0x01	; 1
    4f98:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN3, PIN_HIGH);
    4f9c:	83 e0       	ldi	r24, 0x03	; 3
    4f9e:	63 e0       	ldi	r22, 0x03	; 3
    4fa0:	41 e0       	ldi	r20, 0x01	; 1
    4fa2:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_HIGH);
    4fa6:	83 e0       	ldi	r24, 0x03	; 3
    4fa8:	65 e0       	ldi	r22, 0x05	; 5
    4faa:	41 e0       	ldi	r20, 0x01	; 1
    4fac:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN6, PIN_HIGH);
    4fb0:	83 e0       	ldi	r24, 0x03	; 3
    4fb2:	66 e0       	ldi	r22, 0x06	; 6
    4fb4:	41 e0       	ldi	r20, 0x01	; 1
    4fb6:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN7, PIN_HIGH);
    4fba:	83 e0       	ldi	r24, 0x03	; 3
    4fbc:	67 e0       	ldi	r22, 0x07	; 7
    4fbe:	41 e0       	ldi	r20, 0x01	; 1
    4fc0:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN4, PIN_LOW);
    4fc4:	83 e0       	ldi	r24, 0x03	; 3
    4fc6:	64 e0       	ldi	r22, 0x04	; 4
    4fc8:	40 e0       	ldi	r20, 0x00	; 0
    4fca:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											PORTA=seg(minute%10);
    4fce:	0b e3       	ldi	r16, 0x3B	; 59
    4fd0:	10 e0       	ldi	r17, 0x00	; 0
    4fd2:	fe 01       	movw	r30, r28
    4fd4:	e2 54       	subi	r30, 0x42	; 66
    4fd6:	fe 4f       	sbci	r31, 0xFE	; 254
    4fd8:	80 81       	ld	r24, Z
    4fda:	9a e0       	ldi	r25, 0x0A	; 10
    4fdc:	69 2f       	mov	r22, r25
    4fde:	0e 94 87 33 	call	0x670e	; 0x670e <__udivmodqi4>
    4fe2:	89 2f       	mov	r24, r25
    4fe4:	0e 94 8e 0a 	call	0x151c	; 0x151c <seg>
    4fe8:	f8 01       	movw	r30, r16
    4fea:	80 83       	st	Z, r24
    4fec:	fe 01       	movw	r30, r28
    4fee:	e9 56       	subi	r30, 0x69	; 105
    4ff0:	ff 4f       	sbci	r31, 0xFF	; 255
    4ff2:	80 e0       	ldi	r24, 0x00	; 0
    4ff4:	90 e0       	ldi	r25, 0x00	; 0
    4ff6:	a0 e0       	ldi	r26, 0x00	; 0
    4ff8:	b1 e4       	ldi	r27, 0x41	; 65
    4ffa:	80 83       	st	Z, r24
    4ffc:	91 83       	std	Z+1, r25	; 0x01
    4ffe:	a2 83       	std	Z+2, r26	; 0x02
    5000:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5002:	8e 01       	movw	r16, r28
    5004:	0d 56       	subi	r16, 0x6D	; 109
    5006:	1f 4f       	sbci	r17, 0xFF	; 255
    5008:	fe 01       	movw	r30, r28
    500a:	e9 56       	subi	r30, 0x69	; 105
    500c:	ff 4f       	sbci	r31, 0xFF	; 255
    500e:	60 81       	ld	r22, Z
    5010:	71 81       	ldd	r23, Z+1	; 0x01
    5012:	82 81       	ldd	r24, Z+2	; 0x02
    5014:	93 81       	ldd	r25, Z+3	; 0x03
    5016:	20 e0       	ldi	r18, 0x00	; 0
    5018:	30 e0       	ldi	r19, 0x00	; 0
    501a:	4a ef       	ldi	r20, 0xFA	; 250
    501c:	54 e4       	ldi	r21, 0x44	; 68
    501e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5022:	dc 01       	movw	r26, r24
    5024:	cb 01       	movw	r24, r22
    5026:	f8 01       	movw	r30, r16
    5028:	80 83       	st	Z, r24
    502a:	91 83       	std	Z+1, r25	; 0x01
    502c:	a2 83       	std	Z+2, r26	; 0x02
    502e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5030:	fe 01       	movw	r30, r28
    5032:	ed 56       	subi	r30, 0x6D	; 109
    5034:	ff 4f       	sbci	r31, 0xFF	; 255
    5036:	60 81       	ld	r22, Z
    5038:	71 81       	ldd	r23, Z+1	; 0x01
    503a:	82 81       	ldd	r24, Z+2	; 0x02
    503c:	93 81       	ldd	r25, Z+3	; 0x03
    503e:	20 e0       	ldi	r18, 0x00	; 0
    5040:	30 e0       	ldi	r19, 0x00	; 0
    5042:	40 e8       	ldi	r20, 0x80	; 128
    5044:	5f e3       	ldi	r21, 0x3F	; 63
    5046:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    504a:	88 23       	and	r24, r24
    504c:	44 f4       	brge	.+16     	; 0x505e <main+0x2544>
		__ticks = 1;
    504e:	fe 01       	movw	r30, r28
    5050:	ef 56       	subi	r30, 0x6F	; 111
    5052:	ff 4f       	sbci	r31, 0xFF	; 255
    5054:	81 e0       	ldi	r24, 0x01	; 1
    5056:	90 e0       	ldi	r25, 0x00	; 0
    5058:	91 83       	std	Z+1, r25	; 0x01
    505a:	80 83       	st	Z, r24
    505c:	64 c0       	rjmp	.+200    	; 0x5126 <main+0x260c>
	else if (__tmp > 65535)
    505e:	fe 01       	movw	r30, r28
    5060:	ed 56       	subi	r30, 0x6D	; 109
    5062:	ff 4f       	sbci	r31, 0xFF	; 255
    5064:	60 81       	ld	r22, Z
    5066:	71 81       	ldd	r23, Z+1	; 0x01
    5068:	82 81       	ldd	r24, Z+2	; 0x02
    506a:	93 81       	ldd	r25, Z+3	; 0x03
    506c:	20 e0       	ldi	r18, 0x00	; 0
    506e:	3f ef       	ldi	r19, 0xFF	; 255
    5070:	4f e7       	ldi	r20, 0x7F	; 127
    5072:	57 e4       	ldi	r21, 0x47	; 71
    5074:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    5078:	18 16       	cp	r1, r24
    507a:	0c f0       	brlt	.+2      	; 0x507e <main+0x2564>
    507c:	43 c0       	rjmp	.+134    	; 0x5104 <main+0x25ea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    507e:	fe 01       	movw	r30, r28
    5080:	e9 56       	subi	r30, 0x69	; 105
    5082:	ff 4f       	sbci	r31, 0xFF	; 255
    5084:	60 81       	ld	r22, Z
    5086:	71 81       	ldd	r23, Z+1	; 0x01
    5088:	82 81       	ldd	r24, Z+2	; 0x02
    508a:	93 81       	ldd	r25, Z+3	; 0x03
    508c:	20 e0       	ldi	r18, 0x00	; 0
    508e:	30 e0       	ldi	r19, 0x00	; 0
    5090:	40 e2       	ldi	r20, 0x20	; 32
    5092:	51 e4       	ldi	r21, 0x41	; 65
    5094:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5098:	dc 01       	movw	r26, r24
    509a:	cb 01       	movw	r24, r22
    509c:	8e 01       	movw	r16, r28
    509e:	0f 56       	subi	r16, 0x6F	; 111
    50a0:	1f 4f       	sbci	r17, 0xFF	; 255
    50a2:	bc 01       	movw	r22, r24
    50a4:	cd 01       	movw	r24, r26
    50a6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    50aa:	dc 01       	movw	r26, r24
    50ac:	cb 01       	movw	r24, r22
    50ae:	f8 01       	movw	r30, r16
    50b0:	91 83       	std	Z+1, r25	; 0x01
    50b2:	80 83       	st	Z, r24
    50b4:	1f c0       	rjmp	.+62     	; 0x50f4 <main+0x25da>
    50b6:	fe 01       	movw	r30, r28
    50b8:	e1 57       	subi	r30, 0x71	; 113
    50ba:	ff 4f       	sbci	r31, 0xFF	; 255
    50bc:	88 ec       	ldi	r24, 0xC8	; 200
    50be:	90 e0       	ldi	r25, 0x00	; 0
    50c0:	91 83       	std	Z+1, r25	; 0x01
    50c2:	80 83       	st	Z, r24
    50c4:	fe 01       	movw	r30, r28
    50c6:	e1 57       	subi	r30, 0x71	; 113
    50c8:	ff 4f       	sbci	r31, 0xFF	; 255
    50ca:	80 81       	ld	r24, Z
    50cc:	91 81       	ldd	r25, Z+1	; 0x01
    50ce:	01 97       	sbiw	r24, 0x01	; 1
    50d0:	f1 f7       	brne	.-4      	; 0x50ce <main+0x25b4>
    50d2:	fe 01       	movw	r30, r28
    50d4:	e1 57       	subi	r30, 0x71	; 113
    50d6:	ff 4f       	sbci	r31, 0xFF	; 255
    50d8:	91 83       	std	Z+1, r25	; 0x01
    50da:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    50dc:	de 01       	movw	r26, r28
    50de:	af 56       	subi	r26, 0x6F	; 111
    50e0:	bf 4f       	sbci	r27, 0xFF	; 255
    50e2:	fe 01       	movw	r30, r28
    50e4:	ef 56       	subi	r30, 0x6F	; 111
    50e6:	ff 4f       	sbci	r31, 0xFF	; 255
    50e8:	80 81       	ld	r24, Z
    50ea:	91 81       	ldd	r25, Z+1	; 0x01
    50ec:	01 97       	sbiw	r24, 0x01	; 1
    50ee:	11 96       	adiw	r26, 0x01	; 1
    50f0:	9c 93       	st	X, r25
    50f2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    50f4:	fe 01       	movw	r30, r28
    50f6:	ef 56       	subi	r30, 0x6F	; 111
    50f8:	ff 4f       	sbci	r31, 0xFF	; 255
    50fa:	80 81       	ld	r24, Z
    50fc:	91 81       	ldd	r25, Z+1	; 0x01
    50fe:	00 97       	sbiw	r24, 0x00	; 0
    5100:	d1 f6       	brne	.-76     	; 0x50b6 <main+0x259c>
    5102:	27 c0       	rjmp	.+78     	; 0x5152 <main+0x2638>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5104:	8e 01       	movw	r16, r28
    5106:	0f 56       	subi	r16, 0x6F	; 111
    5108:	1f 4f       	sbci	r17, 0xFF	; 255
    510a:	fe 01       	movw	r30, r28
    510c:	ed 56       	subi	r30, 0x6D	; 109
    510e:	ff 4f       	sbci	r31, 0xFF	; 255
    5110:	60 81       	ld	r22, Z
    5112:	71 81       	ldd	r23, Z+1	; 0x01
    5114:	82 81       	ldd	r24, Z+2	; 0x02
    5116:	93 81       	ldd	r25, Z+3	; 0x03
    5118:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    511c:	dc 01       	movw	r26, r24
    511e:	cb 01       	movw	r24, r22
    5120:	f8 01       	movw	r30, r16
    5122:	91 83       	std	Z+1, r25	; 0x01
    5124:	80 83       	st	Z, r24
    5126:	de 01       	movw	r26, r28
    5128:	a3 57       	subi	r26, 0x73	; 115
    512a:	bf 4f       	sbci	r27, 0xFF	; 255
    512c:	fe 01       	movw	r30, r28
    512e:	ef 56       	subi	r30, 0x6F	; 111
    5130:	ff 4f       	sbci	r31, 0xFF	; 255
    5132:	80 81       	ld	r24, Z
    5134:	91 81       	ldd	r25, Z+1	; 0x01
    5136:	8d 93       	st	X+, r24
    5138:	9c 93       	st	X, r25
    513a:	fe 01       	movw	r30, r28
    513c:	e3 57       	subi	r30, 0x73	; 115
    513e:	ff 4f       	sbci	r31, 0xFF	; 255
    5140:	80 81       	ld	r24, Z
    5142:	91 81       	ldd	r25, Z+1	; 0x01
    5144:	01 97       	sbiw	r24, 0x01	; 1
    5146:	f1 f7       	brne	.-4      	; 0x5144 <main+0x262a>
    5148:	fe 01       	movw	r30, r28
    514a:	e3 57       	subi	r30, 0x73	; 115
    514c:	ff 4f       	sbci	r31, 0xFF	; 255
    514e:	91 83       	std	Z+1, r25	; 0x01
    5150:	80 83       	st	Z, r24
											_delay_ms(50/6);
											SetPin_Val(DIO_PORTD, DIO_PIN2, PIN_HIGH);
    5152:	83 e0       	ldi	r24, 0x03	; 3
    5154:	62 e0       	ldi	r22, 0x02	; 2
    5156:	41 e0       	ldi	r20, 0x01	; 1
    5158:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN3, PIN_HIGH);
    515c:	83 e0       	ldi	r24, 0x03	; 3
    515e:	63 e0       	ldi	r22, 0x03	; 3
    5160:	41 e0       	ldi	r20, 0x01	; 1
    5162:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN4, PIN_HIGH);
    5166:	83 e0       	ldi	r24, 0x03	; 3
    5168:	64 e0       	ldi	r22, 0x04	; 4
    516a:	41 e0       	ldi	r20, 0x01	; 1
    516c:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN6, PIN_HIGH);
    5170:	83 e0       	ldi	r24, 0x03	; 3
    5172:	66 e0       	ldi	r22, 0x06	; 6
    5174:	41 e0       	ldi	r20, 0x01	; 1
    5176:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN7, PIN_HIGH);
    517a:	83 e0       	ldi	r24, 0x03	; 3
    517c:	67 e0       	ldi	r22, 0x07	; 7
    517e:	41 e0       	ldi	r20, 0x01	; 1
    5180:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_LOW);
    5184:	83 e0       	ldi	r24, 0x03	; 3
    5186:	65 e0       	ldi	r22, 0x05	; 5
    5188:	40 e0       	ldi	r20, 0x00	; 0
    518a:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											PORTA=seg(minute/10);
    518e:	0b e3       	ldi	r16, 0x3B	; 59
    5190:	10 e0       	ldi	r17, 0x00	; 0
    5192:	fe 01       	movw	r30, r28
    5194:	e2 54       	subi	r30, 0x42	; 66
    5196:	fe 4f       	sbci	r31, 0xFE	; 254
    5198:	80 81       	ld	r24, Z
    519a:	9a e0       	ldi	r25, 0x0A	; 10
    519c:	69 2f       	mov	r22, r25
    519e:	0e 94 87 33 	call	0x670e	; 0x670e <__udivmodqi4>
    51a2:	0e 94 8e 0a 	call	0x151c	; 0x151c <seg>
    51a6:	f8 01       	movw	r30, r16
    51a8:	80 83       	st	Z, r24
    51aa:	fe 01       	movw	r30, r28
    51ac:	e7 57       	subi	r30, 0x77	; 119
    51ae:	ff 4f       	sbci	r31, 0xFF	; 255
    51b0:	80 e0       	ldi	r24, 0x00	; 0
    51b2:	90 e0       	ldi	r25, 0x00	; 0
    51b4:	a0 e0       	ldi	r26, 0x00	; 0
    51b6:	b1 e4       	ldi	r27, 0x41	; 65
    51b8:	80 83       	st	Z, r24
    51ba:	91 83       	std	Z+1, r25	; 0x01
    51bc:	a2 83       	std	Z+2, r26	; 0x02
    51be:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    51c0:	8e 01       	movw	r16, r28
    51c2:	0b 57       	subi	r16, 0x7B	; 123
    51c4:	1f 4f       	sbci	r17, 0xFF	; 255
    51c6:	fe 01       	movw	r30, r28
    51c8:	e7 57       	subi	r30, 0x77	; 119
    51ca:	ff 4f       	sbci	r31, 0xFF	; 255
    51cc:	60 81       	ld	r22, Z
    51ce:	71 81       	ldd	r23, Z+1	; 0x01
    51d0:	82 81       	ldd	r24, Z+2	; 0x02
    51d2:	93 81       	ldd	r25, Z+3	; 0x03
    51d4:	20 e0       	ldi	r18, 0x00	; 0
    51d6:	30 e0       	ldi	r19, 0x00	; 0
    51d8:	4a ef       	ldi	r20, 0xFA	; 250
    51da:	54 e4       	ldi	r21, 0x44	; 68
    51dc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    51e0:	dc 01       	movw	r26, r24
    51e2:	cb 01       	movw	r24, r22
    51e4:	f8 01       	movw	r30, r16
    51e6:	80 83       	st	Z, r24
    51e8:	91 83       	std	Z+1, r25	; 0x01
    51ea:	a2 83       	std	Z+2, r26	; 0x02
    51ec:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    51ee:	fe 01       	movw	r30, r28
    51f0:	eb 57       	subi	r30, 0x7B	; 123
    51f2:	ff 4f       	sbci	r31, 0xFF	; 255
    51f4:	60 81       	ld	r22, Z
    51f6:	71 81       	ldd	r23, Z+1	; 0x01
    51f8:	82 81       	ldd	r24, Z+2	; 0x02
    51fa:	93 81       	ldd	r25, Z+3	; 0x03
    51fc:	20 e0       	ldi	r18, 0x00	; 0
    51fe:	30 e0       	ldi	r19, 0x00	; 0
    5200:	40 e8       	ldi	r20, 0x80	; 128
    5202:	5f e3       	ldi	r21, 0x3F	; 63
    5204:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    5208:	88 23       	and	r24, r24
    520a:	44 f4       	brge	.+16     	; 0x521c <main+0x2702>
		__ticks = 1;
    520c:	fe 01       	movw	r30, r28
    520e:	ed 57       	subi	r30, 0x7D	; 125
    5210:	ff 4f       	sbci	r31, 0xFF	; 255
    5212:	81 e0       	ldi	r24, 0x01	; 1
    5214:	90 e0       	ldi	r25, 0x00	; 0
    5216:	91 83       	std	Z+1, r25	; 0x01
    5218:	80 83       	st	Z, r24
    521a:	64 c0       	rjmp	.+200    	; 0x52e4 <main+0x27ca>
	else if (__tmp > 65535)
    521c:	fe 01       	movw	r30, r28
    521e:	eb 57       	subi	r30, 0x7B	; 123
    5220:	ff 4f       	sbci	r31, 0xFF	; 255
    5222:	60 81       	ld	r22, Z
    5224:	71 81       	ldd	r23, Z+1	; 0x01
    5226:	82 81       	ldd	r24, Z+2	; 0x02
    5228:	93 81       	ldd	r25, Z+3	; 0x03
    522a:	20 e0       	ldi	r18, 0x00	; 0
    522c:	3f ef       	ldi	r19, 0xFF	; 255
    522e:	4f e7       	ldi	r20, 0x7F	; 127
    5230:	57 e4       	ldi	r21, 0x47	; 71
    5232:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    5236:	18 16       	cp	r1, r24
    5238:	0c f0       	brlt	.+2      	; 0x523c <main+0x2722>
    523a:	43 c0       	rjmp	.+134    	; 0x52c2 <main+0x27a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    523c:	fe 01       	movw	r30, r28
    523e:	e7 57       	subi	r30, 0x77	; 119
    5240:	ff 4f       	sbci	r31, 0xFF	; 255
    5242:	60 81       	ld	r22, Z
    5244:	71 81       	ldd	r23, Z+1	; 0x01
    5246:	82 81       	ldd	r24, Z+2	; 0x02
    5248:	93 81       	ldd	r25, Z+3	; 0x03
    524a:	20 e0       	ldi	r18, 0x00	; 0
    524c:	30 e0       	ldi	r19, 0x00	; 0
    524e:	40 e2       	ldi	r20, 0x20	; 32
    5250:	51 e4       	ldi	r21, 0x41	; 65
    5252:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5256:	dc 01       	movw	r26, r24
    5258:	cb 01       	movw	r24, r22
    525a:	8e 01       	movw	r16, r28
    525c:	0d 57       	subi	r16, 0x7D	; 125
    525e:	1f 4f       	sbci	r17, 0xFF	; 255
    5260:	bc 01       	movw	r22, r24
    5262:	cd 01       	movw	r24, r26
    5264:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5268:	dc 01       	movw	r26, r24
    526a:	cb 01       	movw	r24, r22
    526c:	f8 01       	movw	r30, r16
    526e:	91 83       	std	Z+1, r25	; 0x01
    5270:	80 83       	st	Z, r24
    5272:	1f c0       	rjmp	.+62     	; 0x52b2 <main+0x2798>
    5274:	fe 01       	movw	r30, r28
    5276:	ef 57       	subi	r30, 0x7F	; 127
    5278:	ff 4f       	sbci	r31, 0xFF	; 255
    527a:	88 ec       	ldi	r24, 0xC8	; 200
    527c:	90 e0       	ldi	r25, 0x00	; 0
    527e:	91 83       	std	Z+1, r25	; 0x01
    5280:	80 83       	st	Z, r24
    5282:	fe 01       	movw	r30, r28
    5284:	ef 57       	subi	r30, 0x7F	; 127
    5286:	ff 4f       	sbci	r31, 0xFF	; 255
    5288:	80 81       	ld	r24, Z
    528a:	91 81       	ldd	r25, Z+1	; 0x01
    528c:	01 97       	sbiw	r24, 0x01	; 1
    528e:	f1 f7       	brne	.-4      	; 0x528c <main+0x2772>
    5290:	fe 01       	movw	r30, r28
    5292:	ef 57       	subi	r30, 0x7F	; 127
    5294:	ff 4f       	sbci	r31, 0xFF	; 255
    5296:	91 83       	std	Z+1, r25	; 0x01
    5298:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    529a:	de 01       	movw	r26, r28
    529c:	ad 57       	subi	r26, 0x7D	; 125
    529e:	bf 4f       	sbci	r27, 0xFF	; 255
    52a0:	fe 01       	movw	r30, r28
    52a2:	ed 57       	subi	r30, 0x7D	; 125
    52a4:	ff 4f       	sbci	r31, 0xFF	; 255
    52a6:	80 81       	ld	r24, Z
    52a8:	91 81       	ldd	r25, Z+1	; 0x01
    52aa:	01 97       	sbiw	r24, 0x01	; 1
    52ac:	11 96       	adiw	r26, 0x01	; 1
    52ae:	9c 93       	st	X, r25
    52b0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    52b2:	fe 01       	movw	r30, r28
    52b4:	ed 57       	subi	r30, 0x7D	; 125
    52b6:	ff 4f       	sbci	r31, 0xFF	; 255
    52b8:	80 81       	ld	r24, Z
    52ba:	91 81       	ldd	r25, Z+1	; 0x01
    52bc:	00 97       	sbiw	r24, 0x00	; 0
    52be:	d1 f6       	brne	.-76     	; 0x5274 <main+0x275a>
    52c0:	27 c0       	rjmp	.+78     	; 0x5310 <main+0x27f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    52c2:	8e 01       	movw	r16, r28
    52c4:	0d 57       	subi	r16, 0x7D	; 125
    52c6:	1f 4f       	sbci	r17, 0xFF	; 255
    52c8:	fe 01       	movw	r30, r28
    52ca:	eb 57       	subi	r30, 0x7B	; 123
    52cc:	ff 4f       	sbci	r31, 0xFF	; 255
    52ce:	60 81       	ld	r22, Z
    52d0:	71 81       	ldd	r23, Z+1	; 0x01
    52d2:	82 81       	ldd	r24, Z+2	; 0x02
    52d4:	93 81       	ldd	r25, Z+3	; 0x03
    52d6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    52da:	dc 01       	movw	r26, r24
    52dc:	cb 01       	movw	r24, r22
    52de:	f8 01       	movw	r30, r16
    52e0:	91 83       	std	Z+1, r25	; 0x01
    52e2:	80 83       	st	Z, r24
    52e4:	de 01       	movw	r26, r28
    52e6:	a1 58       	subi	r26, 0x81	; 129
    52e8:	bf 4f       	sbci	r27, 0xFF	; 255
    52ea:	fe 01       	movw	r30, r28
    52ec:	ed 57       	subi	r30, 0x7D	; 125
    52ee:	ff 4f       	sbci	r31, 0xFF	; 255
    52f0:	80 81       	ld	r24, Z
    52f2:	91 81       	ldd	r25, Z+1	; 0x01
    52f4:	8d 93       	st	X+, r24
    52f6:	9c 93       	st	X, r25
    52f8:	fe 01       	movw	r30, r28
    52fa:	e1 58       	subi	r30, 0x81	; 129
    52fc:	ff 4f       	sbci	r31, 0xFF	; 255
    52fe:	80 81       	ld	r24, Z
    5300:	91 81       	ldd	r25, Z+1	; 0x01
    5302:	01 97       	sbiw	r24, 0x01	; 1
    5304:	f1 f7       	brne	.-4      	; 0x5302 <main+0x27e8>
    5306:	fe 01       	movw	r30, r28
    5308:	e1 58       	subi	r30, 0x81	; 129
    530a:	ff 4f       	sbci	r31, 0xFF	; 255
    530c:	91 83       	std	Z+1, r25	; 0x01
    530e:	80 83       	st	Z, r24
											_delay_ms(50/6);
											SetPin_Val(DIO_PORTD, DIO_PIN2, PIN_HIGH);
    5310:	83 e0       	ldi	r24, 0x03	; 3
    5312:	62 e0       	ldi	r22, 0x02	; 2
    5314:	41 e0       	ldi	r20, 0x01	; 1
    5316:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN3, PIN_HIGH);
    531a:	83 e0       	ldi	r24, 0x03	; 3
    531c:	63 e0       	ldi	r22, 0x03	; 3
    531e:	41 e0       	ldi	r20, 0x01	; 1
    5320:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN4, PIN_HIGH);
    5324:	83 e0       	ldi	r24, 0x03	; 3
    5326:	64 e0       	ldi	r22, 0x04	; 4
    5328:	41 e0       	ldi	r20, 0x01	; 1
    532a:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_HIGH);
    532e:	83 e0       	ldi	r24, 0x03	; 3
    5330:	65 e0       	ldi	r22, 0x05	; 5
    5332:	41 e0       	ldi	r20, 0x01	; 1
    5334:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN7, PIN_HIGH);
    5338:	83 e0       	ldi	r24, 0x03	; 3
    533a:	67 e0       	ldi	r22, 0x07	; 7
    533c:	41 e0       	ldi	r20, 0x01	; 1
    533e:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN6, PIN_LOW);
    5342:	83 e0       	ldi	r24, 0x03	; 3
    5344:	66 e0       	ldi	r22, 0x06	; 6
    5346:	40 e0       	ldi	r20, 0x00	; 0
    5348:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											PORTA=seg(hour%10);
    534c:	0b e3       	ldi	r16, 0x3B	; 59
    534e:	10 e0       	ldi	r17, 0x00	; 0
    5350:	fe 01       	movw	r30, r28
    5352:	e1 54       	subi	r30, 0x41	; 65
    5354:	fe 4f       	sbci	r31, 0xFE	; 254
    5356:	80 81       	ld	r24, Z
    5358:	9a e0       	ldi	r25, 0x0A	; 10
    535a:	69 2f       	mov	r22, r25
    535c:	0e 94 87 33 	call	0x670e	; 0x670e <__udivmodqi4>
    5360:	89 2f       	mov	r24, r25
    5362:	0e 94 8e 0a 	call	0x151c	; 0x151c <seg>
    5366:	f8 01       	movw	r30, r16
    5368:	80 83       	st	Z, r24
    536a:	fe 01       	movw	r30, r28
    536c:	e5 58       	subi	r30, 0x85	; 133
    536e:	ff 4f       	sbci	r31, 0xFF	; 255
    5370:	80 e0       	ldi	r24, 0x00	; 0
    5372:	90 e0       	ldi	r25, 0x00	; 0
    5374:	a0 e0       	ldi	r26, 0x00	; 0
    5376:	b1 e4       	ldi	r27, 0x41	; 65
    5378:	80 83       	st	Z, r24
    537a:	91 83       	std	Z+1, r25	; 0x01
    537c:	a2 83       	std	Z+2, r26	; 0x02
    537e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5380:	8e 01       	movw	r16, r28
    5382:	09 58       	subi	r16, 0x89	; 137
    5384:	1f 4f       	sbci	r17, 0xFF	; 255
    5386:	fe 01       	movw	r30, r28
    5388:	e5 58       	subi	r30, 0x85	; 133
    538a:	ff 4f       	sbci	r31, 0xFF	; 255
    538c:	60 81       	ld	r22, Z
    538e:	71 81       	ldd	r23, Z+1	; 0x01
    5390:	82 81       	ldd	r24, Z+2	; 0x02
    5392:	93 81       	ldd	r25, Z+3	; 0x03
    5394:	20 e0       	ldi	r18, 0x00	; 0
    5396:	30 e0       	ldi	r19, 0x00	; 0
    5398:	4a ef       	ldi	r20, 0xFA	; 250
    539a:	54 e4       	ldi	r21, 0x44	; 68
    539c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    53a0:	dc 01       	movw	r26, r24
    53a2:	cb 01       	movw	r24, r22
    53a4:	f8 01       	movw	r30, r16
    53a6:	80 83       	st	Z, r24
    53a8:	91 83       	std	Z+1, r25	; 0x01
    53aa:	a2 83       	std	Z+2, r26	; 0x02
    53ac:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    53ae:	fe 01       	movw	r30, r28
    53b0:	e9 58       	subi	r30, 0x89	; 137
    53b2:	ff 4f       	sbci	r31, 0xFF	; 255
    53b4:	60 81       	ld	r22, Z
    53b6:	71 81       	ldd	r23, Z+1	; 0x01
    53b8:	82 81       	ldd	r24, Z+2	; 0x02
    53ba:	93 81       	ldd	r25, Z+3	; 0x03
    53bc:	20 e0       	ldi	r18, 0x00	; 0
    53be:	30 e0       	ldi	r19, 0x00	; 0
    53c0:	40 e8       	ldi	r20, 0x80	; 128
    53c2:	5f e3       	ldi	r21, 0x3F	; 63
    53c4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    53c8:	88 23       	and	r24, r24
    53ca:	44 f4       	brge	.+16     	; 0x53dc <main+0x28c2>
		__ticks = 1;
    53cc:	fe 01       	movw	r30, r28
    53ce:	eb 58       	subi	r30, 0x8B	; 139
    53d0:	ff 4f       	sbci	r31, 0xFF	; 255
    53d2:	81 e0       	ldi	r24, 0x01	; 1
    53d4:	90 e0       	ldi	r25, 0x00	; 0
    53d6:	91 83       	std	Z+1, r25	; 0x01
    53d8:	80 83       	st	Z, r24
    53da:	64 c0       	rjmp	.+200    	; 0x54a4 <main+0x298a>
	else if (__tmp > 65535)
    53dc:	fe 01       	movw	r30, r28
    53de:	e9 58       	subi	r30, 0x89	; 137
    53e0:	ff 4f       	sbci	r31, 0xFF	; 255
    53e2:	60 81       	ld	r22, Z
    53e4:	71 81       	ldd	r23, Z+1	; 0x01
    53e6:	82 81       	ldd	r24, Z+2	; 0x02
    53e8:	93 81       	ldd	r25, Z+3	; 0x03
    53ea:	20 e0       	ldi	r18, 0x00	; 0
    53ec:	3f ef       	ldi	r19, 0xFF	; 255
    53ee:	4f e7       	ldi	r20, 0x7F	; 127
    53f0:	57 e4       	ldi	r21, 0x47	; 71
    53f2:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    53f6:	18 16       	cp	r1, r24
    53f8:	0c f0       	brlt	.+2      	; 0x53fc <main+0x28e2>
    53fa:	43 c0       	rjmp	.+134    	; 0x5482 <main+0x2968>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    53fc:	fe 01       	movw	r30, r28
    53fe:	e5 58       	subi	r30, 0x85	; 133
    5400:	ff 4f       	sbci	r31, 0xFF	; 255
    5402:	60 81       	ld	r22, Z
    5404:	71 81       	ldd	r23, Z+1	; 0x01
    5406:	82 81       	ldd	r24, Z+2	; 0x02
    5408:	93 81       	ldd	r25, Z+3	; 0x03
    540a:	20 e0       	ldi	r18, 0x00	; 0
    540c:	30 e0       	ldi	r19, 0x00	; 0
    540e:	40 e2       	ldi	r20, 0x20	; 32
    5410:	51 e4       	ldi	r21, 0x41	; 65
    5412:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5416:	dc 01       	movw	r26, r24
    5418:	cb 01       	movw	r24, r22
    541a:	8e 01       	movw	r16, r28
    541c:	0b 58       	subi	r16, 0x8B	; 139
    541e:	1f 4f       	sbci	r17, 0xFF	; 255
    5420:	bc 01       	movw	r22, r24
    5422:	cd 01       	movw	r24, r26
    5424:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5428:	dc 01       	movw	r26, r24
    542a:	cb 01       	movw	r24, r22
    542c:	f8 01       	movw	r30, r16
    542e:	91 83       	std	Z+1, r25	; 0x01
    5430:	80 83       	st	Z, r24
    5432:	1f c0       	rjmp	.+62     	; 0x5472 <main+0x2958>
    5434:	fe 01       	movw	r30, r28
    5436:	ed 58       	subi	r30, 0x8D	; 141
    5438:	ff 4f       	sbci	r31, 0xFF	; 255
    543a:	88 ec       	ldi	r24, 0xC8	; 200
    543c:	90 e0       	ldi	r25, 0x00	; 0
    543e:	91 83       	std	Z+1, r25	; 0x01
    5440:	80 83       	st	Z, r24
    5442:	fe 01       	movw	r30, r28
    5444:	ed 58       	subi	r30, 0x8D	; 141
    5446:	ff 4f       	sbci	r31, 0xFF	; 255
    5448:	80 81       	ld	r24, Z
    544a:	91 81       	ldd	r25, Z+1	; 0x01
    544c:	01 97       	sbiw	r24, 0x01	; 1
    544e:	f1 f7       	brne	.-4      	; 0x544c <main+0x2932>
    5450:	fe 01       	movw	r30, r28
    5452:	ed 58       	subi	r30, 0x8D	; 141
    5454:	ff 4f       	sbci	r31, 0xFF	; 255
    5456:	91 83       	std	Z+1, r25	; 0x01
    5458:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    545a:	de 01       	movw	r26, r28
    545c:	ab 58       	subi	r26, 0x8B	; 139
    545e:	bf 4f       	sbci	r27, 0xFF	; 255
    5460:	fe 01       	movw	r30, r28
    5462:	eb 58       	subi	r30, 0x8B	; 139
    5464:	ff 4f       	sbci	r31, 0xFF	; 255
    5466:	80 81       	ld	r24, Z
    5468:	91 81       	ldd	r25, Z+1	; 0x01
    546a:	01 97       	sbiw	r24, 0x01	; 1
    546c:	11 96       	adiw	r26, 0x01	; 1
    546e:	9c 93       	st	X, r25
    5470:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5472:	fe 01       	movw	r30, r28
    5474:	eb 58       	subi	r30, 0x8B	; 139
    5476:	ff 4f       	sbci	r31, 0xFF	; 255
    5478:	80 81       	ld	r24, Z
    547a:	91 81       	ldd	r25, Z+1	; 0x01
    547c:	00 97       	sbiw	r24, 0x00	; 0
    547e:	d1 f6       	brne	.-76     	; 0x5434 <main+0x291a>
    5480:	27 c0       	rjmp	.+78     	; 0x54d0 <main+0x29b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5482:	8e 01       	movw	r16, r28
    5484:	0b 58       	subi	r16, 0x8B	; 139
    5486:	1f 4f       	sbci	r17, 0xFF	; 255
    5488:	fe 01       	movw	r30, r28
    548a:	e9 58       	subi	r30, 0x89	; 137
    548c:	ff 4f       	sbci	r31, 0xFF	; 255
    548e:	60 81       	ld	r22, Z
    5490:	71 81       	ldd	r23, Z+1	; 0x01
    5492:	82 81       	ldd	r24, Z+2	; 0x02
    5494:	93 81       	ldd	r25, Z+3	; 0x03
    5496:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    549a:	dc 01       	movw	r26, r24
    549c:	cb 01       	movw	r24, r22
    549e:	f8 01       	movw	r30, r16
    54a0:	91 83       	std	Z+1, r25	; 0x01
    54a2:	80 83       	st	Z, r24
    54a4:	de 01       	movw	r26, r28
    54a6:	af 58       	subi	r26, 0x8F	; 143
    54a8:	bf 4f       	sbci	r27, 0xFF	; 255
    54aa:	fe 01       	movw	r30, r28
    54ac:	eb 58       	subi	r30, 0x8B	; 139
    54ae:	ff 4f       	sbci	r31, 0xFF	; 255
    54b0:	80 81       	ld	r24, Z
    54b2:	91 81       	ldd	r25, Z+1	; 0x01
    54b4:	8d 93       	st	X+, r24
    54b6:	9c 93       	st	X, r25
    54b8:	fe 01       	movw	r30, r28
    54ba:	ef 58       	subi	r30, 0x8F	; 143
    54bc:	ff 4f       	sbci	r31, 0xFF	; 255
    54be:	80 81       	ld	r24, Z
    54c0:	91 81       	ldd	r25, Z+1	; 0x01
    54c2:	01 97       	sbiw	r24, 0x01	; 1
    54c4:	f1 f7       	brne	.-4      	; 0x54c2 <main+0x29a8>
    54c6:	fe 01       	movw	r30, r28
    54c8:	ef 58       	subi	r30, 0x8F	; 143
    54ca:	ff 4f       	sbci	r31, 0xFF	; 255
    54cc:	91 83       	std	Z+1, r25	; 0x01
    54ce:	80 83       	st	Z, r24
											_delay_ms(50/6);
											SetPin_Val(DIO_PORTD, DIO_PIN2, PIN_HIGH);
    54d0:	83 e0       	ldi	r24, 0x03	; 3
    54d2:	62 e0       	ldi	r22, 0x02	; 2
    54d4:	41 e0       	ldi	r20, 0x01	; 1
    54d6:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN3, PIN_HIGH);
    54da:	83 e0       	ldi	r24, 0x03	; 3
    54dc:	63 e0       	ldi	r22, 0x03	; 3
    54de:	41 e0       	ldi	r20, 0x01	; 1
    54e0:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN4, PIN_HIGH);
    54e4:	83 e0       	ldi	r24, 0x03	; 3
    54e6:	64 e0       	ldi	r22, 0x04	; 4
    54e8:	41 e0       	ldi	r20, 0x01	; 1
    54ea:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_HIGH);
    54ee:	83 e0       	ldi	r24, 0x03	; 3
    54f0:	65 e0       	ldi	r22, 0x05	; 5
    54f2:	41 e0       	ldi	r20, 0x01	; 1
    54f4:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN6, PIN_HIGH);
    54f8:	83 e0       	ldi	r24, 0x03	; 3
    54fa:	66 e0       	ldi	r22, 0x06	; 6
    54fc:	41 e0       	ldi	r20, 0x01	; 1
    54fe:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											SetPin_Val(DIO_PORTD, DIO_PIN7, PIN_LOW);
    5502:	83 e0       	ldi	r24, 0x03	; 3
    5504:	67 e0       	ldi	r22, 0x07	; 7
    5506:	40 e0       	ldi	r20, 0x00	; 0
    5508:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
											PORTA=seg(hour/10);
    550c:	0b e3       	ldi	r16, 0x3B	; 59
    550e:	10 e0       	ldi	r17, 0x00	; 0
    5510:	fe 01       	movw	r30, r28
    5512:	e1 54       	subi	r30, 0x41	; 65
    5514:	fe 4f       	sbci	r31, 0xFE	; 254
    5516:	80 81       	ld	r24, Z
    5518:	9a e0       	ldi	r25, 0x0A	; 10
    551a:	69 2f       	mov	r22, r25
    551c:	0e 94 87 33 	call	0x670e	; 0x670e <__udivmodqi4>
    5520:	0e 94 8e 0a 	call	0x151c	; 0x151c <seg>
    5524:	f8 01       	movw	r30, r16
    5526:	80 83       	st	Z, r24
    5528:	fe 01       	movw	r30, r28
    552a:	e3 59       	subi	r30, 0x93	; 147
    552c:	ff 4f       	sbci	r31, 0xFF	; 255
    552e:	80 e0       	ldi	r24, 0x00	; 0
    5530:	90 e0       	ldi	r25, 0x00	; 0
    5532:	a0 e0       	ldi	r26, 0x00	; 0
    5534:	b1 e4       	ldi	r27, 0x41	; 65
    5536:	80 83       	st	Z, r24
    5538:	91 83       	std	Z+1, r25	; 0x01
    553a:	a2 83       	std	Z+2, r26	; 0x02
    553c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    553e:	8e 01       	movw	r16, r28
    5540:	07 59       	subi	r16, 0x97	; 151
    5542:	1f 4f       	sbci	r17, 0xFF	; 255
    5544:	fe 01       	movw	r30, r28
    5546:	e3 59       	subi	r30, 0x93	; 147
    5548:	ff 4f       	sbci	r31, 0xFF	; 255
    554a:	60 81       	ld	r22, Z
    554c:	71 81       	ldd	r23, Z+1	; 0x01
    554e:	82 81       	ldd	r24, Z+2	; 0x02
    5550:	93 81       	ldd	r25, Z+3	; 0x03
    5552:	20 e0       	ldi	r18, 0x00	; 0
    5554:	30 e0       	ldi	r19, 0x00	; 0
    5556:	4a ef       	ldi	r20, 0xFA	; 250
    5558:	54 e4       	ldi	r21, 0x44	; 68
    555a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    555e:	dc 01       	movw	r26, r24
    5560:	cb 01       	movw	r24, r22
    5562:	f8 01       	movw	r30, r16
    5564:	80 83       	st	Z, r24
    5566:	91 83       	std	Z+1, r25	; 0x01
    5568:	a2 83       	std	Z+2, r26	; 0x02
    556a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    556c:	fe 01       	movw	r30, r28
    556e:	e7 59       	subi	r30, 0x97	; 151
    5570:	ff 4f       	sbci	r31, 0xFF	; 255
    5572:	60 81       	ld	r22, Z
    5574:	71 81       	ldd	r23, Z+1	; 0x01
    5576:	82 81       	ldd	r24, Z+2	; 0x02
    5578:	93 81       	ldd	r25, Z+3	; 0x03
    557a:	20 e0       	ldi	r18, 0x00	; 0
    557c:	30 e0       	ldi	r19, 0x00	; 0
    557e:	40 e8       	ldi	r20, 0x80	; 128
    5580:	5f e3       	ldi	r21, 0x3F	; 63
    5582:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    5586:	88 23       	and	r24, r24
    5588:	44 f4       	brge	.+16     	; 0x559a <main+0x2a80>
		__ticks = 1;
    558a:	fe 01       	movw	r30, r28
    558c:	e9 59       	subi	r30, 0x99	; 153
    558e:	ff 4f       	sbci	r31, 0xFF	; 255
    5590:	81 e0       	ldi	r24, 0x01	; 1
    5592:	90 e0       	ldi	r25, 0x00	; 0
    5594:	91 83       	std	Z+1, r25	; 0x01
    5596:	80 83       	st	Z, r24
    5598:	64 c0       	rjmp	.+200    	; 0x5662 <main+0x2b48>
	else if (__tmp > 65535)
    559a:	fe 01       	movw	r30, r28
    559c:	e7 59       	subi	r30, 0x97	; 151
    559e:	ff 4f       	sbci	r31, 0xFF	; 255
    55a0:	60 81       	ld	r22, Z
    55a2:	71 81       	ldd	r23, Z+1	; 0x01
    55a4:	82 81       	ldd	r24, Z+2	; 0x02
    55a6:	93 81       	ldd	r25, Z+3	; 0x03
    55a8:	20 e0       	ldi	r18, 0x00	; 0
    55aa:	3f ef       	ldi	r19, 0xFF	; 255
    55ac:	4f e7       	ldi	r20, 0x7F	; 127
    55ae:	57 e4       	ldi	r21, 0x47	; 71
    55b0:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    55b4:	18 16       	cp	r1, r24
    55b6:	0c f0       	brlt	.+2      	; 0x55ba <main+0x2aa0>
    55b8:	43 c0       	rjmp	.+134    	; 0x5640 <main+0x2b26>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    55ba:	fe 01       	movw	r30, r28
    55bc:	e3 59       	subi	r30, 0x93	; 147
    55be:	ff 4f       	sbci	r31, 0xFF	; 255
    55c0:	60 81       	ld	r22, Z
    55c2:	71 81       	ldd	r23, Z+1	; 0x01
    55c4:	82 81       	ldd	r24, Z+2	; 0x02
    55c6:	93 81       	ldd	r25, Z+3	; 0x03
    55c8:	20 e0       	ldi	r18, 0x00	; 0
    55ca:	30 e0       	ldi	r19, 0x00	; 0
    55cc:	40 e2       	ldi	r20, 0x20	; 32
    55ce:	51 e4       	ldi	r21, 0x41	; 65
    55d0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    55d4:	dc 01       	movw	r26, r24
    55d6:	cb 01       	movw	r24, r22
    55d8:	8e 01       	movw	r16, r28
    55da:	09 59       	subi	r16, 0x99	; 153
    55dc:	1f 4f       	sbci	r17, 0xFF	; 255
    55de:	bc 01       	movw	r22, r24
    55e0:	cd 01       	movw	r24, r26
    55e2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    55e6:	dc 01       	movw	r26, r24
    55e8:	cb 01       	movw	r24, r22
    55ea:	f8 01       	movw	r30, r16
    55ec:	91 83       	std	Z+1, r25	; 0x01
    55ee:	80 83       	st	Z, r24
    55f0:	1f c0       	rjmp	.+62     	; 0x5630 <main+0x2b16>
    55f2:	fe 01       	movw	r30, r28
    55f4:	eb 59       	subi	r30, 0x9B	; 155
    55f6:	ff 4f       	sbci	r31, 0xFF	; 255
    55f8:	88 ec       	ldi	r24, 0xC8	; 200
    55fa:	90 e0       	ldi	r25, 0x00	; 0
    55fc:	91 83       	std	Z+1, r25	; 0x01
    55fe:	80 83       	st	Z, r24
    5600:	fe 01       	movw	r30, r28
    5602:	eb 59       	subi	r30, 0x9B	; 155
    5604:	ff 4f       	sbci	r31, 0xFF	; 255
    5606:	80 81       	ld	r24, Z
    5608:	91 81       	ldd	r25, Z+1	; 0x01
    560a:	01 97       	sbiw	r24, 0x01	; 1
    560c:	f1 f7       	brne	.-4      	; 0x560a <main+0x2af0>
    560e:	fe 01       	movw	r30, r28
    5610:	eb 59       	subi	r30, 0x9B	; 155
    5612:	ff 4f       	sbci	r31, 0xFF	; 255
    5614:	91 83       	std	Z+1, r25	; 0x01
    5616:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5618:	de 01       	movw	r26, r28
    561a:	a9 59       	subi	r26, 0x99	; 153
    561c:	bf 4f       	sbci	r27, 0xFF	; 255
    561e:	fe 01       	movw	r30, r28
    5620:	e9 59       	subi	r30, 0x99	; 153
    5622:	ff 4f       	sbci	r31, 0xFF	; 255
    5624:	80 81       	ld	r24, Z
    5626:	91 81       	ldd	r25, Z+1	; 0x01
    5628:	01 97       	sbiw	r24, 0x01	; 1
    562a:	11 96       	adiw	r26, 0x01	; 1
    562c:	9c 93       	st	X, r25
    562e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5630:	fe 01       	movw	r30, r28
    5632:	e9 59       	subi	r30, 0x99	; 153
    5634:	ff 4f       	sbci	r31, 0xFF	; 255
    5636:	80 81       	ld	r24, Z
    5638:	91 81       	ldd	r25, Z+1	; 0x01
    563a:	00 97       	sbiw	r24, 0x00	; 0
    563c:	d1 f6       	brne	.-76     	; 0x55f2 <main+0x2ad8>
    563e:	27 c0       	rjmp	.+78     	; 0x568e <main+0x2b74>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5640:	8e 01       	movw	r16, r28
    5642:	09 59       	subi	r16, 0x99	; 153
    5644:	1f 4f       	sbci	r17, 0xFF	; 255
    5646:	fe 01       	movw	r30, r28
    5648:	e7 59       	subi	r30, 0x97	; 151
    564a:	ff 4f       	sbci	r31, 0xFF	; 255
    564c:	60 81       	ld	r22, Z
    564e:	71 81       	ldd	r23, Z+1	; 0x01
    5650:	82 81       	ldd	r24, Z+2	; 0x02
    5652:	93 81       	ldd	r25, Z+3	; 0x03
    5654:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5658:	dc 01       	movw	r26, r24
    565a:	cb 01       	movw	r24, r22
    565c:	f8 01       	movw	r30, r16
    565e:	91 83       	std	Z+1, r25	; 0x01
    5660:	80 83       	st	Z, r24
    5662:	de 01       	movw	r26, r28
    5664:	ad 59       	subi	r26, 0x9D	; 157
    5666:	bf 4f       	sbci	r27, 0xFF	; 255
    5668:	fe 01       	movw	r30, r28
    566a:	e9 59       	subi	r30, 0x99	; 153
    566c:	ff 4f       	sbci	r31, 0xFF	; 255
    566e:	80 81       	ld	r24, Z
    5670:	91 81       	ldd	r25, Z+1	; 0x01
    5672:	8d 93       	st	X+, r24
    5674:	9c 93       	st	X, r25
    5676:	fe 01       	movw	r30, r28
    5678:	ed 59       	subi	r30, 0x9D	; 157
    567a:	ff 4f       	sbci	r31, 0xFF	; 255
    567c:	80 81       	ld	r24, Z
    567e:	91 81       	ldd	r25, Z+1	; 0x01
    5680:	01 97       	sbiw	r24, 0x01	; 1
    5682:	f1 f7       	brne	.-4      	; 0x5680 <main+0x2b66>
    5684:	fe 01       	movw	r30, r28
    5686:	ed 59       	subi	r30, 0x9D	; 157
    5688:	ff 4f       	sbci	r31, 0xFF	; 255
    568a:	91 83       	std	Z+1, r25	; 0x01
    568c:	80 83       	st	Z, r24


										}
								if(Get_PinVal(DIO_PORTB, DIO_PIN1)==0)
								{
									while(Get_PinVal(DIO_PORTB, DIO_PIN2)!=0)
    568e:	81 e0       	ldi	r24, 0x01	; 1
    5690:	62 e0       	ldi	r22, 0x02	; 2
    5692:	0e 94 12 09 	call	0x1224	; 0x1224 <Get_PinVal>
    5696:	88 23       	and	r24, r24
    5698:	09 f0       	breq	.+2      	; 0x569c <main+0x2b82>
    569a:	bc ca       	rjmp	.-2696   	; 0x4c14 <main+0x20fa>
		{
		for(u8 hour =0;(hour<=12)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;hour++)
			{
			for( u8 minute =0;(minute<60)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;minute++)
				{
				for( u8 second =0;(second<60)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;second++)
    569c:	de 01       	movw	r26, r28
    569e:	a3 54       	subi	r26, 0x43	; 67
    56a0:	be 4f       	sbci	r27, 0xFE	; 254
    56a2:	fe 01       	movw	r30, r28
    56a4:	e3 54       	subi	r30, 0x43	; 67
    56a6:	fe 4f       	sbci	r31, 0xFE	; 254
    56a8:	80 81       	ld	r24, Z
    56aa:	8f 5f       	subi	r24, 0xFF	; 255
    56ac:	8c 93       	st	X, r24
    56ae:	fe 01       	movw	r30, r28
    56b0:	e3 54       	subi	r30, 0x43	; 67
    56b2:	fe 4f       	sbci	r31, 0xFE	; 254
    56b4:	80 81       	ld	r24, Z
    56b6:	8c 33       	cpi	r24, 0x3C	; 60
    56b8:	40 f4       	brcc	.+16     	; 0x56ca <main+0x2bb0>
    56ba:	81 e0       	ldi	r24, 0x01	; 1
    56bc:	60 e0       	ldi	r22, 0x00	; 0
    56be:	0e 94 12 09 	call	0x1224	; 0x1224 <Get_PinVal>
    56c2:	88 23       	and	r24, r24
    56c4:	11 f0       	breq	.+4      	; 0x56ca <main+0x2bb0>
    56c6:	0c 94 96 20 	jmp	0x412c	; 0x412c <main+0x1612>

	while(1)
		{
		for(u8 hour =0;(hour<=12)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;hour++)
			{
			for( u8 minute =0;(minute<60)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;minute++)
    56ca:	de 01       	movw	r26, r28
    56cc:	a2 54       	subi	r26, 0x42	; 66
    56ce:	be 4f       	sbci	r27, 0xFE	; 254
    56d0:	fe 01       	movw	r30, r28
    56d2:	e2 54       	subi	r30, 0x42	; 66
    56d4:	fe 4f       	sbci	r31, 0xFE	; 254
    56d6:	80 81       	ld	r24, Z
    56d8:	8f 5f       	subi	r24, 0xFF	; 255
    56da:	8c 93       	st	X, r24
    56dc:	fe 01       	movw	r30, r28
    56de:	e2 54       	subi	r30, 0x42	; 66
    56e0:	fe 4f       	sbci	r31, 0xFE	; 254
    56e2:	80 81       	ld	r24, Z
    56e4:	8c 33       	cpi	r24, 0x3C	; 60
    56e6:	40 f4       	brcc	.+16     	; 0x56f8 <main+0x2bde>
    56e8:	81 e0       	ldi	r24, 0x01	; 1
    56ea:	60 e0       	ldi	r22, 0x00	; 0
    56ec:	0e 94 12 09 	call	0x1224	; 0x1224 <Get_PinVal>
    56f0:	88 23       	and	r24, r24
    56f2:	11 f0       	breq	.+4      	; 0x56f8 <main+0x2bde>
    56f4:	0c 94 90 20 	jmp	0x4120	; 0x4120 <main+0x1606>
	LCD_GoTO(2, 0);
	LCD_SendString("resume(3)");

	while(1)
		{
		for(u8 hour =0;(hour<=12)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;hour++)
    56f8:	de 01       	movw	r26, r28
    56fa:	a1 54       	subi	r26, 0x41	; 65
    56fc:	be 4f       	sbci	r27, 0xFE	; 254
    56fe:	fe 01       	movw	r30, r28
    5700:	e1 54       	subi	r30, 0x41	; 65
    5702:	fe 4f       	sbci	r31, 0xFE	; 254
    5704:	80 81       	ld	r24, Z
    5706:	8f 5f       	subi	r24, 0xFF	; 255
    5708:	8c 93       	st	X, r24
    570a:	fe 01       	movw	r30, r28
    570c:	e1 54       	subi	r30, 0x41	; 65
    570e:	fe 4f       	sbci	r31, 0xFE	; 254
    5710:	80 81       	ld	r24, Z
    5712:	8d 30       	cpi	r24, 0x0D	; 13
    5714:	40 f4       	brcc	.+16     	; 0x5726 <main+0x2c0c>
    5716:	81 e0       	ldi	r24, 0x01	; 1
    5718:	60 e0       	ldi	r22, 0x00	; 0
    571a:	0e 94 12 09 	call	0x1224	; 0x1224 <Get_PinVal>
    571e:	88 23       	and	r24, r24
    5720:	11 f0       	breq	.+4      	; 0x5726 <main+0x2c0c>
    5722:	0c 94 8a 20 	jmp	0x4114	; 0x4114 <main+0x15fa>

					}



		if (Get_PinVal(DIO_PORTB, DIO_PIN0)==0)
    5726:	81 e0       	ldi	r24, 0x01	; 1
    5728:	60 e0       	ldi	r22, 0x00	; 0
    572a:	0e 94 12 09 	call	0x1224	; 0x1224 <Get_PinVal>
    572e:	88 23       	and	r24, r24
    5730:	11 f0       	breq	.+4      	; 0x5736 <main+0x2c1c>
    5732:	0c 94 84 20 	jmp	0x4108	; 0x4108 <main+0x15ee>
		{
			LCD_Clear();
    5736:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
    573a:	0c 94 68 20 	jmp	0x40d0	; 0x40d0 <main+0x15b6>





else if (mode==3)
    573e:	fe 01       	movw	r30, r28
    5740:	e7 53       	subi	r30, 0x37	; 55
    5742:	fe 4f       	sbci	r31, 0xFE	; 254
    5744:	80 81       	ld	r24, Z
    5746:	83 30       	cpi	r24, 0x03	; 3
    5748:	09 f0       	breq	.+2      	; 0x574c <main+0x2c32>
    574a:	3f c5       	rjmp	.+2686   	; 0x61ca <main+0x36b0>
{
	while(1)
	{

			Keypad_Inti();
    574c:	0e 94 69 10 	call	0x20d2	; 0x20d2 <Keypad_Inti>
		SetPort_Dir(DIO_PORTA, PORT_OUT);
    5750:	80 e0       	ldi	r24, 0x00	; 0
    5752:	6f ef       	ldi	r22, 0xFF	; 255
    5754:	0e 94 80 06 	call	0xd00	; 0xd00 <SetPort_Dir>
		SetPort_Dir(DIO_PORTC, PORT_OUT);
    5758:	82 e0       	ldi	r24, 0x02	; 2
    575a:	6f ef       	ldi	r22, 0xFF	; 255
    575c:	0e 94 80 06 	call	0xd00	; 0xd00 <SetPort_Dir>
		SetPort_Dir(DIO_PORTD, PORT_OUT);
    5760:	83 e0       	ldi	r24, 0x03	; 3
    5762:	6f ef       	ldi	r22, 0xFF	; 255
    5764:	0e 94 80 06 	call	0xd00	; 0xd00 <SetPort_Dir>
		u8 minute_1=Set_minute();
    5768:	0e 94 e5 12 	call	0x25ca	; 0x25ca <Set_minute>
    576c:	fe 01       	movw	r30, r28
    576e:	e6 54       	subi	r30, 0x46	; 70
    5770:	fe 4f       	sbci	r31, 0xFE	; 254
    5772:	80 83       	st	Z, r24
		u8 second_1=Set_second();
    5774:	0e 94 39 14 	call	0x2872	; 0x2872 <Set_second>
    5778:	fe 01       	movw	r30, r28
    577a:	e7 54       	subi	r30, 0x47	; 71
    577c:	fe 4f       	sbci	r31, 0xFE	; 254
    577e:	80 83       	st	Z, r24
		u8 second_2=59;
    5780:	fe 01       	movw	r30, r28
    5782:	e8 54       	subi	r30, 0x48	; 72
    5784:	fe 4f       	sbci	r31, 0xFE	; 254
    5786:	8b e3       	ldi	r24, 0x3B	; 59
    5788:	80 83       	st	Z, r24
		LCD_SendString("please press ");
    578a:	8e e1       	ldi	r24, 0x1E	; 30
    578c:	91 e0       	ldi	r25, 0x01	; 1
    578e:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
		LCD_GoTO(2, 0);
    5792:	82 e0       	ldi	r24, 0x02	; 2
    5794:	60 e0       	ldi	r22, 0x00	; 0
    5796:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <LCD_GoTO>
		LCD_SendString("button (4) ");
    579a:	8c e2       	ldi	r24, 0x2C	; 44
    579c:	91 e0       	ldi	r25, 0x01	; 1
    579e:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
    57a2:	fe 01       	movw	r30, r28
    57a4:	e1 5a       	subi	r30, 0xA1	; 161
    57a6:	ff 4f       	sbci	r31, 0xFF	; 255
    57a8:	80 e0       	ldi	r24, 0x00	; 0
    57aa:	90 e0       	ldi	r25, 0x00	; 0
    57ac:	aa e7       	ldi	r26, 0x7A	; 122
    57ae:	b5 e4       	ldi	r27, 0x45	; 69
    57b0:	80 83       	st	Z, r24
    57b2:	91 83       	std	Z+1, r25	; 0x01
    57b4:	a2 83       	std	Z+2, r26	; 0x02
    57b6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    57b8:	8e 01       	movw	r16, r28
    57ba:	05 5a       	subi	r16, 0xA5	; 165
    57bc:	1f 4f       	sbci	r17, 0xFF	; 255
    57be:	fe 01       	movw	r30, r28
    57c0:	e1 5a       	subi	r30, 0xA1	; 161
    57c2:	ff 4f       	sbci	r31, 0xFF	; 255
    57c4:	60 81       	ld	r22, Z
    57c6:	71 81       	ldd	r23, Z+1	; 0x01
    57c8:	82 81       	ldd	r24, Z+2	; 0x02
    57ca:	93 81       	ldd	r25, Z+3	; 0x03
    57cc:	20 e0       	ldi	r18, 0x00	; 0
    57ce:	30 e0       	ldi	r19, 0x00	; 0
    57d0:	4a ef       	ldi	r20, 0xFA	; 250
    57d2:	54 e4       	ldi	r21, 0x44	; 68
    57d4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    57d8:	dc 01       	movw	r26, r24
    57da:	cb 01       	movw	r24, r22
    57dc:	f8 01       	movw	r30, r16
    57de:	80 83       	st	Z, r24
    57e0:	91 83       	std	Z+1, r25	; 0x01
    57e2:	a2 83       	std	Z+2, r26	; 0x02
    57e4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    57e6:	fe 01       	movw	r30, r28
    57e8:	e5 5a       	subi	r30, 0xA5	; 165
    57ea:	ff 4f       	sbci	r31, 0xFF	; 255
    57ec:	60 81       	ld	r22, Z
    57ee:	71 81       	ldd	r23, Z+1	; 0x01
    57f0:	82 81       	ldd	r24, Z+2	; 0x02
    57f2:	93 81       	ldd	r25, Z+3	; 0x03
    57f4:	20 e0       	ldi	r18, 0x00	; 0
    57f6:	30 e0       	ldi	r19, 0x00	; 0
    57f8:	40 e8       	ldi	r20, 0x80	; 128
    57fa:	5f e3       	ldi	r21, 0x3F	; 63
    57fc:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    5800:	88 23       	and	r24, r24
    5802:	44 f4       	brge	.+16     	; 0x5814 <main+0x2cfa>
		__ticks = 1;
    5804:	fe 01       	movw	r30, r28
    5806:	e7 5a       	subi	r30, 0xA7	; 167
    5808:	ff 4f       	sbci	r31, 0xFF	; 255
    580a:	81 e0       	ldi	r24, 0x01	; 1
    580c:	90 e0       	ldi	r25, 0x00	; 0
    580e:	91 83       	std	Z+1, r25	; 0x01
    5810:	80 83       	st	Z, r24
    5812:	64 c0       	rjmp	.+200    	; 0x58dc <main+0x2dc2>
	else if (__tmp > 65535)
    5814:	fe 01       	movw	r30, r28
    5816:	e5 5a       	subi	r30, 0xA5	; 165
    5818:	ff 4f       	sbci	r31, 0xFF	; 255
    581a:	60 81       	ld	r22, Z
    581c:	71 81       	ldd	r23, Z+1	; 0x01
    581e:	82 81       	ldd	r24, Z+2	; 0x02
    5820:	93 81       	ldd	r25, Z+3	; 0x03
    5822:	20 e0       	ldi	r18, 0x00	; 0
    5824:	3f ef       	ldi	r19, 0xFF	; 255
    5826:	4f e7       	ldi	r20, 0x7F	; 127
    5828:	57 e4       	ldi	r21, 0x47	; 71
    582a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    582e:	18 16       	cp	r1, r24
    5830:	0c f0       	brlt	.+2      	; 0x5834 <main+0x2d1a>
    5832:	43 c0       	rjmp	.+134    	; 0x58ba <main+0x2da0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5834:	fe 01       	movw	r30, r28
    5836:	e1 5a       	subi	r30, 0xA1	; 161
    5838:	ff 4f       	sbci	r31, 0xFF	; 255
    583a:	60 81       	ld	r22, Z
    583c:	71 81       	ldd	r23, Z+1	; 0x01
    583e:	82 81       	ldd	r24, Z+2	; 0x02
    5840:	93 81       	ldd	r25, Z+3	; 0x03
    5842:	20 e0       	ldi	r18, 0x00	; 0
    5844:	30 e0       	ldi	r19, 0x00	; 0
    5846:	40 e2       	ldi	r20, 0x20	; 32
    5848:	51 e4       	ldi	r21, 0x41	; 65
    584a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    584e:	dc 01       	movw	r26, r24
    5850:	cb 01       	movw	r24, r22
    5852:	8e 01       	movw	r16, r28
    5854:	07 5a       	subi	r16, 0xA7	; 167
    5856:	1f 4f       	sbci	r17, 0xFF	; 255
    5858:	bc 01       	movw	r22, r24
    585a:	cd 01       	movw	r24, r26
    585c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5860:	dc 01       	movw	r26, r24
    5862:	cb 01       	movw	r24, r22
    5864:	f8 01       	movw	r30, r16
    5866:	91 83       	std	Z+1, r25	; 0x01
    5868:	80 83       	st	Z, r24
    586a:	1f c0       	rjmp	.+62     	; 0x58aa <main+0x2d90>
    586c:	fe 01       	movw	r30, r28
    586e:	e9 5a       	subi	r30, 0xA9	; 169
    5870:	ff 4f       	sbci	r31, 0xFF	; 255
    5872:	88 ec       	ldi	r24, 0xC8	; 200
    5874:	90 e0       	ldi	r25, 0x00	; 0
    5876:	91 83       	std	Z+1, r25	; 0x01
    5878:	80 83       	st	Z, r24
    587a:	fe 01       	movw	r30, r28
    587c:	e9 5a       	subi	r30, 0xA9	; 169
    587e:	ff 4f       	sbci	r31, 0xFF	; 255
    5880:	80 81       	ld	r24, Z
    5882:	91 81       	ldd	r25, Z+1	; 0x01
    5884:	01 97       	sbiw	r24, 0x01	; 1
    5886:	f1 f7       	brne	.-4      	; 0x5884 <main+0x2d6a>
    5888:	fe 01       	movw	r30, r28
    588a:	e9 5a       	subi	r30, 0xA9	; 169
    588c:	ff 4f       	sbci	r31, 0xFF	; 255
    588e:	91 83       	std	Z+1, r25	; 0x01
    5890:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5892:	de 01       	movw	r26, r28
    5894:	a7 5a       	subi	r26, 0xA7	; 167
    5896:	bf 4f       	sbci	r27, 0xFF	; 255
    5898:	fe 01       	movw	r30, r28
    589a:	e7 5a       	subi	r30, 0xA7	; 167
    589c:	ff 4f       	sbci	r31, 0xFF	; 255
    589e:	80 81       	ld	r24, Z
    58a0:	91 81       	ldd	r25, Z+1	; 0x01
    58a2:	01 97       	sbiw	r24, 0x01	; 1
    58a4:	11 96       	adiw	r26, 0x01	; 1
    58a6:	9c 93       	st	X, r25
    58a8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    58aa:	fe 01       	movw	r30, r28
    58ac:	e7 5a       	subi	r30, 0xA7	; 167
    58ae:	ff 4f       	sbci	r31, 0xFF	; 255
    58b0:	80 81       	ld	r24, Z
    58b2:	91 81       	ldd	r25, Z+1	; 0x01
    58b4:	00 97       	sbiw	r24, 0x00	; 0
    58b6:	d1 f6       	brne	.-76     	; 0x586c <main+0x2d52>
    58b8:	27 c0       	rjmp	.+78     	; 0x5908 <main+0x2dee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    58ba:	8e 01       	movw	r16, r28
    58bc:	07 5a       	subi	r16, 0xA7	; 167
    58be:	1f 4f       	sbci	r17, 0xFF	; 255
    58c0:	fe 01       	movw	r30, r28
    58c2:	e5 5a       	subi	r30, 0xA5	; 165
    58c4:	ff 4f       	sbci	r31, 0xFF	; 255
    58c6:	60 81       	ld	r22, Z
    58c8:	71 81       	ldd	r23, Z+1	; 0x01
    58ca:	82 81       	ldd	r24, Z+2	; 0x02
    58cc:	93 81       	ldd	r25, Z+3	; 0x03
    58ce:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    58d2:	dc 01       	movw	r26, r24
    58d4:	cb 01       	movw	r24, r22
    58d6:	f8 01       	movw	r30, r16
    58d8:	91 83       	std	Z+1, r25	; 0x01
    58da:	80 83       	st	Z, r24
    58dc:	de 01       	movw	r26, r28
    58de:	ab 5a       	subi	r26, 0xAB	; 171
    58e0:	bf 4f       	sbci	r27, 0xFF	; 255
    58e2:	fe 01       	movw	r30, r28
    58e4:	e7 5a       	subi	r30, 0xA7	; 167
    58e6:	ff 4f       	sbci	r31, 0xFF	; 255
    58e8:	80 81       	ld	r24, Z
    58ea:	91 81       	ldd	r25, Z+1	; 0x01
    58ec:	8d 93       	st	X+, r24
    58ee:	9c 93       	st	X, r25
    58f0:	fe 01       	movw	r30, r28
    58f2:	eb 5a       	subi	r30, 0xAB	; 171
    58f4:	ff 4f       	sbci	r31, 0xFF	; 255
    58f6:	80 81       	ld	r24, Z
    58f8:	91 81       	ldd	r25, Z+1	; 0x01
    58fa:	01 97       	sbiw	r24, 0x01	; 1
    58fc:	f1 f7       	brne	.-4      	; 0x58fa <main+0x2de0>
    58fe:	fe 01       	movw	r30, r28
    5900:	eb 5a       	subi	r30, 0xAB	; 171
    5902:	ff 4f       	sbci	r31, 0xFF	; 255
    5904:	91 83       	std	Z+1, r25	; 0x01
    5906:	80 83       	st	Z, r24
		_delay_ms(4000);
		LCD_Clear();
    5908:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
		LCD_SendString("to set timer ");
    590c:	88 e3       	ldi	r24, 0x38	; 56
    590e:	91 e0       	ldi	r25, 0x01	; 1
    5910:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
		LCD_GoTO(2, 0);
    5914:	82 e0       	ldi	r24, 0x02	; 2
    5916:	60 e0       	ldi	r22, 0x00	; 0
    5918:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <LCD_GoTO>
		LCD_SendString("press button-> 1 ");
    591c:	86 e4       	ldi	r24, 0x46	; 70
    591e:	91 e0       	ldi	r25, 0x01	; 1
    5920:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>

		while(1)
		{
			for( u8 minute =0;(minute<=minute_1)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;minute++)
    5924:	fe 01       	movw	r30, r28
    5926:	e9 54       	subi	r30, 0x49	; 73
    5928:	fe 4f       	sbci	r31, 0xFE	; 254
    592a:	10 82       	st	Z, r1
    592c:	36 c3       	rjmp	.+1644   	; 0x5f9a <main+0x3480>
							{
								if (minute==minute_1)
    592e:	fe 01       	movw	r30, r28
    5930:	e9 54       	subi	r30, 0x49	; 73
    5932:	fe 4f       	sbci	r31, 0xFE	; 254
    5934:	de 01       	movw	r26, r28
    5936:	a6 54       	subi	r26, 0x46	; 70
    5938:	be 4f       	sbci	r27, 0xFE	; 254
    593a:	90 81       	ld	r25, Z
    593c:	8c 91       	ld	r24, X
    593e:	98 17       	cp	r25, r24
    5940:	41 f4       	brne	.+16     	; 0x5952 <main+0x2e38>
								{
									second_2=second_1;
    5942:	fe 01       	movw	r30, r28
    5944:	e8 54       	subi	r30, 0x48	; 72
    5946:	fe 4f       	sbci	r31, 0xFE	; 254
    5948:	de 01       	movw	r26, r28
    594a:	a7 54       	subi	r26, 0x47	; 71
    594c:	be 4f       	sbci	r27, 0xFE	; 254
    594e:	8c 91       	ld	r24, X
    5950:	80 83       	st	Z, r24
								}
							for( u8 second =0;(second<=second_2)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;second++)
    5952:	fe 01       	movw	r30, r28
    5954:	ea 54       	subi	r30, 0x4A	; 74
    5956:	fe 4f       	sbci	r31, 0xFE	; 254
    5958:	10 82       	st	Z, r1
    595a:	05 c3       	rjmp	.+1546   	; 0x5f66 <main+0x344c>
								{
										int n=20;
    595c:	fe 01       	movw	r30, r28
    595e:	ec 54       	subi	r30, 0x4C	; 76
    5960:	fe 4f       	sbci	r31, 0xFE	; 254
    5962:	84 e1       	ldi	r24, 0x14	; 20
    5964:	90 e0       	ldi	r25, 0x00	; 0
    5966:	91 83       	std	Z+1, r25	; 0x01
    5968:	80 83       	st	Z, r24
    596a:	ce c2       	rjmp	.+1436   	; 0x5f08 <main+0x33ee>
											while (n--)
											{
												SetPin_Val(DIO_PORTD, DIO_PIN3, PIN_HIGH);
    596c:	83 e0       	ldi	r24, 0x03	; 3
    596e:	63 e0       	ldi	r22, 0x03	; 3
    5970:	41 e0       	ldi	r20, 0x01	; 1
    5972:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												SetPin_Val(DIO_PORTD, DIO_PIN4, PIN_HIGH);
    5976:	83 e0       	ldi	r24, 0x03	; 3
    5978:	64 e0       	ldi	r22, 0x04	; 4
    597a:	41 e0       	ldi	r20, 0x01	; 1
    597c:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_HIGH);
    5980:	83 e0       	ldi	r24, 0x03	; 3
    5982:	65 e0       	ldi	r22, 0x05	; 5
    5984:	41 e0       	ldi	r20, 0x01	; 1
    5986:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_HIGH);
    598a:	83 e0       	ldi	r24, 0x03	; 3
    598c:	65 e0       	ldi	r22, 0x05	; 5
    598e:	41 e0       	ldi	r20, 0x01	; 1
    5990:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												SetPin_Val(DIO_PORTD, DIO_PIN7, PIN_HIGH);
    5994:	83 e0       	ldi	r24, 0x03	; 3
    5996:	67 e0       	ldi	r22, 0x07	; 7
    5998:	41 e0       	ldi	r20, 0x01	; 1
    599a:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												SetPin_Val(DIO_PORTD, DIO_PIN2, PIN_LOW);
    599e:	83 e0       	ldi	r24, 0x03	; 3
    59a0:	62 e0       	ldi	r22, 0x02	; 2
    59a2:	40 e0       	ldi	r20, 0x00	; 0
    59a4:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												PORTA=seg(second%10);
    59a8:	0b e3       	ldi	r16, 0x3B	; 59
    59aa:	10 e0       	ldi	r17, 0x00	; 0
    59ac:	fe 01       	movw	r30, r28
    59ae:	ea 54       	subi	r30, 0x4A	; 74
    59b0:	fe 4f       	sbci	r31, 0xFE	; 254
    59b2:	80 81       	ld	r24, Z
    59b4:	9a e0       	ldi	r25, 0x0A	; 10
    59b6:	69 2f       	mov	r22, r25
    59b8:	0e 94 87 33 	call	0x670e	; 0x670e <__udivmodqi4>
    59bc:	89 2f       	mov	r24, r25
    59be:	0e 94 8e 0a 	call	0x151c	; 0x151c <seg>
    59c2:	f8 01       	movw	r30, r16
    59c4:	80 83       	st	Z, r24
    59c6:	fe 01       	movw	r30, r28
    59c8:	ef 5a       	subi	r30, 0xAF	; 175
    59ca:	ff 4f       	sbci	r31, 0xFF	; 255
    59cc:	80 e0       	ldi	r24, 0x00	; 0
    59ce:	90 e0       	ldi	r25, 0x00	; 0
    59d0:	a0 e4       	ldi	r26, 0x40	; 64
    59d2:	b1 e4       	ldi	r27, 0x41	; 65
    59d4:	80 83       	st	Z, r24
    59d6:	91 83       	std	Z+1, r25	; 0x01
    59d8:	a2 83       	std	Z+2, r26	; 0x02
    59da:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    59dc:	8e 01       	movw	r16, r28
    59de:	03 5b       	subi	r16, 0xB3	; 179
    59e0:	1f 4f       	sbci	r17, 0xFF	; 255
    59e2:	fe 01       	movw	r30, r28
    59e4:	ef 5a       	subi	r30, 0xAF	; 175
    59e6:	ff 4f       	sbci	r31, 0xFF	; 255
    59e8:	60 81       	ld	r22, Z
    59ea:	71 81       	ldd	r23, Z+1	; 0x01
    59ec:	82 81       	ldd	r24, Z+2	; 0x02
    59ee:	93 81       	ldd	r25, Z+3	; 0x03
    59f0:	20 e0       	ldi	r18, 0x00	; 0
    59f2:	30 e0       	ldi	r19, 0x00	; 0
    59f4:	4a ef       	ldi	r20, 0xFA	; 250
    59f6:	54 e4       	ldi	r21, 0x44	; 68
    59f8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    59fc:	dc 01       	movw	r26, r24
    59fe:	cb 01       	movw	r24, r22
    5a00:	f8 01       	movw	r30, r16
    5a02:	80 83       	st	Z, r24
    5a04:	91 83       	std	Z+1, r25	; 0x01
    5a06:	a2 83       	std	Z+2, r26	; 0x02
    5a08:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5a0a:	fe 01       	movw	r30, r28
    5a0c:	e3 5b       	subi	r30, 0xB3	; 179
    5a0e:	ff 4f       	sbci	r31, 0xFF	; 255
    5a10:	60 81       	ld	r22, Z
    5a12:	71 81       	ldd	r23, Z+1	; 0x01
    5a14:	82 81       	ldd	r24, Z+2	; 0x02
    5a16:	93 81       	ldd	r25, Z+3	; 0x03
    5a18:	20 e0       	ldi	r18, 0x00	; 0
    5a1a:	30 e0       	ldi	r19, 0x00	; 0
    5a1c:	40 e8       	ldi	r20, 0x80	; 128
    5a1e:	5f e3       	ldi	r21, 0x3F	; 63
    5a20:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    5a24:	88 23       	and	r24, r24
    5a26:	44 f4       	brge	.+16     	; 0x5a38 <main+0x2f1e>
		__ticks = 1;
    5a28:	fe 01       	movw	r30, r28
    5a2a:	e5 5b       	subi	r30, 0xB5	; 181
    5a2c:	ff 4f       	sbci	r31, 0xFF	; 255
    5a2e:	81 e0       	ldi	r24, 0x01	; 1
    5a30:	90 e0       	ldi	r25, 0x00	; 0
    5a32:	91 83       	std	Z+1, r25	; 0x01
    5a34:	80 83       	st	Z, r24
    5a36:	64 c0       	rjmp	.+200    	; 0x5b00 <main+0x2fe6>
	else if (__tmp > 65535)
    5a38:	fe 01       	movw	r30, r28
    5a3a:	e3 5b       	subi	r30, 0xB3	; 179
    5a3c:	ff 4f       	sbci	r31, 0xFF	; 255
    5a3e:	60 81       	ld	r22, Z
    5a40:	71 81       	ldd	r23, Z+1	; 0x01
    5a42:	82 81       	ldd	r24, Z+2	; 0x02
    5a44:	93 81       	ldd	r25, Z+3	; 0x03
    5a46:	20 e0       	ldi	r18, 0x00	; 0
    5a48:	3f ef       	ldi	r19, 0xFF	; 255
    5a4a:	4f e7       	ldi	r20, 0x7F	; 127
    5a4c:	57 e4       	ldi	r21, 0x47	; 71
    5a4e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    5a52:	18 16       	cp	r1, r24
    5a54:	0c f0       	brlt	.+2      	; 0x5a58 <main+0x2f3e>
    5a56:	43 c0       	rjmp	.+134    	; 0x5ade <main+0x2fc4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5a58:	fe 01       	movw	r30, r28
    5a5a:	ef 5a       	subi	r30, 0xAF	; 175
    5a5c:	ff 4f       	sbci	r31, 0xFF	; 255
    5a5e:	60 81       	ld	r22, Z
    5a60:	71 81       	ldd	r23, Z+1	; 0x01
    5a62:	82 81       	ldd	r24, Z+2	; 0x02
    5a64:	93 81       	ldd	r25, Z+3	; 0x03
    5a66:	20 e0       	ldi	r18, 0x00	; 0
    5a68:	30 e0       	ldi	r19, 0x00	; 0
    5a6a:	40 e2       	ldi	r20, 0x20	; 32
    5a6c:	51 e4       	ldi	r21, 0x41	; 65
    5a6e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5a72:	dc 01       	movw	r26, r24
    5a74:	cb 01       	movw	r24, r22
    5a76:	8e 01       	movw	r16, r28
    5a78:	05 5b       	subi	r16, 0xB5	; 181
    5a7a:	1f 4f       	sbci	r17, 0xFF	; 255
    5a7c:	bc 01       	movw	r22, r24
    5a7e:	cd 01       	movw	r24, r26
    5a80:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5a84:	dc 01       	movw	r26, r24
    5a86:	cb 01       	movw	r24, r22
    5a88:	f8 01       	movw	r30, r16
    5a8a:	91 83       	std	Z+1, r25	; 0x01
    5a8c:	80 83       	st	Z, r24
    5a8e:	1f c0       	rjmp	.+62     	; 0x5ace <main+0x2fb4>
    5a90:	fe 01       	movw	r30, r28
    5a92:	e7 5b       	subi	r30, 0xB7	; 183
    5a94:	ff 4f       	sbci	r31, 0xFF	; 255
    5a96:	88 ec       	ldi	r24, 0xC8	; 200
    5a98:	90 e0       	ldi	r25, 0x00	; 0
    5a9a:	91 83       	std	Z+1, r25	; 0x01
    5a9c:	80 83       	st	Z, r24
    5a9e:	fe 01       	movw	r30, r28
    5aa0:	e7 5b       	subi	r30, 0xB7	; 183
    5aa2:	ff 4f       	sbci	r31, 0xFF	; 255
    5aa4:	80 81       	ld	r24, Z
    5aa6:	91 81       	ldd	r25, Z+1	; 0x01
    5aa8:	01 97       	sbiw	r24, 0x01	; 1
    5aaa:	f1 f7       	brne	.-4      	; 0x5aa8 <main+0x2f8e>
    5aac:	fe 01       	movw	r30, r28
    5aae:	e7 5b       	subi	r30, 0xB7	; 183
    5ab0:	ff 4f       	sbci	r31, 0xFF	; 255
    5ab2:	91 83       	std	Z+1, r25	; 0x01
    5ab4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5ab6:	de 01       	movw	r26, r28
    5ab8:	a5 5b       	subi	r26, 0xB5	; 181
    5aba:	bf 4f       	sbci	r27, 0xFF	; 255
    5abc:	fe 01       	movw	r30, r28
    5abe:	e5 5b       	subi	r30, 0xB5	; 181
    5ac0:	ff 4f       	sbci	r31, 0xFF	; 255
    5ac2:	80 81       	ld	r24, Z
    5ac4:	91 81       	ldd	r25, Z+1	; 0x01
    5ac6:	01 97       	sbiw	r24, 0x01	; 1
    5ac8:	11 96       	adiw	r26, 0x01	; 1
    5aca:	9c 93       	st	X, r25
    5acc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5ace:	fe 01       	movw	r30, r28
    5ad0:	e5 5b       	subi	r30, 0xB5	; 181
    5ad2:	ff 4f       	sbci	r31, 0xFF	; 255
    5ad4:	80 81       	ld	r24, Z
    5ad6:	91 81       	ldd	r25, Z+1	; 0x01
    5ad8:	00 97       	sbiw	r24, 0x00	; 0
    5ada:	d1 f6       	brne	.-76     	; 0x5a90 <main+0x2f76>
    5adc:	27 c0       	rjmp	.+78     	; 0x5b2c <main+0x3012>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5ade:	8e 01       	movw	r16, r28
    5ae0:	05 5b       	subi	r16, 0xB5	; 181
    5ae2:	1f 4f       	sbci	r17, 0xFF	; 255
    5ae4:	fe 01       	movw	r30, r28
    5ae6:	e3 5b       	subi	r30, 0xB3	; 179
    5ae8:	ff 4f       	sbci	r31, 0xFF	; 255
    5aea:	60 81       	ld	r22, Z
    5aec:	71 81       	ldd	r23, Z+1	; 0x01
    5aee:	82 81       	ldd	r24, Z+2	; 0x02
    5af0:	93 81       	ldd	r25, Z+3	; 0x03
    5af2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5af6:	dc 01       	movw	r26, r24
    5af8:	cb 01       	movw	r24, r22
    5afa:	f8 01       	movw	r30, r16
    5afc:	91 83       	std	Z+1, r25	; 0x01
    5afe:	80 83       	st	Z, r24
    5b00:	de 01       	movw	r26, r28
    5b02:	a9 5b       	subi	r26, 0xB9	; 185
    5b04:	bf 4f       	sbci	r27, 0xFF	; 255
    5b06:	fe 01       	movw	r30, r28
    5b08:	e5 5b       	subi	r30, 0xB5	; 181
    5b0a:	ff 4f       	sbci	r31, 0xFF	; 255
    5b0c:	80 81       	ld	r24, Z
    5b0e:	91 81       	ldd	r25, Z+1	; 0x01
    5b10:	8d 93       	st	X+, r24
    5b12:	9c 93       	st	X, r25
    5b14:	fe 01       	movw	r30, r28
    5b16:	e9 5b       	subi	r30, 0xB9	; 185
    5b18:	ff 4f       	sbci	r31, 0xFF	; 255
    5b1a:	80 81       	ld	r24, Z
    5b1c:	91 81       	ldd	r25, Z+1	; 0x01
    5b1e:	01 97       	sbiw	r24, 0x01	; 1
    5b20:	f1 f7       	brne	.-4      	; 0x5b1e <main+0x3004>
    5b22:	fe 01       	movw	r30, r28
    5b24:	e9 5b       	subi	r30, 0xB9	; 185
    5b26:	ff 4f       	sbci	r31, 0xFF	; 255
    5b28:	91 83       	std	Z+1, r25	; 0x01
    5b2a:	80 83       	st	Z, r24
												_delay_ms(50/4);
												SetPin_Val(DIO_PORTD, DIO_PIN2, PIN_HIGH);
    5b2c:	83 e0       	ldi	r24, 0x03	; 3
    5b2e:	62 e0       	ldi	r22, 0x02	; 2
    5b30:	41 e0       	ldi	r20, 0x01	; 1
    5b32:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												SetPin_Val(DIO_PORTD, DIO_PIN4, PIN_HIGH);
    5b36:	83 e0       	ldi	r24, 0x03	; 3
    5b38:	64 e0       	ldi	r22, 0x04	; 4
    5b3a:	41 e0       	ldi	r20, 0x01	; 1
    5b3c:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_HIGH);
    5b40:	83 e0       	ldi	r24, 0x03	; 3
    5b42:	65 e0       	ldi	r22, 0x05	; 5
    5b44:	41 e0       	ldi	r20, 0x01	; 1
    5b46:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												SetPin_Val(DIO_PORTD, DIO_PIN6, PIN_HIGH);
    5b4a:	83 e0       	ldi	r24, 0x03	; 3
    5b4c:	66 e0       	ldi	r22, 0x06	; 6
    5b4e:	41 e0       	ldi	r20, 0x01	; 1
    5b50:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												SetPin_Val(DIO_PORTD, DIO_PIN7, PIN_HIGH);
    5b54:	83 e0       	ldi	r24, 0x03	; 3
    5b56:	67 e0       	ldi	r22, 0x07	; 7
    5b58:	41 e0       	ldi	r20, 0x01	; 1
    5b5a:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												SetPin_Val(DIO_PORTD, DIO_PIN3, PIN_LOW);
    5b5e:	83 e0       	ldi	r24, 0x03	; 3
    5b60:	63 e0       	ldi	r22, 0x03	; 3
    5b62:	40 e0       	ldi	r20, 0x00	; 0
    5b64:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												PORTA=seg(second/10);
    5b68:	0b e3       	ldi	r16, 0x3B	; 59
    5b6a:	10 e0       	ldi	r17, 0x00	; 0
    5b6c:	fe 01       	movw	r30, r28
    5b6e:	ea 54       	subi	r30, 0x4A	; 74
    5b70:	fe 4f       	sbci	r31, 0xFE	; 254
    5b72:	80 81       	ld	r24, Z
    5b74:	9a e0       	ldi	r25, 0x0A	; 10
    5b76:	69 2f       	mov	r22, r25
    5b78:	0e 94 87 33 	call	0x670e	; 0x670e <__udivmodqi4>
    5b7c:	0e 94 8e 0a 	call	0x151c	; 0x151c <seg>
    5b80:	f8 01       	movw	r30, r16
    5b82:	80 83       	st	Z, r24
    5b84:	fe 01       	movw	r30, r28
    5b86:	ed 5b       	subi	r30, 0xBD	; 189
    5b88:	ff 4f       	sbci	r31, 0xFF	; 255
    5b8a:	80 e0       	ldi	r24, 0x00	; 0
    5b8c:	90 e0       	ldi	r25, 0x00	; 0
    5b8e:	a0 e4       	ldi	r26, 0x40	; 64
    5b90:	b1 e4       	ldi	r27, 0x41	; 65
    5b92:	80 83       	st	Z, r24
    5b94:	91 83       	std	Z+1, r25	; 0x01
    5b96:	a2 83       	std	Z+2, r26	; 0x02
    5b98:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5b9a:	8e 01       	movw	r16, r28
    5b9c:	01 5c       	subi	r16, 0xC1	; 193
    5b9e:	1f 4f       	sbci	r17, 0xFF	; 255
    5ba0:	fe 01       	movw	r30, r28
    5ba2:	ed 5b       	subi	r30, 0xBD	; 189
    5ba4:	ff 4f       	sbci	r31, 0xFF	; 255
    5ba6:	60 81       	ld	r22, Z
    5ba8:	71 81       	ldd	r23, Z+1	; 0x01
    5baa:	82 81       	ldd	r24, Z+2	; 0x02
    5bac:	93 81       	ldd	r25, Z+3	; 0x03
    5bae:	20 e0       	ldi	r18, 0x00	; 0
    5bb0:	30 e0       	ldi	r19, 0x00	; 0
    5bb2:	4a ef       	ldi	r20, 0xFA	; 250
    5bb4:	54 e4       	ldi	r21, 0x44	; 68
    5bb6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5bba:	dc 01       	movw	r26, r24
    5bbc:	cb 01       	movw	r24, r22
    5bbe:	f8 01       	movw	r30, r16
    5bc0:	80 83       	st	Z, r24
    5bc2:	91 83       	std	Z+1, r25	; 0x01
    5bc4:	a2 83       	std	Z+2, r26	; 0x02
    5bc6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5bc8:	fe 01       	movw	r30, r28
    5bca:	ff 96       	adiw	r30, 0x3f	; 63
    5bcc:	60 81       	ld	r22, Z
    5bce:	71 81       	ldd	r23, Z+1	; 0x01
    5bd0:	82 81       	ldd	r24, Z+2	; 0x02
    5bd2:	93 81       	ldd	r25, Z+3	; 0x03
    5bd4:	20 e0       	ldi	r18, 0x00	; 0
    5bd6:	30 e0       	ldi	r19, 0x00	; 0
    5bd8:	40 e8       	ldi	r20, 0x80	; 128
    5bda:	5f e3       	ldi	r21, 0x3F	; 63
    5bdc:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    5be0:	88 23       	and	r24, r24
    5be2:	2c f4       	brge	.+10     	; 0x5bee <main+0x30d4>
		__ticks = 1;
    5be4:	81 e0       	ldi	r24, 0x01	; 1
    5be6:	90 e0       	ldi	r25, 0x00	; 0
    5be8:	9e af       	std	Y+62, r25	; 0x3e
    5bea:	8d af       	std	Y+61, r24	; 0x3d
    5bec:	46 c0       	rjmp	.+140    	; 0x5c7a <main+0x3160>
	else if (__tmp > 65535)
    5bee:	fe 01       	movw	r30, r28
    5bf0:	ff 96       	adiw	r30, 0x3f	; 63
    5bf2:	60 81       	ld	r22, Z
    5bf4:	71 81       	ldd	r23, Z+1	; 0x01
    5bf6:	82 81       	ldd	r24, Z+2	; 0x02
    5bf8:	93 81       	ldd	r25, Z+3	; 0x03
    5bfa:	20 e0       	ldi	r18, 0x00	; 0
    5bfc:	3f ef       	ldi	r19, 0xFF	; 255
    5bfe:	4f e7       	ldi	r20, 0x7F	; 127
    5c00:	57 e4       	ldi	r21, 0x47	; 71
    5c02:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    5c06:	18 16       	cp	r1, r24
    5c08:	64 f5       	brge	.+88     	; 0x5c62 <main+0x3148>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5c0a:	fe 01       	movw	r30, r28
    5c0c:	ed 5b       	subi	r30, 0xBD	; 189
    5c0e:	ff 4f       	sbci	r31, 0xFF	; 255
    5c10:	60 81       	ld	r22, Z
    5c12:	71 81       	ldd	r23, Z+1	; 0x01
    5c14:	82 81       	ldd	r24, Z+2	; 0x02
    5c16:	93 81       	ldd	r25, Z+3	; 0x03
    5c18:	20 e0       	ldi	r18, 0x00	; 0
    5c1a:	30 e0       	ldi	r19, 0x00	; 0
    5c1c:	40 e2       	ldi	r20, 0x20	; 32
    5c1e:	51 e4       	ldi	r21, 0x41	; 65
    5c20:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5c24:	dc 01       	movw	r26, r24
    5c26:	cb 01       	movw	r24, r22
    5c28:	bc 01       	movw	r22, r24
    5c2a:	cd 01       	movw	r24, r26
    5c2c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5c30:	dc 01       	movw	r26, r24
    5c32:	cb 01       	movw	r24, r22
    5c34:	9e af       	std	Y+62, r25	; 0x3e
    5c36:	8d af       	std	Y+61, r24	; 0x3d
    5c38:	0f c0       	rjmp	.+30     	; 0x5c58 <main+0x313e>
    5c3a:	88 ec       	ldi	r24, 0xC8	; 200
    5c3c:	90 e0       	ldi	r25, 0x00	; 0
    5c3e:	9c af       	std	Y+60, r25	; 0x3c
    5c40:	8b af       	std	Y+59, r24	; 0x3b
    5c42:	8b ad       	ldd	r24, Y+59	; 0x3b
    5c44:	9c ad       	ldd	r25, Y+60	; 0x3c
    5c46:	01 97       	sbiw	r24, 0x01	; 1
    5c48:	f1 f7       	brne	.-4      	; 0x5c46 <main+0x312c>
    5c4a:	9c af       	std	Y+60, r25	; 0x3c
    5c4c:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5c4e:	8d ad       	ldd	r24, Y+61	; 0x3d
    5c50:	9e ad       	ldd	r25, Y+62	; 0x3e
    5c52:	01 97       	sbiw	r24, 0x01	; 1
    5c54:	9e af       	std	Y+62, r25	; 0x3e
    5c56:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5c58:	8d ad       	ldd	r24, Y+61	; 0x3d
    5c5a:	9e ad       	ldd	r25, Y+62	; 0x3e
    5c5c:	00 97       	sbiw	r24, 0x00	; 0
    5c5e:	69 f7       	brne	.-38     	; 0x5c3a <main+0x3120>
    5c60:	16 c0       	rjmp	.+44     	; 0x5c8e <main+0x3174>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5c62:	fe 01       	movw	r30, r28
    5c64:	ff 96       	adiw	r30, 0x3f	; 63
    5c66:	60 81       	ld	r22, Z
    5c68:	71 81       	ldd	r23, Z+1	; 0x01
    5c6a:	82 81       	ldd	r24, Z+2	; 0x02
    5c6c:	93 81       	ldd	r25, Z+3	; 0x03
    5c6e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5c72:	dc 01       	movw	r26, r24
    5c74:	cb 01       	movw	r24, r22
    5c76:	9e af       	std	Y+62, r25	; 0x3e
    5c78:	8d af       	std	Y+61, r24	; 0x3d
    5c7a:	8d ad       	ldd	r24, Y+61	; 0x3d
    5c7c:	9e ad       	ldd	r25, Y+62	; 0x3e
    5c7e:	9a af       	std	Y+58, r25	; 0x3a
    5c80:	89 af       	std	Y+57, r24	; 0x39
    5c82:	89 ad       	ldd	r24, Y+57	; 0x39
    5c84:	9a ad       	ldd	r25, Y+58	; 0x3a
    5c86:	01 97       	sbiw	r24, 0x01	; 1
    5c88:	f1 f7       	brne	.-4      	; 0x5c86 <main+0x316c>
    5c8a:	9a af       	std	Y+58, r25	; 0x3a
    5c8c:	89 af       	std	Y+57, r24	; 0x39
												_delay_ms(50/4);
												SetPin_Val(DIO_PORTD, DIO_PIN2, PIN_HIGH);
    5c8e:	83 e0       	ldi	r24, 0x03	; 3
    5c90:	62 e0       	ldi	r22, 0x02	; 2
    5c92:	41 e0       	ldi	r20, 0x01	; 1
    5c94:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												SetPin_Val(DIO_PORTD, DIO_PIN3, PIN_HIGH);
    5c98:	83 e0       	ldi	r24, 0x03	; 3
    5c9a:	63 e0       	ldi	r22, 0x03	; 3
    5c9c:	41 e0       	ldi	r20, 0x01	; 1
    5c9e:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_HIGH);
    5ca2:	83 e0       	ldi	r24, 0x03	; 3
    5ca4:	65 e0       	ldi	r22, 0x05	; 5
    5ca6:	41 e0       	ldi	r20, 0x01	; 1
    5ca8:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												SetPin_Val(DIO_PORTD, DIO_PIN6, PIN_HIGH);
    5cac:	83 e0       	ldi	r24, 0x03	; 3
    5cae:	66 e0       	ldi	r22, 0x06	; 6
    5cb0:	41 e0       	ldi	r20, 0x01	; 1
    5cb2:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												SetPin_Val(DIO_PORTD, DIO_PIN7, PIN_HIGH);
    5cb6:	83 e0       	ldi	r24, 0x03	; 3
    5cb8:	67 e0       	ldi	r22, 0x07	; 7
    5cba:	41 e0       	ldi	r20, 0x01	; 1
    5cbc:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												SetPin_Val(DIO_PORTD, DIO_PIN4, PIN_LOW);
    5cc0:	83 e0       	ldi	r24, 0x03	; 3
    5cc2:	64 e0       	ldi	r22, 0x04	; 4
    5cc4:	40 e0       	ldi	r20, 0x00	; 0
    5cc6:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												PORTA=seg(minute%10);
    5cca:	0b e3       	ldi	r16, 0x3B	; 59
    5ccc:	10 e0       	ldi	r17, 0x00	; 0
    5cce:	fe 01       	movw	r30, r28
    5cd0:	e9 54       	subi	r30, 0x49	; 73
    5cd2:	fe 4f       	sbci	r31, 0xFE	; 254
    5cd4:	80 81       	ld	r24, Z
    5cd6:	9a e0       	ldi	r25, 0x0A	; 10
    5cd8:	69 2f       	mov	r22, r25
    5cda:	0e 94 87 33 	call	0x670e	; 0x670e <__udivmodqi4>
    5cde:	89 2f       	mov	r24, r25
    5ce0:	0e 94 8e 0a 	call	0x151c	; 0x151c <seg>
    5ce4:	f8 01       	movw	r30, r16
    5ce6:	80 83       	st	Z, r24
    5ce8:	80 e0       	ldi	r24, 0x00	; 0
    5cea:	90 e0       	ldi	r25, 0x00	; 0
    5cec:	a0 e4       	ldi	r26, 0x40	; 64
    5cee:	b1 e4       	ldi	r27, 0x41	; 65
    5cf0:	8d ab       	std	Y+53, r24	; 0x35
    5cf2:	9e ab       	std	Y+54, r25	; 0x36
    5cf4:	af ab       	std	Y+55, r26	; 0x37
    5cf6:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5cf8:	6d a9       	ldd	r22, Y+53	; 0x35
    5cfa:	7e a9       	ldd	r23, Y+54	; 0x36
    5cfc:	8f a9       	ldd	r24, Y+55	; 0x37
    5cfe:	98 ad       	ldd	r25, Y+56	; 0x38
    5d00:	20 e0       	ldi	r18, 0x00	; 0
    5d02:	30 e0       	ldi	r19, 0x00	; 0
    5d04:	4a ef       	ldi	r20, 0xFA	; 250
    5d06:	54 e4       	ldi	r21, 0x44	; 68
    5d08:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5d0c:	dc 01       	movw	r26, r24
    5d0e:	cb 01       	movw	r24, r22
    5d10:	89 ab       	std	Y+49, r24	; 0x31
    5d12:	9a ab       	std	Y+50, r25	; 0x32
    5d14:	ab ab       	std	Y+51, r26	; 0x33
    5d16:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    5d18:	69 a9       	ldd	r22, Y+49	; 0x31
    5d1a:	7a a9       	ldd	r23, Y+50	; 0x32
    5d1c:	8b a9       	ldd	r24, Y+51	; 0x33
    5d1e:	9c a9       	ldd	r25, Y+52	; 0x34
    5d20:	20 e0       	ldi	r18, 0x00	; 0
    5d22:	30 e0       	ldi	r19, 0x00	; 0
    5d24:	40 e8       	ldi	r20, 0x80	; 128
    5d26:	5f e3       	ldi	r21, 0x3F	; 63
    5d28:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    5d2c:	88 23       	and	r24, r24
    5d2e:	2c f4       	brge	.+10     	; 0x5d3a <main+0x3220>
		__ticks = 1;
    5d30:	81 e0       	ldi	r24, 0x01	; 1
    5d32:	90 e0       	ldi	r25, 0x00	; 0
    5d34:	98 ab       	std	Y+48, r25	; 0x30
    5d36:	8f a7       	std	Y+47, r24	; 0x2f
    5d38:	3f c0       	rjmp	.+126    	; 0x5db8 <main+0x329e>
	else if (__tmp > 65535)
    5d3a:	69 a9       	ldd	r22, Y+49	; 0x31
    5d3c:	7a a9       	ldd	r23, Y+50	; 0x32
    5d3e:	8b a9       	ldd	r24, Y+51	; 0x33
    5d40:	9c a9       	ldd	r25, Y+52	; 0x34
    5d42:	20 e0       	ldi	r18, 0x00	; 0
    5d44:	3f ef       	ldi	r19, 0xFF	; 255
    5d46:	4f e7       	ldi	r20, 0x7F	; 127
    5d48:	57 e4       	ldi	r21, 0x47	; 71
    5d4a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    5d4e:	18 16       	cp	r1, r24
    5d50:	4c f5       	brge	.+82     	; 0x5da4 <main+0x328a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5d52:	6d a9       	ldd	r22, Y+53	; 0x35
    5d54:	7e a9       	ldd	r23, Y+54	; 0x36
    5d56:	8f a9       	ldd	r24, Y+55	; 0x37
    5d58:	98 ad       	ldd	r25, Y+56	; 0x38
    5d5a:	20 e0       	ldi	r18, 0x00	; 0
    5d5c:	30 e0       	ldi	r19, 0x00	; 0
    5d5e:	40 e2       	ldi	r20, 0x20	; 32
    5d60:	51 e4       	ldi	r21, 0x41	; 65
    5d62:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5d66:	dc 01       	movw	r26, r24
    5d68:	cb 01       	movw	r24, r22
    5d6a:	bc 01       	movw	r22, r24
    5d6c:	cd 01       	movw	r24, r26
    5d6e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5d72:	dc 01       	movw	r26, r24
    5d74:	cb 01       	movw	r24, r22
    5d76:	98 ab       	std	Y+48, r25	; 0x30
    5d78:	8f a7       	std	Y+47, r24	; 0x2f
    5d7a:	0f c0       	rjmp	.+30     	; 0x5d9a <main+0x3280>
    5d7c:	88 ec       	ldi	r24, 0xC8	; 200
    5d7e:	90 e0       	ldi	r25, 0x00	; 0
    5d80:	9e a7       	std	Y+46, r25	; 0x2e
    5d82:	8d a7       	std	Y+45, r24	; 0x2d
    5d84:	8d a5       	ldd	r24, Y+45	; 0x2d
    5d86:	9e a5       	ldd	r25, Y+46	; 0x2e
    5d88:	01 97       	sbiw	r24, 0x01	; 1
    5d8a:	f1 f7       	brne	.-4      	; 0x5d88 <main+0x326e>
    5d8c:	9e a7       	std	Y+46, r25	; 0x2e
    5d8e:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5d90:	8f a5       	ldd	r24, Y+47	; 0x2f
    5d92:	98 a9       	ldd	r25, Y+48	; 0x30
    5d94:	01 97       	sbiw	r24, 0x01	; 1
    5d96:	98 ab       	std	Y+48, r25	; 0x30
    5d98:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5d9a:	8f a5       	ldd	r24, Y+47	; 0x2f
    5d9c:	98 a9       	ldd	r25, Y+48	; 0x30
    5d9e:	00 97       	sbiw	r24, 0x00	; 0
    5da0:	69 f7       	brne	.-38     	; 0x5d7c <main+0x3262>
    5da2:	14 c0       	rjmp	.+40     	; 0x5dcc <main+0x32b2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5da4:	69 a9       	ldd	r22, Y+49	; 0x31
    5da6:	7a a9       	ldd	r23, Y+50	; 0x32
    5da8:	8b a9       	ldd	r24, Y+51	; 0x33
    5daa:	9c a9       	ldd	r25, Y+52	; 0x34
    5dac:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5db0:	dc 01       	movw	r26, r24
    5db2:	cb 01       	movw	r24, r22
    5db4:	98 ab       	std	Y+48, r25	; 0x30
    5db6:	8f a7       	std	Y+47, r24	; 0x2f
    5db8:	8f a5       	ldd	r24, Y+47	; 0x2f
    5dba:	98 a9       	ldd	r25, Y+48	; 0x30
    5dbc:	9c a7       	std	Y+44, r25	; 0x2c
    5dbe:	8b a7       	std	Y+43, r24	; 0x2b
    5dc0:	8b a5       	ldd	r24, Y+43	; 0x2b
    5dc2:	9c a5       	ldd	r25, Y+44	; 0x2c
    5dc4:	01 97       	sbiw	r24, 0x01	; 1
    5dc6:	f1 f7       	brne	.-4      	; 0x5dc4 <main+0x32aa>
    5dc8:	9c a7       	std	Y+44, r25	; 0x2c
    5dca:	8b a7       	std	Y+43, r24	; 0x2b
												_delay_ms(50/4);
												SetPin_Val(DIO_PORTD, DIO_PIN2, PIN_HIGH);
    5dcc:	83 e0       	ldi	r24, 0x03	; 3
    5dce:	62 e0       	ldi	r22, 0x02	; 2
    5dd0:	41 e0       	ldi	r20, 0x01	; 1
    5dd2:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												SetPin_Val(DIO_PORTD, DIO_PIN3, PIN_HIGH);
    5dd6:	83 e0       	ldi	r24, 0x03	; 3
    5dd8:	63 e0       	ldi	r22, 0x03	; 3
    5dda:	41 e0       	ldi	r20, 0x01	; 1
    5ddc:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												SetPin_Val(DIO_PORTD, DIO_PIN4, PIN_HIGH);
    5de0:	83 e0       	ldi	r24, 0x03	; 3
    5de2:	64 e0       	ldi	r22, 0x04	; 4
    5de4:	41 e0       	ldi	r20, 0x01	; 1
    5de6:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												SetPin_Val(DIO_PORTD, DIO_PIN6, PIN_HIGH);
    5dea:	83 e0       	ldi	r24, 0x03	; 3
    5dec:	66 e0       	ldi	r22, 0x06	; 6
    5dee:	41 e0       	ldi	r20, 0x01	; 1
    5df0:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												SetPin_Val(DIO_PORTD, DIO_PIN7, PIN_HIGH);
    5df4:	83 e0       	ldi	r24, 0x03	; 3
    5df6:	67 e0       	ldi	r22, 0x07	; 7
    5df8:	41 e0       	ldi	r20, 0x01	; 1
    5dfa:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												SetPin_Val(DIO_PORTD, DIO_PIN5, PIN_LOW);
    5dfe:	83 e0       	ldi	r24, 0x03	; 3
    5e00:	65 e0       	ldi	r22, 0x05	; 5
    5e02:	40 e0       	ldi	r20, 0x00	; 0
    5e04:	0e 94 0a 08 	call	0x1014	; 0x1014 <SetPin_Val>
												PORTA=seg(minute/10);
    5e08:	0b e3       	ldi	r16, 0x3B	; 59
    5e0a:	10 e0       	ldi	r17, 0x00	; 0
    5e0c:	fe 01       	movw	r30, r28
    5e0e:	e9 54       	subi	r30, 0x49	; 73
    5e10:	fe 4f       	sbci	r31, 0xFE	; 254
    5e12:	80 81       	ld	r24, Z
    5e14:	9a e0       	ldi	r25, 0x0A	; 10
    5e16:	69 2f       	mov	r22, r25
    5e18:	0e 94 87 33 	call	0x670e	; 0x670e <__udivmodqi4>
    5e1c:	0e 94 8e 0a 	call	0x151c	; 0x151c <seg>
    5e20:	f8 01       	movw	r30, r16
    5e22:	80 83       	st	Z, r24
    5e24:	80 e0       	ldi	r24, 0x00	; 0
    5e26:	90 e0       	ldi	r25, 0x00	; 0
    5e28:	a0 e4       	ldi	r26, 0x40	; 64
    5e2a:	b1 e4       	ldi	r27, 0x41	; 65
    5e2c:	8f a3       	std	Y+39, r24	; 0x27
    5e2e:	98 a7       	std	Y+40, r25	; 0x28
    5e30:	a9 a7       	std	Y+41, r26	; 0x29
    5e32:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5e34:	6f a1       	ldd	r22, Y+39	; 0x27
    5e36:	78 a5       	ldd	r23, Y+40	; 0x28
    5e38:	89 a5       	ldd	r24, Y+41	; 0x29
    5e3a:	9a a5       	ldd	r25, Y+42	; 0x2a
    5e3c:	20 e0       	ldi	r18, 0x00	; 0
    5e3e:	30 e0       	ldi	r19, 0x00	; 0
    5e40:	4a ef       	ldi	r20, 0xFA	; 250
    5e42:	54 e4       	ldi	r21, 0x44	; 68
    5e44:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5e48:	dc 01       	movw	r26, r24
    5e4a:	cb 01       	movw	r24, r22
    5e4c:	8b a3       	std	Y+35, r24	; 0x23
    5e4e:	9c a3       	std	Y+36, r25	; 0x24
    5e50:	ad a3       	std	Y+37, r26	; 0x25
    5e52:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    5e54:	6b a1       	ldd	r22, Y+35	; 0x23
    5e56:	7c a1       	ldd	r23, Y+36	; 0x24
    5e58:	8d a1       	ldd	r24, Y+37	; 0x25
    5e5a:	9e a1       	ldd	r25, Y+38	; 0x26
    5e5c:	20 e0       	ldi	r18, 0x00	; 0
    5e5e:	30 e0       	ldi	r19, 0x00	; 0
    5e60:	40 e8       	ldi	r20, 0x80	; 128
    5e62:	5f e3       	ldi	r21, 0x3F	; 63
    5e64:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    5e68:	88 23       	and	r24, r24
    5e6a:	2c f4       	brge	.+10     	; 0x5e76 <main+0x335c>
		__ticks = 1;
    5e6c:	81 e0       	ldi	r24, 0x01	; 1
    5e6e:	90 e0       	ldi	r25, 0x00	; 0
    5e70:	9a a3       	std	Y+34, r25	; 0x22
    5e72:	89 a3       	std	Y+33, r24	; 0x21
    5e74:	3f c0       	rjmp	.+126    	; 0x5ef4 <main+0x33da>
	else if (__tmp > 65535)
    5e76:	6b a1       	ldd	r22, Y+35	; 0x23
    5e78:	7c a1       	ldd	r23, Y+36	; 0x24
    5e7a:	8d a1       	ldd	r24, Y+37	; 0x25
    5e7c:	9e a1       	ldd	r25, Y+38	; 0x26
    5e7e:	20 e0       	ldi	r18, 0x00	; 0
    5e80:	3f ef       	ldi	r19, 0xFF	; 255
    5e82:	4f e7       	ldi	r20, 0x7F	; 127
    5e84:	57 e4       	ldi	r21, 0x47	; 71
    5e86:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    5e8a:	18 16       	cp	r1, r24
    5e8c:	4c f5       	brge	.+82     	; 0x5ee0 <main+0x33c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5e8e:	6f a1       	ldd	r22, Y+39	; 0x27
    5e90:	78 a5       	ldd	r23, Y+40	; 0x28
    5e92:	89 a5       	ldd	r24, Y+41	; 0x29
    5e94:	9a a5       	ldd	r25, Y+42	; 0x2a
    5e96:	20 e0       	ldi	r18, 0x00	; 0
    5e98:	30 e0       	ldi	r19, 0x00	; 0
    5e9a:	40 e2       	ldi	r20, 0x20	; 32
    5e9c:	51 e4       	ldi	r21, 0x41	; 65
    5e9e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5ea2:	dc 01       	movw	r26, r24
    5ea4:	cb 01       	movw	r24, r22
    5ea6:	bc 01       	movw	r22, r24
    5ea8:	cd 01       	movw	r24, r26
    5eaa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5eae:	dc 01       	movw	r26, r24
    5eb0:	cb 01       	movw	r24, r22
    5eb2:	9a a3       	std	Y+34, r25	; 0x22
    5eb4:	89 a3       	std	Y+33, r24	; 0x21
    5eb6:	0f c0       	rjmp	.+30     	; 0x5ed6 <main+0x33bc>
    5eb8:	88 ec       	ldi	r24, 0xC8	; 200
    5eba:	90 e0       	ldi	r25, 0x00	; 0
    5ebc:	98 a3       	std	Y+32, r25	; 0x20
    5ebe:	8f 8f       	std	Y+31, r24	; 0x1f
    5ec0:	8f 8d       	ldd	r24, Y+31	; 0x1f
    5ec2:	98 a1       	ldd	r25, Y+32	; 0x20
    5ec4:	01 97       	sbiw	r24, 0x01	; 1
    5ec6:	f1 f7       	brne	.-4      	; 0x5ec4 <main+0x33aa>
    5ec8:	98 a3       	std	Y+32, r25	; 0x20
    5eca:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5ecc:	89 a1       	ldd	r24, Y+33	; 0x21
    5ece:	9a a1       	ldd	r25, Y+34	; 0x22
    5ed0:	01 97       	sbiw	r24, 0x01	; 1
    5ed2:	9a a3       	std	Y+34, r25	; 0x22
    5ed4:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5ed6:	89 a1       	ldd	r24, Y+33	; 0x21
    5ed8:	9a a1       	ldd	r25, Y+34	; 0x22
    5eda:	00 97       	sbiw	r24, 0x00	; 0
    5edc:	69 f7       	brne	.-38     	; 0x5eb8 <main+0x339e>
    5ede:	14 c0       	rjmp	.+40     	; 0x5f08 <main+0x33ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5ee0:	6b a1       	ldd	r22, Y+35	; 0x23
    5ee2:	7c a1       	ldd	r23, Y+36	; 0x24
    5ee4:	8d a1       	ldd	r24, Y+37	; 0x25
    5ee6:	9e a1       	ldd	r25, Y+38	; 0x26
    5ee8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5eec:	dc 01       	movw	r26, r24
    5eee:	cb 01       	movw	r24, r22
    5ef0:	9a a3       	std	Y+34, r25	; 0x22
    5ef2:	89 a3       	std	Y+33, r24	; 0x21
    5ef4:	89 a1       	ldd	r24, Y+33	; 0x21
    5ef6:	9a a1       	ldd	r25, Y+34	; 0x22
    5ef8:	9e 8f       	std	Y+30, r25	; 0x1e
    5efa:	8d 8f       	std	Y+29, r24	; 0x1d
    5efc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5efe:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5f00:	01 97       	sbiw	r24, 0x01	; 1
    5f02:	f1 f7       	brne	.-4      	; 0x5f00 <main+0x33e6>
    5f04:	9e 8f       	std	Y+30, r25	; 0x1e
    5f06:	8d 8f       	std	Y+29, r24	; 0x1d
									second_2=second_1;
								}
							for( u8 second =0;(second<=second_2)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;second++)
								{
										int n=20;
											while (n--)
    5f08:	cd 52       	subi	r28, 0x2D	; 45
    5f0a:	de 4f       	sbci	r29, 0xFE	; 254
    5f0c:	18 82       	st	Y, r1
    5f0e:	c3 5d       	subi	r28, 0xD3	; 211
    5f10:	d1 40       	sbci	r29, 0x01	; 1
    5f12:	fe 01       	movw	r30, r28
    5f14:	ec 54       	subi	r30, 0x4C	; 76
    5f16:	fe 4f       	sbci	r31, 0xFE	; 254
    5f18:	80 81       	ld	r24, Z
    5f1a:	91 81       	ldd	r25, Z+1	; 0x01
    5f1c:	00 97       	sbiw	r24, 0x00	; 0
    5f1e:	31 f0       	breq	.+12     	; 0x5f2c <main+0x3412>
    5f20:	f1 e0       	ldi	r31, 0x01	; 1
    5f22:	cd 52       	subi	r28, 0x2D	; 45
    5f24:	de 4f       	sbci	r29, 0xFE	; 254
    5f26:	f8 83       	st	Y, r31
    5f28:	c3 5d       	subi	r28, 0xD3	; 211
    5f2a:	d1 40       	sbci	r29, 0x01	; 1
    5f2c:	de 01       	movw	r26, r28
    5f2e:	ac 54       	subi	r26, 0x4C	; 76
    5f30:	be 4f       	sbci	r27, 0xFE	; 254
    5f32:	fe 01       	movw	r30, r28
    5f34:	ec 54       	subi	r30, 0x4C	; 76
    5f36:	fe 4f       	sbci	r31, 0xFE	; 254
    5f38:	80 81       	ld	r24, Z
    5f3a:	91 81       	ldd	r25, Z+1	; 0x01
    5f3c:	01 97       	sbiw	r24, 0x01	; 1
    5f3e:	11 96       	adiw	r26, 0x01	; 1
    5f40:	9c 93       	st	X, r25
    5f42:	8e 93       	st	-X, r24
    5f44:	cd 52       	subi	r28, 0x2D	; 45
    5f46:	de 4f       	sbci	r29, 0xFE	; 254
    5f48:	e8 80       	ld	r14, Y
    5f4a:	c3 5d       	subi	r28, 0xD3	; 211
    5f4c:	d1 40       	sbci	r29, 0x01	; 1
    5f4e:	ee 20       	and	r14, r14
    5f50:	09 f0       	breq	.+2      	; 0x5f54 <main+0x343a>
    5f52:	0c cd       	rjmp	.-1512   	; 0x596c <main+0x2e52>
							{
								if (minute==minute_1)
								{
									second_2=second_1;
								}
							for( u8 second =0;(second<=second_2)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;second++)
    5f54:	de 01       	movw	r26, r28
    5f56:	aa 54       	subi	r26, 0x4A	; 74
    5f58:	be 4f       	sbci	r27, 0xFE	; 254
    5f5a:	fe 01       	movw	r30, r28
    5f5c:	ea 54       	subi	r30, 0x4A	; 74
    5f5e:	fe 4f       	sbci	r31, 0xFE	; 254
    5f60:	80 81       	ld	r24, Z
    5f62:	8f 5f       	subi	r24, 0xFF	; 255
    5f64:	8c 93       	st	X, r24
    5f66:	fe 01       	movw	r30, r28
    5f68:	ea 54       	subi	r30, 0x4A	; 74
    5f6a:	fe 4f       	sbci	r31, 0xFE	; 254
    5f6c:	de 01       	movw	r26, r28
    5f6e:	a8 54       	subi	r26, 0x48	; 72
    5f70:	be 4f       	sbci	r27, 0xFE	; 254
    5f72:	90 81       	ld	r25, Z
    5f74:	8c 91       	ld	r24, X
    5f76:	89 17       	cp	r24, r25
    5f78:	38 f0       	brcs	.+14     	; 0x5f88 <main+0x346e>
    5f7a:	81 e0       	ldi	r24, 0x01	; 1
    5f7c:	60 e0       	ldi	r22, 0x00	; 0
    5f7e:	0e 94 12 09 	call	0x1224	; 0x1224 <Get_PinVal>
    5f82:	88 23       	and	r24, r24
    5f84:	09 f0       	breq	.+2      	; 0x5f88 <main+0x346e>
    5f86:	ea cc       	rjmp	.-1580   	; 0x595c <main+0x2e42>
		LCD_GoTO(2, 0);
		LCD_SendString("press button-> 1 ");

		while(1)
		{
			for( u8 minute =0;(minute<=minute_1)&&Get_PinVal(DIO_PORTB, DIO_PIN0)!=0;minute++)
    5f88:	de 01       	movw	r26, r28
    5f8a:	a9 54       	subi	r26, 0x49	; 73
    5f8c:	be 4f       	sbci	r27, 0xFE	; 254
    5f8e:	fe 01       	movw	r30, r28
    5f90:	e9 54       	subi	r30, 0x49	; 73
    5f92:	fe 4f       	sbci	r31, 0xFE	; 254
    5f94:	80 81       	ld	r24, Z
    5f96:	8f 5f       	subi	r24, 0xFF	; 255
    5f98:	8c 93       	st	X, r24
    5f9a:	fe 01       	movw	r30, r28
    5f9c:	e9 54       	subi	r30, 0x49	; 73
    5f9e:	fe 4f       	sbci	r31, 0xFE	; 254
    5fa0:	de 01       	movw	r26, r28
    5fa2:	a6 54       	subi	r26, 0x46	; 70
    5fa4:	be 4f       	sbci	r27, 0xFE	; 254
    5fa6:	90 81       	ld	r25, Z
    5fa8:	8c 91       	ld	r24, X
    5faa:	89 17       	cp	r24, r25
    5fac:	38 f0       	brcs	.+14     	; 0x5fbc <main+0x34a2>
    5fae:	81 e0       	ldi	r24, 0x01	; 1
    5fb0:	60 e0       	ldi	r22, 0x00	; 0
    5fb2:	0e 94 12 09 	call	0x1224	; 0x1224 <Get_PinVal>
    5fb6:	88 23       	and	r24, r24
    5fb8:	09 f0       	breq	.+2      	; 0x5fbc <main+0x34a2>
    5fba:	b9 cc       	rjmp	.-1678   	; 0x592e <main+0x2e14>


										}

									}
			if (Get_PinVal(DIO_PORTB, DIO_PIN0)==0)
    5fbc:	81 e0       	ldi	r24, 0x01	; 1
    5fbe:	60 e0       	ldi	r22, 0x00	; 0
    5fc0:	0e 94 12 09 	call	0x1224	; 0x1224 <Get_PinVal>
    5fc4:	88 23       	and	r24, r24
    5fc6:	09 f0       	breq	.+2      	; 0x5fca <main+0x34b0>
    5fc8:	83 c0       	rjmp	.+262    	; 0x60d0 <main+0x35b6>
					{
						LCD_Clear();
    5fca:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
						LCD_SendString("loading");
    5fce:	88 e5       	ldi	r24, 0x58	; 88
    5fd0:	91 e0       	ldi	r25, 0x01	; 1
    5fd2:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
						LCD_GoTO(2, 0);
    5fd6:	82 e0       	ldi	r24, 0x02	; 2
    5fd8:	60 e0       	ldi	r22, 0x00	; 0
    5fda:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <LCD_GoTO>
						LCD_SendString("press button(4");
    5fde:	80 e6       	ldi	r24, 0x60	; 96
    5fe0:	91 e0       	ldi	r25, 0x01	; 1
    5fe2:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
    5fe6:	80 e0       	ldi	r24, 0x00	; 0
    5fe8:	90 e0       	ldi	r25, 0x00	; 0
    5fea:	aa e7       	ldi	r26, 0x7A	; 122
    5fec:	b5 e4       	ldi	r27, 0x45	; 69
    5fee:	89 8f       	std	Y+25, r24	; 0x19
    5ff0:	9a 8f       	std	Y+26, r25	; 0x1a
    5ff2:	ab 8f       	std	Y+27, r26	; 0x1b
    5ff4:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5ff6:	69 8d       	ldd	r22, Y+25	; 0x19
    5ff8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5ffa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5ffc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5ffe:	20 e0       	ldi	r18, 0x00	; 0
    6000:	30 e0       	ldi	r19, 0x00	; 0
    6002:	4a ef       	ldi	r20, 0xFA	; 250
    6004:	54 e4       	ldi	r21, 0x44	; 68
    6006:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    600a:	dc 01       	movw	r26, r24
    600c:	cb 01       	movw	r24, r22
    600e:	8d 8b       	std	Y+21, r24	; 0x15
    6010:	9e 8b       	std	Y+22, r25	; 0x16
    6012:	af 8b       	std	Y+23, r26	; 0x17
    6014:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    6016:	6d 89       	ldd	r22, Y+21	; 0x15
    6018:	7e 89       	ldd	r23, Y+22	; 0x16
    601a:	8f 89       	ldd	r24, Y+23	; 0x17
    601c:	98 8d       	ldd	r25, Y+24	; 0x18
    601e:	20 e0       	ldi	r18, 0x00	; 0
    6020:	30 e0       	ldi	r19, 0x00	; 0
    6022:	40 e8       	ldi	r20, 0x80	; 128
    6024:	5f e3       	ldi	r21, 0x3F	; 63
    6026:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    602a:	88 23       	and	r24, r24
    602c:	2c f4       	brge	.+10     	; 0x6038 <main+0x351e>
		__ticks = 1;
    602e:	81 e0       	ldi	r24, 0x01	; 1
    6030:	90 e0       	ldi	r25, 0x00	; 0
    6032:	9c 8b       	std	Y+20, r25	; 0x14
    6034:	8b 8b       	std	Y+19, r24	; 0x13
    6036:	3f c0       	rjmp	.+126    	; 0x60b6 <main+0x359c>
	else if (__tmp > 65535)
    6038:	6d 89       	ldd	r22, Y+21	; 0x15
    603a:	7e 89       	ldd	r23, Y+22	; 0x16
    603c:	8f 89       	ldd	r24, Y+23	; 0x17
    603e:	98 8d       	ldd	r25, Y+24	; 0x18
    6040:	20 e0       	ldi	r18, 0x00	; 0
    6042:	3f ef       	ldi	r19, 0xFF	; 255
    6044:	4f e7       	ldi	r20, 0x7F	; 127
    6046:	57 e4       	ldi	r21, 0x47	; 71
    6048:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    604c:	18 16       	cp	r1, r24
    604e:	4c f5       	brge	.+82     	; 0x60a2 <main+0x3588>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6050:	69 8d       	ldd	r22, Y+25	; 0x19
    6052:	7a 8d       	ldd	r23, Y+26	; 0x1a
    6054:	8b 8d       	ldd	r24, Y+27	; 0x1b
    6056:	9c 8d       	ldd	r25, Y+28	; 0x1c
    6058:	20 e0       	ldi	r18, 0x00	; 0
    605a:	30 e0       	ldi	r19, 0x00	; 0
    605c:	40 e2       	ldi	r20, 0x20	; 32
    605e:	51 e4       	ldi	r21, 0x41	; 65
    6060:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6064:	dc 01       	movw	r26, r24
    6066:	cb 01       	movw	r24, r22
    6068:	bc 01       	movw	r22, r24
    606a:	cd 01       	movw	r24, r26
    606c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6070:	dc 01       	movw	r26, r24
    6072:	cb 01       	movw	r24, r22
    6074:	9c 8b       	std	Y+20, r25	; 0x14
    6076:	8b 8b       	std	Y+19, r24	; 0x13
    6078:	0f c0       	rjmp	.+30     	; 0x6098 <main+0x357e>
    607a:	88 ec       	ldi	r24, 0xC8	; 200
    607c:	90 e0       	ldi	r25, 0x00	; 0
    607e:	9a 8b       	std	Y+18, r25	; 0x12
    6080:	89 8b       	std	Y+17, r24	; 0x11
    6082:	89 89       	ldd	r24, Y+17	; 0x11
    6084:	9a 89       	ldd	r25, Y+18	; 0x12
    6086:	01 97       	sbiw	r24, 0x01	; 1
    6088:	f1 f7       	brne	.-4      	; 0x6086 <main+0x356c>
    608a:	9a 8b       	std	Y+18, r25	; 0x12
    608c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    608e:	8b 89       	ldd	r24, Y+19	; 0x13
    6090:	9c 89       	ldd	r25, Y+20	; 0x14
    6092:	01 97       	sbiw	r24, 0x01	; 1
    6094:	9c 8b       	std	Y+20, r25	; 0x14
    6096:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6098:	8b 89       	ldd	r24, Y+19	; 0x13
    609a:	9c 89       	ldd	r25, Y+20	; 0x14
    609c:	00 97       	sbiw	r24, 0x00	; 0
    609e:	69 f7       	brne	.-38     	; 0x607a <main+0x3560>
    60a0:	14 c0       	rjmp	.+40     	; 0x60ca <main+0x35b0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    60a2:	6d 89       	ldd	r22, Y+21	; 0x15
    60a4:	7e 89       	ldd	r23, Y+22	; 0x16
    60a6:	8f 89       	ldd	r24, Y+23	; 0x17
    60a8:	98 8d       	ldd	r25, Y+24	; 0x18
    60aa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    60ae:	dc 01       	movw	r26, r24
    60b0:	cb 01       	movw	r24, r22
    60b2:	9c 8b       	std	Y+20, r25	; 0x14
    60b4:	8b 8b       	std	Y+19, r24	; 0x13
    60b6:	8b 89       	ldd	r24, Y+19	; 0x13
    60b8:	9c 89       	ldd	r25, Y+20	; 0x14
    60ba:	98 8b       	std	Y+16, r25	; 0x10
    60bc:	8f 87       	std	Y+15, r24	; 0x0f
    60be:	8f 85       	ldd	r24, Y+15	; 0x0f
    60c0:	98 89       	ldd	r25, Y+16	; 0x10
    60c2:	01 97       	sbiw	r24, 0x01	; 1
    60c4:	f1 f7       	brne	.-4      	; 0x60c2 <main+0x35a8>
    60c6:	98 8b       	std	Y+16, r25	; 0x10
    60c8:	8f 87       	std	Y+15, r24	; 0x0f
						_delay_ms(4000);
						LCD_Clear();
    60ca:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
    60ce:	3e cb       	rjmp	.-2436   	; 0x574c <main+0x2c32>
						break;
					}

			LCD_Clear();
    60d0:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
			LCD_SendString("press button(4)");
    60d4:	8f e6       	ldi	r24, 0x6F	; 111
    60d6:	91 e0       	ldi	r25, 0x01	; 1
    60d8:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
			LCD_GoTO(2, 0);
    60dc:	82 e0       	ldi	r24, 0x02	; 2
    60de:	60 e0       	ldi	r22, 0x00	; 0
    60e0:	0e 94 4a 0f 	call	0x1e94	; 0x1e94 <LCD_GoTO>
    60e4:	80 e0       	ldi	r24, 0x00	; 0
    60e6:	90 e0       	ldi	r25, 0x00	; 0
    60e8:	aa e7       	ldi	r26, 0x7A	; 122
    60ea:	b5 e4       	ldi	r27, 0x45	; 69
    60ec:	8b 87       	std	Y+11, r24	; 0x0b
    60ee:	9c 87       	std	Y+12, r25	; 0x0c
    60f0:	ad 87       	std	Y+13, r26	; 0x0d
    60f2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    60f4:	6b 85       	ldd	r22, Y+11	; 0x0b
    60f6:	7c 85       	ldd	r23, Y+12	; 0x0c
    60f8:	8d 85       	ldd	r24, Y+13	; 0x0d
    60fa:	9e 85       	ldd	r25, Y+14	; 0x0e
    60fc:	20 e0       	ldi	r18, 0x00	; 0
    60fe:	30 e0       	ldi	r19, 0x00	; 0
    6100:	4a ef       	ldi	r20, 0xFA	; 250
    6102:	54 e4       	ldi	r21, 0x44	; 68
    6104:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6108:	dc 01       	movw	r26, r24
    610a:	cb 01       	movw	r24, r22
    610c:	8f 83       	std	Y+7, r24	; 0x07
    610e:	98 87       	std	Y+8, r25	; 0x08
    6110:	a9 87       	std	Y+9, r26	; 0x09
    6112:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    6114:	6f 81       	ldd	r22, Y+7	; 0x07
    6116:	78 85       	ldd	r23, Y+8	; 0x08
    6118:	89 85       	ldd	r24, Y+9	; 0x09
    611a:	9a 85       	ldd	r25, Y+10	; 0x0a
    611c:	20 e0       	ldi	r18, 0x00	; 0
    611e:	30 e0       	ldi	r19, 0x00	; 0
    6120:	40 e8       	ldi	r20, 0x80	; 128
    6122:	5f e3       	ldi	r21, 0x3F	; 63
    6124:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    6128:	88 23       	and	r24, r24
    612a:	2c f4       	brge	.+10     	; 0x6136 <main+0x361c>
		__ticks = 1;
    612c:	81 e0       	ldi	r24, 0x01	; 1
    612e:	90 e0       	ldi	r25, 0x00	; 0
    6130:	9e 83       	std	Y+6, r25	; 0x06
    6132:	8d 83       	std	Y+5, r24	; 0x05
    6134:	3f c0       	rjmp	.+126    	; 0x61b4 <main+0x369a>
	else if (__tmp > 65535)
    6136:	6f 81       	ldd	r22, Y+7	; 0x07
    6138:	78 85       	ldd	r23, Y+8	; 0x08
    613a:	89 85       	ldd	r24, Y+9	; 0x09
    613c:	9a 85       	ldd	r25, Y+10	; 0x0a
    613e:	20 e0       	ldi	r18, 0x00	; 0
    6140:	3f ef       	ldi	r19, 0xFF	; 255
    6142:	4f e7       	ldi	r20, 0x7F	; 127
    6144:	57 e4       	ldi	r21, 0x47	; 71
    6146:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    614a:	18 16       	cp	r1, r24
    614c:	4c f5       	brge	.+82     	; 0x61a0 <main+0x3686>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    614e:	6b 85       	ldd	r22, Y+11	; 0x0b
    6150:	7c 85       	ldd	r23, Y+12	; 0x0c
    6152:	8d 85       	ldd	r24, Y+13	; 0x0d
    6154:	9e 85       	ldd	r25, Y+14	; 0x0e
    6156:	20 e0       	ldi	r18, 0x00	; 0
    6158:	30 e0       	ldi	r19, 0x00	; 0
    615a:	40 e2       	ldi	r20, 0x20	; 32
    615c:	51 e4       	ldi	r21, 0x41	; 65
    615e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6162:	dc 01       	movw	r26, r24
    6164:	cb 01       	movw	r24, r22
    6166:	bc 01       	movw	r22, r24
    6168:	cd 01       	movw	r24, r26
    616a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    616e:	dc 01       	movw	r26, r24
    6170:	cb 01       	movw	r24, r22
    6172:	9e 83       	std	Y+6, r25	; 0x06
    6174:	8d 83       	std	Y+5, r24	; 0x05
    6176:	0f c0       	rjmp	.+30     	; 0x6196 <main+0x367c>
    6178:	88 ec       	ldi	r24, 0xC8	; 200
    617a:	90 e0       	ldi	r25, 0x00	; 0
    617c:	9c 83       	std	Y+4, r25	; 0x04
    617e:	8b 83       	std	Y+3, r24	; 0x03
    6180:	8b 81       	ldd	r24, Y+3	; 0x03
    6182:	9c 81       	ldd	r25, Y+4	; 0x04
    6184:	01 97       	sbiw	r24, 0x01	; 1
    6186:	f1 f7       	brne	.-4      	; 0x6184 <main+0x366a>
    6188:	9c 83       	std	Y+4, r25	; 0x04
    618a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    618c:	8d 81       	ldd	r24, Y+5	; 0x05
    618e:	9e 81       	ldd	r25, Y+6	; 0x06
    6190:	01 97       	sbiw	r24, 0x01	; 1
    6192:	9e 83       	std	Y+6, r25	; 0x06
    6194:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6196:	8d 81       	ldd	r24, Y+5	; 0x05
    6198:	9e 81       	ldd	r25, Y+6	; 0x06
    619a:	00 97       	sbiw	r24, 0x00	; 0
    619c:	69 f7       	brne	.-38     	; 0x6178 <main+0x365e>
    619e:	d6 ca       	rjmp	.-2644   	; 0x574c <main+0x2c32>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    61a0:	6f 81       	ldd	r22, Y+7	; 0x07
    61a2:	78 85       	ldd	r23, Y+8	; 0x08
    61a4:	89 85       	ldd	r24, Y+9	; 0x09
    61a6:	9a 85       	ldd	r25, Y+10	; 0x0a
    61a8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    61ac:	dc 01       	movw	r26, r24
    61ae:	cb 01       	movw	r24, r22
    61b0:	9e 83       	std	Y+6, r25	; 0x06
    61b2:	8d 83       	std	Y+5, r24	; 0x05
    61b4:	8d 81       	ldd	r24, Y+5	; 0x05
    61b6:	9e 81       	ldd	r25, Y+6	; 0x06
    61b8:	9a 83       	std	Y+2, r25	; 0x02
    61ba:	89 83       	std	Y+1, r24	; 0x01
    61bc:	89 81       	ldd	r24, Y+1	; 0x01
    61be:	9a 81       	ldd	r25, Y+2	; 0x02
    61c0:	01 97       	sbiw	r24, 0x01	; 1
    61c2:	f1 f7       	brne	.-4      	; 0x61c0 <main+0x36a6>
    61c4:	9a 83       	std	Y+2, r25	; 0x02
    61c6:	89 83       	std	Y+1, r24	; 0x01
    61c8:	c1 ca       	rjmp	.-2686   	; 0x574c <main+0x2c32>
*************************************************************************************************
***************************************------(calculator)-----************************************
*************************************************************************************************
*************************************************************************************************
*************************************************************************************************/
else if(mode==4)
    61ca:	fe 01       	movw	r30, r28
    61cc:	e7 53       	subi	r30, 0x37	; 55
    61ce:	fe 4f       	sbci	r31, 0xFE	; 254
    61d0:	80 81       	ld	r24, Z
    61d2:	84 30       	cpi	r24, 0x04	; 4
    61d4:	09 f0       	breq	.+2      	; 0x61d8 <main+0x36be>
    61d6:	6e c2       	rjmp	.+1244   	; 0x66b4 <main+0x3b9a>
{
LCD_INTI();
    61d8:	0e 94 0a 0b 	call	0x1614	; 0x1614 <LCD_INTI>
Keypad_Inti();
    61dc:	0e 94 69 10 	call	0x20d2	; 0x20d2 <Keypad_Inti>
u32 var1=0;
    61e0:	fe 01       	movw	r30, r28
    61e2:	e0 55       	subi	r30, 0x50	; 80
    61e4:	fe 4f       	sbci	r31, 0xFE	; 254
    61e6:	10 82       	st	Z, r1
    61e8:	11 82       	std	Z+1, r1	; 0x01
    61ea:	12 82       	std	Z+2, r1	; 0x02
    61ec:	13 82       	std	Z+3, r1	; 0x03
u32 var2=0;
    61ee:	fe 01       	movw	r30, r28
    61f0:	e4 55       	subi	r30, 0x54	; 84
    61f2:	fe 4f       	sbci	r31, 0xFE	; 254
    61f4:	10 82       	st	Z, r1
    61f6:	11 82       	std	Z+1, r1	; 0x01
    61f8:	12 82       	std	Z+2, r1	; 0x02
    61fa:	13 82       	std	Z+3, r1	; 0x03
u8 test=5;
    61fc:	fe 01       	movw	r30, r28
    61fe:	e5 55       	subi	r30, 0x55	; 85
    6200:	fe 4f       	sbci	r31, 0xFE	; 254
    6202:	85 e0       	ldi	r24, 0x05	; 5
    6204:	80 83       	st	Z, r24
u8 op;
s32 result=0;
    6206:	fe 01       	movw	r30, r28
    6208:	ea 55       	subi	r30, 0x5A	; 90
    620a:	fe 4f       	sbci	r31, 0xFE	; 254
    620c:	10 82       	st	Z, r1
    620e:	11 82       	std	Z+1, r1	; 0x01
    6210:	12 82       	std	Z+2, r1	; 0x02
    6212:	13 82       	std	Z+3, r1	; 0x03

		while(1)
		{
			u8 tmp= keypad_GetVal();
    6214:	0e 94 bc 10 	call	0x2178	; 0x2178 <keypad_GetVal>
    6218:	fe 01       	movw	r30, r28
    621a:	eb 55       	subi	r30, 0x5B	; 91
    621c:	fe 4f       	sbci	r31, 0xFE	; 254
    621e:	80 83       	st	Z, r24
			if(tmp!=0)
    6220:	fe 01       	movw	r30, r28
    6222:	eb 55       	subi	r30, 0x5B	; 91
    6224:	fe 4f       	sbci	r31, 0xFE	; 254
    6226:	80 81       	ld	r24, Z
    6228:	88 23       	and	r24, r24
    622a:	a1 f3       	breq	.-24     	; 0x6214 <main+0x36fa>
			{
				if(tmp>='0'&&tmp<='9'&&test==5)
    622c:	fe 01       	movw	r30, r28
    622e:	eb 55       	subi	r30, 0x5B	; 91
    6230:	fe 4f       	sbci	r31, 0xFE	; 254
    6232:	80 81       	ld	r24, Z
    6234:	80 33       	cpi	r24, 0x30	; 48
    6236:	08 f4       	brcc	.+2      	; 0x623a <main+0x3720>
    6238:	51 c0       	rjmp	.+162    	; 0x62dc <main+0x37c2>
    623a:	fe 01       	movw	r30, r28
    623c:	eb 55       	subi	r30, 0x5B	; 91
    623e:	fe 4f       	sbci	r31, 0xFE	; 254
    6240:	80 81       	ld	r24, Z
    6242:	8a 33       	cpi	r24, 0x3A	; 58
    6244:	08 f0       	brcs	.+2      	; 0x6248 <main+0x372e>
    6246:	4a c0       	rjmp	.+148    	; 0x62dc <main+0x37c2>
    6248:	fe 01       	movw	r30, r28
    624a:	e5 55       	subi	r30, 0x55	; 85
    624c:	fe 4f       	sbci	r31, 0xFE	; 254
    624e:	80 81       	ld	r24, Z
    6250:	85 30       	cpi	r24, 0x05	; 5
    6252:	09 f0       	breq	.+2      	; 0x6256 <main+0x373c>
    6254:	43 c0       	rjmp	.+134    	; 0x62dc <main+0x37c2>
				{
					LCD_SendChar(tmp);
    6256:	fe 01       	movw	r30, r28
    6258:	eb 55       	subi	r30, 0x5B	; 91
    625a:	fe 4f       	sbci	r31, 0xFE	; 254
    625c:	80 81       	ld	r24, Z
    625e:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <LCD_SendChar>
					var1=var1*10;
    6262:	8e 01       	movw	r16, r28
    6264:	00 55       	subi	r16, 0x50	; 80
    6266:	1e 4f       	sbci	r17, 0xFE	; 254
    6268:	fe 01       	movw	r30, r28
    626a:	e0 55       	subi	r30, 0x50	; 80
    626c:	fe 4f       	sbci	r31, 0xFE	; 254
    626e:	80 81       	ld	r24, Z
    6270:	91 81       	ldd	r25, Z+1	; 0x01
    6272:	a2 81       	ldd	r26, Z+2	; 0x02
    6274:	b3 81       	ldd	r27, Z+3	; 0x03
    6276:	2a e0       	ldi	r18, 0x0A	; 10
    6278:	30 e0       	ldi	r19, 0x00	; 0
    627a:	40 e0       	ldi	r20, 0x00	; 0
    627c:	50 e0       	ldi	r21, 0x00	; 0
    627e:	bc 01       	movw	r22, r24
    6280:	cd 01       	movw	r24, r26
    6282:	0e 94 68 33 	call	0x66d0	; 0x66d0 <__mulsi3>
    6286:	dc 01       	movw	r26, r24
    6288:	cb 01       	movw	r24, r22
    628a:	f8 01       	movw	r30, r16
    628c:	80 83       	st	Z, r24
    628e:	91 83       	std	Z+1, r25	; 0x01
    6290:	a2 83       	std	Z+2, r26	; 0x02
    6292:	b3 83       	std	Z+3, r27	; 0x03
					var1=var1+(tmp-'0');
    6294:	fe 01       	movw	r30, r28
    6296:	eb 55       	subi	r30, 0x5B	; 91
    6298:	fe 4f       	sbci	r31, 0xFE	; 254
    629a:	80 81       	ld	r24, Z
    629c:	88 2f       	mov	r24, r24
    629e:	90 e0       	ldi	r25, 0x00	; 0
    62a0:	c0 97       	sbiw	r24, 0x30	; 48
    62a2:	9c 01       	movw	r18, r24
    62a4:	44 27       	eor	r20, r20
    62a6:	37 fd       	sbrc	r19, 7
    62a8:	40 95       	com	r20
    62aa:	54 2f       	mov	r21, r20
    62ac:	be 01       	movw	r22, r28
    62ae:	60 55       	subi	r22, 0x50	; 80
    62b0:	7e 4f       	sbci	r23, 0xFE	; 254
    62b2:	fe 01       	movw	r30, r28
    62b4:	e0 55       	subi	r30, 0x50	; 80
    62b6:	fe 4f       	sbci	r31, 0xFE	; 254
    62b8:	80 81       	ld	r24, Z
    62ba:	91 81       	ldd	r25, Z+1	; 0x01
    62bc:	a2 81       	ldd	r26, Z+2	; 0x02
    62be:	b3 81       	ldd	r27, Z+3	; 0x03
    62c0:	82 0f       	add	r24, r18
    62c2:	93 1f       	adc	r25, r19
    62c4:	a4 1f       	adc	r26, r20
    62c6:	b5 1f       	adc	r27, r21
    62c8:	fb 01       	movw	r30, r22
    62ca:	80 83       	st	Z, r24
    62cc:	91 83       	std	Z+1, r25	; 0x01
    62ce:	a2 83       	std	Z+2, r26	; 0x02
    62d0:	b3 83       	std	Z+3, r27	; 0x03
					tmp = 0;
    62d2:	fe 01       	movw	r30, r28
    62d4:	eb 55       	subi	r30, 0x5B	; 91
    62d6:	fe 4f       	sbci	r31, 0xFE	; 254
    62d8:	10 82       	st	Z, r1
    62da:	9c cf       	rjmp	.-200    	; 0x6214 <main+0x36fa>
				}
				else if((tmp=='+'||tmp=='*'||tmp=='-'||tmp=='/')&&test==5)
    62dc:	fe 01       	movw	r30, r28
    62de:	eb 55       	subi	r30, 0x5B	; 91
    62e0:	fe 4f       	sbci	r31, 0xFE	; 254
    62e2:	80 81       	ld	r24, Z
    62e4:	8b 32       	cpi	r24, 0x2B	; 43
    62e6:	99 f0       	breq	.+38     	; 0x630e <main+0x37f4>
    62e8:	fe 01       	movw	r30, r28
    62ea:	eb 55       	subi	r30, 0x5B	; 91
    62ec:	fe 4f       	sbci	r31, 0xFE	; 254
    62ee:	80 81       	ld	r24, Z
    62f0:	8a 32       	cpi	r24, 0x2A	; 42
    62f2:	69 f0       	breq	.+26     	; 0x630e <main+0x37f4>
    62f4:	fe 01       	movw	r30, r28
    62f6:	eb 55       	subi	r30, 0x5B	; 91
    62f8:	fe 4f       	sbci	r31, 0xFE	; 254
    62fa:	80 81       	ld	r24, Z
    62fc:	8d 32       	cpi	r24, 0x2D	; 45
    62fe:	39 f0       	breq	.+14     	; 0x630e <main+0x37f4>
    6300:	fe 01       	movw	r30, r28
    6302:	eb 55       	subi	r30, 0x5B	; 91
    6304:	fe 4f       	sbci	r31, 0xFE	; 254
    6306:	80 81       	ld	r24, Z
    6308:	8f 32       	cpi	r24, 0x2F	; 47
    630a:	09 f0       	breq	.+2      	; 0x630e <main+0x37f4>
    630c:	68 c0       	rjmp	.+208    	; 0x63de <main+0x38c4>
    630e:	fe 01       	movw	r30, r28
    6310:	e5 55       	subi	r30, 0x55	; 85
    6312:	fe 4f       	sbci	r31, 0xFE	; 254
    6314:	80 81       	ld	r24, Z
    6316:	85 30       	cpi	r24, 0x05	; 5
    6318:	09 f0       	breq	.+2      	; 0x631c <main+0x3802>
    631a:	61 c0       	rjmp	.+194    	; 0x63de <main+0x38c4>
				{
					LCD_SendChar(tmp);
    631c:	fe 01       	movw	r30, r28
    631e:	eb 55       	subi	r30, 0x5B	; 91
    6320:	fe 4f       	sbci	r31, 0xFE	; 254
    6322:	80 81       	ld	r24, Z
    6324:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <LCD_SendChar>
					switch(tmp)
    6328:	fe 01       	movw	r30, r28
    632a:	eb 55       	subi	r30, 0x5B	; 91
    632c:	fe 4f       	sbci	r31, 0xFE	; 254
    632e:	80 81       	ld	r24, Z
    6330:	e8 2e       	mov	r14, r24
    6332:	ff 24       	eor	r15, r15
    6334:	cf 52       	subi	r28, 0x2F	; 47
    6336:	de 4f       	sbci	r29, 0xFE	; 254
    6338:	f9 82       	std	Y+1, r15	; 0x01
    633a:	e8 82       	st	Y, r14
    633c:	c1 5d       	subi	r28, 0xD1	; 209
    633e:	d1 40       	sbci	r29, 0x01	; 1
    6340:	cf 52       	subi	r28, 0x2F	; 47
    6342:	de 4f       	sbci	r29, 0xFE	; 254
    6344:	08 81       	ld	r16, Y
    6346:	19 81       	ldd	r17, Y+1	; 0x01
    6348:	c1 5d       	subi	r28, 0xD1	; 209
    634a:	d1 40       	sbci	r29, 0x01	; 1
    634c:	0b 32       	cpi	r16, 0x2B	; 43
    634e:	11 05       	cpc	r17, r1
    6350:	31 f1       	breq	.+76     	; 0x639e <main+0x3884>
    6352:	cf 52       	subi	r28, 0x2F	; 47
    6354:	de 4f       	sbci	r29, 0xFE	; 254
    6356:	28 81       	ld	r18, Y
    6358:	39 81       	ldd	r19, Y+1	; 0x01
    635a:	c1 5d       	subi	r28, 0xD1	; 209
    635c:	d1 40       	sbci	r29, 0x01	; 1
    635e:	2c 32       	cpi	r18, 0x2C	; 44
    6360:	31 05       	cpc	r19, r1
    6362:	54 f4       	brge	.+20     	; 0x6378 <main+0x385e>
    6364:	cf 52       	subi	r28, 0x2F	; 47
    6366:	de 4f       	sbci	r29, 0xFE	; 254
    6368:	88 81       	ld	r24, Y
    636a:	99 81       	ldd	r25, Y+1	; 0x01
    636c:	c1 5d       	subi	r28, 0xD1	; 209
    636e:	d1 40       	sbci	r29, 0x01	; 1
    6370:	8a 32       	cpi	r24, 0x2A	; 42
    6372:	91 05       	cpc	r25, r1
    6374:	f9 f0       	breq	.+62     	; 0x63b4 <main+0x389a>
    6376:	29 c0       	rjmp	.+82     	; 0x63ca <main+0x38b0>
    6378:	cf 52       	subi	r28, 0x2F	; 47
    637a:	de 4f       	sbci	r29, 0xFE	; 254
    637c:	e8 81       	ld	r30, Y
    637e:	f9 81       	ldd	r31, Y+1	; 0x01
    6380:	c1 5d       	subi	r28, 0xD1	; 209
    6382:	d1 40       	sbci	r29, 0x01	; 1
    6384:	ed 32       	cpi	r30, 0x2D	; 45
    6386:	f1 05       	cpc	r31, r1
    6388:	79 f0       	breq	.+30     	; 0x63a8 <main+0x388e>
    638a:	cf 52       	subi	r28, 0x2F	; 47
    638c:	de 4f       	sbci	r29, 0xFE	; 254
    638e:	08 81       	ld	r16, Y
    6390:	19 81       	ldd	r17, Y+1	; 0x01
    6392:	c1 5d       	subi	r28, 0xD1	; 209
    6394:	d1 40       	sbci	r29, 0x01	; 1
    6396:	0f 32       	cpi	r16, 0x2F	; 47
    6398:	11 05       	cpc	r17, r1
    639a:	91 f0       	breq	.+36     	; 0x63c0 <main+0x38a6>
    639c:	16 c0       	rjmp	.+44     	; 0x63ca <main+0x38b0>
					{
					case '+':op=0;break;
    639e:	fe 01       	movw	r30, r28
    63a0:	e6 55       	subi	r30, 0x56	; 86
    63a2:	fe 4f       	sbci	r31, 0xFE	; 254
    63a4:	10 82       	st	Z, r1
    63a6:	11 c0       	rjmp	.+34     	; 0x63ca <main+0x38b0>
					case '-':op=1;break;
    63a8:	fe 01       	movw	r30, r28
    63aa:	e6 55       	subi	r30, 0x56	; 86
    63ac:	fe 4f       	sbci	r31, 0xFE	; 254
    63ae:	81 e0       	ldi	r24, 0x01	; 1
    63b0:	80 83       	st	Z, r24
    63b2:	0b c0       	rjmp	.+22     	; 0x63ca <main+0x38b0>
					case '*':op=2;break;
    63b4:	fe 01       	movw	r30, r28
    63b6:	e6 55       	subi	r30, 0x56	; 86
    63b8:	fe 4f       	sbci	r31, 0xFE	; 254
    63ba:	82 e0       	ldi	r24, 0x02	; 2
    63bc:	80 83       	st	Z, r24
    63be:	05 c0       	rjmp	.+10     	; 0x63ca <main+0x38b0>
					case '/':op=3;break;
    63c0:	fe 01       	movw	r30, r28
    63c2:	e6 55       	subi	r30, 0x56	; 86
    63c4:	fe 4f       	sbci	r31, 0xFE	; 254
    63c6:	83 e0       	ldi	r24, 0x03	; 3
    63c8:	80 83       	st	Z, r24
					}
					test=20;
    63ca:	fe 01       	movw	r30, r28
    63cc:	e5 55       	subi	r30, 0x55	; 85
    63ce:	fe 4f       	sbci	r31, 0xFE	; 254
    63d0:	84 e1       	ldi	r24, 0x14	; 20
    63d2:	80 83       	st	Z, r24
					tmp = 0;
    63d4:	fe 01       	movw	r30, r28
    63d6:	eb 55       	subi	r30, 0x5B	; 91
    63d8:	fe 4f       	sbci	r31, 0xFE	; 254
    63da:	10 82       	st	Z, r1
    63dc:	1b cf       	rjmp	.-458    	; 0x6214 <main+0x36fa>
				}
				else if (tmp>='0'&&tmp<='9'&&test==20)
    63de:	fe 01       	movw	r30, r28
    63e0:	eb 55       	subi	r30, 0x5B	; 91
    63e2:	fe 4f       	sbci	r31, 0xFE	; 254
    63e4:	80 81       	ld	r24, Z
    63e6:	80 33       	cpi	r24, 0x30	; 48
    63e8:	08 f4       	brcc	.+2      	; 0x63ec <main+0x38d2>
    63ea:	51 c0       	rjmp	.+162    	; 0x648e <main+0x3974>
    63ec:	fe 01       	movw	r30, r28
    63ee:	eb 55       	subi	r30, 0x5B	; 91
    63f0:	fe 4f       	sbci	r31, 0xFE	; 254
    63f2:	80 81       	ld	r24, Z
    63f4:	8a 33       	cpi	r24, 0x3A	; 58
    63f6:	08 f0       	brcs	.+2      	; 0x63fa <main+0x38e0>
    63f8:	4a c0       	rjmp	.+148    	; 0x648e <main+0x3974>
    63fa:	fe 01       	movw	r30, r28
    63fc:	e5 55       	subi	r30, 0x55	; 85
    63fe:	fe 4f       	sbci	r31, 0xFE	; 254
    6400:	80 81       	ld	r24, Z
    6402:	84 31       	cpi	r24, 0x14	; 20
    6404:	09 f0       	breq	.+2      	; 0x6408 <main+0x38ee>
    6406:	43 c0       	rjmp	.+134    	; 0x648e <main+0x3974>
				{
					LCD_SendChar(tmp);
    6408:	fe 01       	movw	r30, r28
    640a:	eb 55       	subi	r30, 0x5B	; 91
    640c:	fe 4f       	sbci	r31, 0xFE	; 254
    640e:	80 81       	ld	r24, Z
    6410:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <LCD_SendChar>
					var2=var2*10;
    6414:	8e 01       	movw	r16, r28
    6416:	04 55       	subi	r16, 0x54	; 84
    6418:	1e 4f       	sbci	r17, 0xFE	; 254
    641a:	fe 01       	movw	r30, r28
    641c:	e4 55       	subi	r30, 0x54	; 84
    641e:	fe 4f       	sbci	r31, 0xFE	; 254
    6420:	80 81       	ld	r24, Z
    6422:	91 81       	ldd	r25, Z+1	; 0x01
    6424:	a2 81       	ldd	r26, Z+2	; 0x02
    6426:	b3 81       	ldd	r27, Z+3	; 0x03
    6428:	2a e0       	ldi	r18, 0x0A	; 10
    642a:	30 e0       	ldi	r19, 0x00	; 0
    642c:	40 e0       	ldi	r20, 0x00	; 0
    642e:	50 e0       	ldi	r21, 0x00	; 0
    6430:	bc 01       	movw	r22, r24
    6432:	cd 01       	movw	r24, r26
    6434:	0e 94 68 33 	call	0x66d0	; 0x66d0 <__mulsi3>
    6438:	dc 01       	movw	r26, r24
    643a:	cb 01       	movw	r24, r22
    643c:	f8 01       	movw	r30, r16
    643e:	80 83       	st	Z, r24
    6440:	91 83       	std	Z+1, r25	; 0x01
    6442:	a2 83       	std	Z+2, r26	; 0x02
    6444:	b3 83       	std	Z+3, r27	; 0x03
					var2=var2+(tmp-'0');
    6446:	fe 01       	movw	r30, r28
    6448:	eb 55       	subi	r30, 0x5B	; 91
    644a:	fe 4f       	sbci	r31, 0xFE	; 254
    644c:	80 81       	ld	r24, Z
    644e:	88 2f       	mov	r24, r24
    6450:	90 e0       	ldi	r25, 0x00	; 0
    6452:	c0 97       	sbiw	r24, 0x30	; 48
    6454:	9c 01       	movw	r18, r24
    6456:	44 27       	eor	r20, r20
    6458:	37 fd       	sbrc	r19, 7
    645a:	40 95       	com	r20
    645c:	54 2f       	mov	r21, r20
    645e:	be 01       	movw	r22, r28
    6460:	64 55       	subi	r22, 0x54	; 84
    6462:	7e 4f       	sbci	r23, 0xFE	; 254
    6464:	fe 01       	movw	r30, r28
    6466:	e4 55       	subi	r30, 0x54	; 84
    6468:	fe 4f       	sbci	r31, 0xFE	; 254
    646a:	80 81       	ld	r24, Z
    646c:	91 81       	ldd	r25, Z+1	; 0x01
    646e:	a2 81       	ldd	r26, Z+2	; 0x02
    6470:	b3 81       	ldd	r27, Z+3	; 0x03
    6472:	82 0f       	add	r24, r18
    6474:	93 1f       	adc	r25, r19
    6476:	a4 1f       	adc	r26, r20
    6478:	b5 1f       	adc	r27, r21
    647a:	fb 01       	movw	r30, r22
    647c:	80 83       	st	Z, r24
    647e:	91 83       	std	Z+1, r25	; 0x01
    6480:	a2 83       	std	Z+2, r26	; 0x02
    6482:	b3 83       	std	Z+3, r27	; 0x03
					tmp = 0;
    6484:	fe 01       	movw	r30, r28
    6486:	eb 55       	subi	r30, 0x5B	; 91
    6488:	fe 4f       	sbci	r31, 0xFE	; 254
    648a:	10 82       	st	Z, r1
    648c:	c3 ce       	rjmp	.-634    	; 0x6214 <main+0x36fa>

				}
				else if(tmp=='=')
    648e:	fe 01       	movw	r30, r28
    6490:	eb 55       	subi	r30, 0x5B	; 91
    6492:	fe 4f       	sbci	r31, 0xFE	; 254
    6494:	80 81       	ld	r24, Z
    6496:	8d 33       	cpi	r24, 0x3D	; 61
    6498:	09 f0       	breq	.+2      	; 0x649c <main+0x3982>
    649a:	ef c0       	rjmp	.+478    	; 0x667a <main+0x3b60>
				{
					LCD_SendChar(tmp);
    649c:	fe 01       	movw	r30, r28
    649e:	eb 55       	subi	r30, 0x5B	; 91
    64a0:	fe 4f       	sbci	r31, 0xFE	; 254
    64a2:	80 81       	ld	r24, Z
    64a4:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <LCD_SendChar>
					switch(op)
    64a8:	fe 01       	movw	r30, r28
    64aa:	e6 55       	subi	r30, 0x56	; 86
    64ac:	fe 4f       	sbci	r31, 0xFE	; 254
    64ae:	80 81       	ld	r24, Z
    64b0:	e8 2e       	mov	r14, r24
    64b2:	ff 24       	eor	r15, r15
    64b4:	c1 53       	subi	r28, 0x31	; 49
    64b6:	de 4f       	sbci	r29, 0xFE	; 254
    64b8:	f9 82       	std	Y+1, r15	; 0x01
    64ba:	e8 82       	st	Y, r14
    64bc:	cf 5c       	subi	r28, 0xCF	; 207
    64be:	d1 40       	sbci	r29, 0x01	; 1
    64c0:	c1 53       	subi	r28, 0x31	; 49
    64c2:	de 4f       	sbci	r29, 0xFE	; 254
    64c4:	08 81       	ld	r16, Y
    64c6:	19 81       	ldd	r17, Y+1	; 0x01
    64c8:	cf 5c       	subi	r28, 0xCF	; 207
    64ca:	d1 40       	sbci	r29, 0x01	; 1
    64cc:	01 30       	cpi	r16, 0x01	; 1
    64ce:	11 05       	cpc	r17, r1
    64d0:	09 f4       	brne	.+2      	; 0x64d4 <main+0x39ba>
    64d2:	41 c0       	rjmp	.+130    	; 0x6556 <main+0x3a3c>
    64d4:	c1 53       	subi	r28, 0x31	; 49
    64d6:	de 4f       	sbci	r29, 0xFE	; 254
    64d8:	28 81       	ld	r18, Y
    64da:	39 81       	ldd	r19, Y+1	; 0x01
    64dc:	cf 5c       	subi	r28, 0xCF	; 207
    64de:	d1 40       	sbci	r29, 0x01	; 1
    64e0:	22 30       	cpi	r18, 0x02	; 2
    64e2:	31 05       	cpc	r19, r1
    64e4:	4c f4       	brge	.+18     	; 0x64f8 <main+0x39de>
    64e6:	c1 53       	subi	r28, 0x31	; 49
    64e8:	de 4f       	sbci	r29, 0xFE	; 254
    64ea:	88 81       	ld	r24, Y
    64ec:	99 81       	ldd	r25, Y+1	; 0x01
    64ee:	cf 5c       	subi	r28, 0xCF	; 207
    64f0:	d1 40       	sbci	r29, 0x01	; 1
    64f2:	00 97       	sbiw	r24, 0x00	; 0
    64f4:	a9 f0       	breq	.+42     	; 0x6520 <main+0x3a06>
    64f6:	9e c0       	rjmp	.+316    	; 0x6634 <main+0x3b1a>
    64f8:	c1 53       	subi	r28, 0x31	; 49
    64fa:	de 4f       	sbci	r29, 0xFE	; 254
    64fc:	e8 81       	ld	r30, Y
    64fe:	f9 81       	ldd	r31, Y+1	; 0x01
    6500:	cf 5c       	subi	r28, 0xCF	; 207
    6502:	d1 40       	sbci	r29, 0x01	; 1
    6504:	e2 30       	cpi	r30, 0x02	; 2
    6506:	f1 05       	cpc	r31, r1
    6508:	09 f4       	brne	.+2      	; 0x650c <main+0x39f2>
    650a:	78 c0       	rjmp	.+240    	; 0x65fc <main+0x3ae2>
    650c:	c1 53       	subi	r28, 0x31	; 49
    650e:	de 4f       	sbci	r29, 0xFE	; 254
    6510:	08 81       	ld	r16, Y
    6512:	19 81       	ldd	r17, Y+1	; 0x01
    6514:	cf 5c       	subi	r28, 0xCF	; 207
    6516:	d1 40       	sbci	r29, 0x01	; 1
    6518:	03 30       	cpi	r16, 0x03	; 3
    651a:	11 05       	cpc	r17, r1
    651c:	d9 f1       	breq	.+118    	; 0x6594 <main+0x3a7a>
    651e:	8a c0       	rjmp	.+276    	; 0x6634 <main+0x3b1a>
					{
						case 0:result=var1+var2;break;
    6520:	fe 01       	movw	r30, r28
    6522:	e0 55       	subi	r30, 0x50	; 80
    6524:	fe 4f       	sbci	r31, 0xFE	; 254
    6526:	de 01       	movw	r26, r28
    6528:	a4 55       	subi	r26, 0x54	; 84
    652a:	be 4f       	sbci	r27, 0xFE	; 254
    652c:	20 81       	ld	r18, Z
    652e:	31 81       	ldd	r19, Z+1	; 0x01
    6530:	42 81       	ldd	r20, Z+2	; 0x02
    6532:	53 81       	ldd	r21, Z+3	; 0x03
    6534:	8d 91       	ld	r24, X+
    6536:	9d 91       	ld	r25, X+
    6538:	0d 90       	ld	r0, X+
    653a:	bc 91       	ld	r27, X
    653c:	a0 2d       	mov	r26, r0
    653e:	82 0f       	add	r24, r18
    6540:	93 1f       	adc	r25, r19
    6542:	a4 1f       	adc	r26, r20
    6544:	b5 1f       	adc	r27, r21
    6546:	fe 01       	movw	r30, r28
    6548:	ea 55       	subi	r30, 0x5A	; 90
    654a:	fe 4f       	sbci	r31, 0xFE	; 254
    654c:	80 83       	st	Z, r24
    654e:	91 83       	std	Z+1, r25	; 0x01
    6550:	a2 83       	std	Z+2, r26	; 0x02
    6552:	b3 83       	std	Z+3, r27	; 0x03
    6554:	6f c0       	rjmp	.+222    	; 0x6634 <main+0x3b1a>
						case 1:result=var1-var2;break;
    6556:	fe 01       	movw	r30, r28
    6558:	e0 55       	subi	r30, 0x50	; 80
    655a:	fe 4f       	sbci	r31, 0xFE	; 254
    655c:	de 01       	movw	r26, r28
    655e:	a4 55       	subi	r26, 0x54	; 84
    6560:	be 4f       	sbci	r27, 0xFE	; 254
    6562:	20 81       	ld	r18, Z
    6564:	31 81       	ldd	r19, Z+1	; 0x01
    6566:	42 81       	ldd	r20, Z+2	; 0x02
    6568:	53 81       	ldd	r21, Z+3	; 0x03
    656a:	8d 91       	ld	r24, X+
    656c:	9d 91       	ld	r25, X+
    656e:	0d 90       	ld	r0, X+
    6570:	bc 91       	ld	r27, X
    6572:	a0 2d       	mov	r26, r0
    6574:	79 01       	movw	r14, r18
    6576:	8a 01       	movw	r16, r20
    6578:	e8 1a       	sub	r14, r24
    657a:	f9 0a       	sbc	r15, r25
    657c:	0a 0b       	sbc	r16, r26
    657e:	1b 0b       	sbc	r17, r27
    6580:	d8 01       	movw	r26, r16
    6582:	c7 01       	movw	r24, r14
    6584:	fe 01       	movw	r30, r28
    6586:	ea 55       	subi	r30, 0x5A	; 90
    6588:	fe 4f       	sbci	r31, 0xFE	; 254
    658a:	80 83       	st	Z, r24
    658c:	91 83       	std	Z+1, r25	; 0x01
    658e:	a2 83       	std	Z+2, r26	; 0x02
    6590:	b3 83       	std	Z+3, r27	; 0x03
    6592:	50 c0       	rjmp	.+160    	; 0x6634 <main+0x3b1a>
						case 3:if(var2==0)
    6594:	fe 01       	movw	r30, r28
    6596:	e4 55       	subi	r30, 0x54	; 84
    6598:	fe 4f       	sbci	r31, 0xFE	; 254
    659a:	80 81       	ld	r24, Z
    659c:	91 81       	ldd	r25, Z+1	; 0x01
    659e:	a2 81       	ldd	r26, Z+2	; 0x02
    65a0:	b3 81       	ldd	r27, Z+3	; 0x03
    65a2:	00 97       	sbiw	r24, 0x00	; 0
    65a4:	a1 05       	cpc	r26, r1
    65a6:	b1 05       	cpc	r27, r1
    65a8:	61 f4       	brne	.+24     	; 0x65c2 <main+0x3aa8>
						{
							result='a';
    65aa:	fe 01       	movw	r30, r28
    65ac:	ea 55       	subi	r30, 0x5A	; 90
    65ae:	fe 4f       	sbci	r31, 0xFE	; 254
    65b0:	81 e6       	ldi	r24, 0x61	; 97
    65b2:	90 e0       	ldi	r25, 0x00	; 0
    65b4:	a0 e0       	ldi	r26, 0x00	; 0
    65b6:	b0 e0       	ldi	r27, 0x00	; 0
    65b8:	80 83       	st	Z, r24
    65ba:	91 83       	std	Z+1, r25	; 0x01
    65bc:	a2 83       	std	Z+2, r26	; 0x02
    65be:	b3 83       	std	Z+3, r27	; 0x03
    65c0:	39 c0       	rjmp	.+114    	; 0x6634 <main+0x3b1a>
							break;
						}
							result=var1/var2;break;
    65c2:	fe 01       	movw	r30, r28
    65c4:	e0 55       	subi	r30, 0x50	; 80
    65c6:	fe 4f       	sbci	r31, 0xFE	; 254
    65c8:	9e 01       	movw	r18, r28
    65ca:	24 55       	subi	r18, 0x54	; 84
    65cc:	3e 4f       	sbci	r19, 0xFE	; 254
    65ce:	80 81       	ld	r24, Z
    65d0:	91 81       	ldd	r25, Z+1	; 0x01
    65d2:	a2 81       	ldd	r26, Z+2	; 0x02
    65d4:	b3 81       	ldd	r27, Z+3	; 0x03
    65d6:	f9 01       	movw	r30, r18
    65d8:	20 81       	ld	r18, Z
    65da:	31 81       	ldd	r19, Z+1	; 0x01
    65dc:	42 81       	ldd	r20, Z+2	; 0x02
    65de:	53 81       	ldd	r21, Z+3	; 0x03
    65e0:	bc 01       	movw	r22, r24
    65e2:	cd 01       	movw	r24, r26
    65e4:	0e 94 93 33 	call	0x6726	; 0x6726 <__udivmodsi4>
    65e8:	da 01       	movw	r26, r20
    65ea:	c9 01       	movw	r24, r18
    65ec:	fe 01       	movw	r30, r28
    65ee:	ea 55       	subi	r30, 0x5A	; 90
    65f0:	fe 4f       	sbci	r31, 0xFE	; 254
    65f2:	80 83       	st	Z, r24
    65f4:	91 83       	std	Z+1, r25	; 0x01
    65f6:	a2 83       	std	Z+2, r26	; 0x02
    65f8:	b3 83       	std	Z+3, r27	; 0x03
    65fa:	1c c0       	rjmp	.+56     	; 0x6634 <main+0x3b1a>
							case 2:result=var1*var2;break;
    65fc:	fe 01       	movw	r30, r28
    65fe:	e0 55       	subi	r30, 0x50	; 80
    6600:	fe 4f       	sbci	r31, 0xFE	; 254
    6602:	9e 01       	movw	r18, r28
    6604:	24 55       	subi	r18, 0x54	; 84
    6606:	3e 4f       	sbci	r19, 0xFE	; 254
    6608:	80 81       	ld	r24, Z
    660a:	91 81       	ldd	r25, Z+1	; 0x01
    660c:	a2 81       	ldd	r26, Z+2	; 0x02
    660e:	b3 81       	ldd	r27, Z+3	; 0x03
    6610:	f9 01       	movw	r30, r18
    6612:	20 81       	ld	r18, Z
    6614:	31 81       	ldd	r19, Z+1	; 0x01
    6616:	42 81       	ldd	r20, Z+2	; 0x02
    6618:	53 81       	ldd	r21, Z+3	; 0x03
    661a:	bc 01       	movw	r22, r24
    661c:	cd 01       	movw	r24, r26
    661e:	0e 94 68 33 	call	0x66d0	; 0x66d0 <__mulsi3>
    6622:	dc 01       	movw	r26, r24
    6624:	cb 01       	movw	r24, r22
    6626:	fe 01       	movw	r30, r28
    6628:	ea 55       	subi	r30, 0x5A	; 90
    662a:	fe 4f       	sbci	r31, 0xFE	; 254
    662c:	80 83       	st	Z, r24
    662e:	91 83       	std	Z+1, r25	; 0x01
    6630:	a2 83       	std	Z+2, r26	; 0x02
    6632:	b3 83       	std	Z+3, r27	; 0x03

					}
					if(result!='a')
    6634:	fe 01       	movw	r30, r28
    6636:	ea 55       	subi	r30, 0x5A	; 90
    6638:	fe 4f       	sbci	r31, 0xFE	; 254
    663a:	80 81       	ld	r24, Z
    663c:	91 81       	ldd	r25, Z+1	; 0x01
    663e:	a2 81       	ldd	r26, Z+2	; 0x02
    6640:	b3 81       	ldd	r27, Z+3	; 0x03
    6642:	81 36       	cpi	r24, 0x61	; 97
    6644:	91 05       	cpc	r25, r1
    6646:	a1 05       	cpc	r26, r1
    6648:	b1 05       	cpc	r27, r1
    664a:	81 f0       	breq	.+32     	; 0x666c <main+0x3b52>
					{
					Lcd_IntToChar(result);
    664c:	fe 01       	movw	r30, r28
    664e:	ea 55       	subi	r30, 0x5A	; 90
    6650:	fe 4f       	sbci	r31, 0xFE	; 254
    6652:	80 81       	ld	r24, Z
    6654:	91 81       	ldd	r25, Z+1	; 0x01
    6656:	a2 81       	ldd	r26, Z+2	; 0x02
    6658:	b3 81       	ldd	r27, Z+3	; 0x03
    665a:	bc 01       	movw	r22, r24
    665c:	cd 01       	movw	r24, r26
    665e:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <Lcd_IntToChar>
					tmp = 0;
    6662:	fe 01       	movw	r30, r28
    6664:	eb 55       	subi	r30, 0x5B	; 91
    6666:	fe 4f       	sbci	r31, 0xFE	; 254
    6668:	10 82       	st	Z, r1
    666a:	d4 cd       	rjmp	.-1112   	; 0x6214 <main+0x36fa>
					}
					else
					{
					LCD_Clear();
    666c:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
					LCD_SendString("un known");
    6670:	8f e7       	ldi	r24, 0x7F	; 127
    6672:	91 e0       	ldi	r25, 0x01	; 1
    6674:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <LCD_SendString>
    6678:	cd cd       	rjmp	.-1126   	; 0x6214 <main+0x36fa>

					}

				}
				else if (tmp=='n')
    667a:	fe 01       	movw	r30, r28
    667c:	eb 55       	subi	r30, 0x5B	; 91
    667e:	fe 4f       	sbci	r31, 0xFE	; 254
    6680:	80 81       	ld	r24, Z
    6682:	8e 36       	cpi	r24, 0x6E	; 110
    6684:	09 f0       	breq	.+2      	; 0x6688 <main+0x3b6e>
    6686:	c6 cd       	rjmp	.-1140   	; 0x6214 <main+0x36fa>
					{
						LCD_Clear();
    6688:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <LCD_Clear>
						test=5;
    668c:	fe 01       	movw	r30, r28
    668e:	e5 55       	subi	r30, 0x55	; 85
    6690:	fe 4f       	sbci	r31, 0xFE	; 254
    6692:	85 e0       	ldi	r24, 0x05	; 5
    6694:	80 83       	st	Z, r24
						var1=0;
    6696:	fe 01       	movw	r30, r28
    6698:	e0 55       	subi	r30, 0x50	; 80
    669a:	fe 4f       	sbci	r31, 0xFE	; 254
    669c:	10 82       	st	Z, r1
    669e:	11 82       	std	Z+1, r1	; 0x01
    66a0:	12 82       	std	Z+2, r1	; 0x02
    66a2:	13 82       	std	Z+3, r1	; 0x03
						var2=0;
    66a4:	fe 01       	movw	r30, r28
    66a6:	e4 55       	subi	r30, 0x54	; 84
    66a8:	fe 4f       	sbci	r31, 0xFE	; 254
    66aa:	10 82       	st	Z, r1
    66ac:	11 82       	std	Z+1, r1	; 0x01
    66ae:	12 82       	std	Z+2, r1	; 0x02
    66b0:	13 82       	std	Z+3, r1	; 0x03
    66b2:	b0 cd       	rjmp	.-1184   	; 0x6214 <main+0x36fa>

}



}
    66b4:	cb 52       	subi	r28, 0x2B	; 43
    66b6:	de 4f       	sbci	r29, 0xFE	; 254
    66b8:	0f b6       	in	r0, 0x3f	; 63
    66ba:	f8 94       	cli
    66bc:	de bf       	out	0x3e, r29	; 62
    66be:	0f be       	out	0x3f, r0	; 63
    66c0:	cd bf       	out	0x3d, r28	; 61
    66c2:	cf 91       	pop	r28
    66c4:	df 91       	pop	r29
    66c6:	1f 91       	pop	r17
    66c8:	0f 91       	pop	r16
    66ca:	ff 90       	pop	r15
    66cc:	ef 90       	pop	r14
    66ce:	08 95       	ret

000066d0 <__mulsi3>:
    66d0:	62 9f       	mul	r22, r18
    66d2:	d0 01       	movw	r26, r0
    66d4:	73 9f       	mul	r23, r19
    66d6:	f0 01       	movw	r30, r0
    66d8:	82 9f       	mul	r24, r18
    66da:	e0 0d       	add	r30, r0
    66dc:	f1 1d       	adc	r31, r1
    66de:	64 9f       	mul	r22, r20
    66e0:	e0 0d       	add	r30, r0
    66e2:	f1 1d       	adc	r31, r1
    66e4:	92 9f       	mul	r25, r18
    66e6:	f0 0d       	add	r31, r0
    66e8:	83 9f       	mul	r24, r19
    66ea:	f0 0d       	add	r31, r0
    66ec:	74 9f       	mul	r23, r20
    66ee:	f0 0d       	add	r31, r0
    66f0:	65 9f       	mul	r22, r21
    66f2:	f0 0d       	add	r31, r0
    66f4:	99 27       	eor	r25, r25
    66f6:	72 9f       	mul	r23, r18
    66f8:	b0 0d       	add	r27, r0
    66fa:	e1 1d       	adc	r30, r1
    66fc:	f9 1f       	adc	r31, r25
    66fe:	63 9f       	mul	r22, r19
    6700:	b0 0d       	add	r27, r0
    6702:	e1 1d       	adc	r30, r1
    6704:	f9 1f       	adc	r31, r25
    6706:	bd 01       	movw	r22, r26
    6708:	cf 01       	movw	r24, r30
    670a:	11 24       	eor	r1, r1
    670c:	08 95       	ret

0000670e <__udivmodqi4>:
    670e:	99 1b       	sub	r25, r25
    6710:	79 e0       	ldi	r23, 0x09	; 9
    6712:	04 c0       	rjmp	.+8      	; 0x671c <__udivmodqi4_ep>

00006714 <__udivmodqi4_loop>:
    6714:	99 1f       	adc	r25, r25
    6716:	96 17       	cp	r25, r22
    6718:	08 f0       	brcs	.+2      	; 0x671c <__udivmodqi4_ep>
    671a:	96 1b       	sub	r25, r22

0000671c <__udivmodqi4_ep>:
    671c:	88 1f       	adc	r24, r24
    671e:	7a 95       	dec	r23
    6720:	c9 f7       	brne	.-14     	; 0x6714 <__udivmodqi4_loop>
    6722:	80 95       	com	r24
    6724:	08 95       	ret

00006726 <__udivmodsi4>:
    6726:	a1 e2       	ldi	r26, 0x21	; 33
    6728:	1a 2e       	mov	r1, r26
    672a:	aa 1b       	sub	r26, r26
    672c:	bb 1b       	sub	r27, r27
    672e:	fd 01       	movw	r30, r26
    6730:	0d c0       	rjmp	.+26     	; 0x674c <__udivmodsi4_ep>

00006732 <__udivmodsi4_loop>:
    6732:	aa 1f       	adc	r26, r26
    6734:	bb 1f       	adc	r27, r27
    6736:	ee 1f       	adc	r30, r30
    6738:	ff 1f       	adc	r31, r31
    673a:	a2 17       	cp	r26, r18
    673c:	b3 07       	cpc	r27, r19
    673e:	e4 07       	cpc	r30, r20
    6740:	f5 07       	cpc	r31, r21
    6742:	20 f0       	brcs	.+8      	; 0x674c <__udivmodsi4_ep>
    6744:	a2 1b       	sub	r26, r18
    6746:	b3 0b       	sbc	r27, r19
    6748:	e4 0b       	sbc	r30, r20
    674a:	f5 0b       	sbc	r31, r21

0000674c <__udivmodsi4_ep>:
    674c:	66 1f       	adc	r22, r22
    674e:	77 1f       	adc	r23, r23
    6750:	88 1f       	adc	r24, r24
    6752:	99 1f       	adc	r25, r25
    6754:	1a 94       	dec	r1
    6756:	69 f7       	brne	.-38     	; 0x6732 <__udivmodsi4_loop>
    6758:	60 95       	com	r22
    675a:	70 95       	com	r23
    675c:	80 95       	com	r24
    675e:	90 95       	com	r25
    6760:	9b 01       	movw	r18, r22
    6762:	ac 01       	movw	r20, r24
    6764:	bd 01       	movw	r22, r26
    6766:	cf 01       	movw	r24, r30
    6768:	08 95       	ret

0000676a <__divmodsi4>:
    676a:	97 fb       	bst	r25, 7
    676c:	09 2e       	mov	r0, r25
    676e:	05 26       	eor	r0, r21
    6770:	0e d0       	rcall	.+28     	; 0x678e <__divmodsi4_neg1>
    6772:	57 fd       	sbrc	r21, 7
    6774:	04 d0       	rcall	.+8      	; 0x677e <__divmodsi4_neg2>
    6776:	d7 df       	rcall	.-82     	; 0x6726 <__udivmodsi4>
    6778:	0a d0       	rcall	.+20     	; 0x678e <__divmodsi4_neg1>
    677a:	00 1c       	adc	r0, r0
    677c:	38 f4       	brcc	.+14     	; 0x678c <__divmodsi4_exit>

0000677e <__divmodsi4_neg2>:
    677e:	50 95       	com	r21
    6780:	40 95       	com	r20
    6782:	30 95       	com	r19
    6784:	21 95       	neg	r18
    6786:	3f 4f       	sbci	r19, 0xFF	; 255
    6788:	4f 4f       	sbci	r20, 0xFF	; 255
    678a:	5f 4f       	sbci	r21, 0xFF	; 255

0000678c <__divmodsi4_exit>:
    678c:	08 95       	ret

0000678e <__divmodsi4_neg1>:
    678e:	f6 f7       	brtc	.-4      	; 0x678c <__divmodsi4_exit>
    6790:	90 95       	com	r25
    6792:	80 95       	com	r24
    6794:	70 95       	com	r23
    6796:	61 95       	neg	r22
    6798:	7f 4f       	sbci	r23, 0xFF	; 255
    679a:	8f 4f       	sbci	r24, 0xFF	; 255
    679c:	9f 4f       	sbci	r25, 0xFF	; 255
    679e:	08 95       	ret

000067a0 <__prologue_saves__>:
    67a0:	2f 92       	push	r2
    67a2:	3f 92       	push	r3
    67a4:	4f 92       	push	r4
    67a6:	5f 92       	push	r5
    67a8:	6f 92       	push	r6
    67aa:	7f 92       	push	r7
    67ac:	8f 92       	push	r8
    67ae:	9f 92       	push	r9
    67b0:	af 92       	push	r10
    67b2:	bf 92       	push	r11
    67b4:	cf 92       	push	r12
    67b6:	df 92       	push	r13
    67b8:	ef 92       	push	r14
    67ba:	ff 92       	push	r15
    67bc:	0f 93       	push	r16
    67be:	1f 93       	push	r17
    67c0:	cf 93       	push	r28
    67c2:	df 93       	push	r29
    67c4:	cd b7       	in	r28, 0x3d	; 61
    67c6:	de b7       	in	r29, 0x3e	; 62
    67c8:	ca 1b       	sub	r28, r26
    67ca:	db 0b       	sbc	r29, r27
    67cc:	0f b6       	in	r0, 0x3f	; 63
    67ce:	f8 94       	cli
    67d0:	de bf       	out	0x3e, r29	; 62
    67d2:	0f be       	out	0x3f, r0	; 63
    67d4:	cd bf       	out	0x3d, r28	; 61
    67d6:	09 94       	ijmp

000067d8 <__epilogue_restores__>:
    67d8:	2a 88       	ldd	r2, Y+18	; 0x12
    67da:	39 88       	ldd	r3, Y+17	; 0x11
    67dc:	48 88       	ldd	r4, Y+16	; 0x10
    67de:	5f 84       	ldd	r5, Y+15	; 0x0f
    67e0:	6e 84       	ldd	r6, Y+14	; 0x0e
    67e2:	7d 84       	ldd	r7, Y+13	; 0x0d
    67e4:	8c 84       	ldd	r8, Y+12	; 0x0c
    67e6:	9b 84       	ldd	r9, Y+11	; 0x0b
    67e8:	aa 84       	ldd	r10, Y+10	; 0x0a
    67ea:	b9 84       	ldd	r11, Y+9	; 0x09
    67ec:	c8 84       	ldd	r12, Y+8	; 0x08
    67ee:	df 80       	ldd	r13, Y+7	; 0x07
    67f0:	ee 80       	ldd	r14, Y+6	; 0x06
    67f2:	fd 80       	ldd	r15, Y+5	; 0x05
    67f4:	0c 81       	ldd	r16, Y+4	; 0x04
    67f6:	1b 81       	ldd	r17, Y+3	; 0x03
    67f8:	aa 81       	ldd	r26, Y+2	; 0x02
    67fa:	b9 81       	ldd	r27, Y+1	; 0x01
    67fc:	ce 0f       	add	r28, r30
    67fe:	d1 1d       	adc	r29, r1
    6800:	0f b6       	in	r0, 0x3f	; 63
    6802:	f8 94       	cli
    6804:	de bf       	out	0x3e, r29	; 62
    6806:	0f be       	out	0x3f, r0	; 63
    6808:	cd bf       	out	0x3d, r28	; 61
    680a:	ed 01       	movw	r28, r26
    680c:	08 95       	ret

0000680e <_exit>:
    680e:	f8 94       	cli

00006810 <__stop_program>:
    6810:	ff cf       	rjmp	.-2      	; 0x6810 <__stop_program>
